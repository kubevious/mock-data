kind: Ingress
apiVersion: extensions/v1beta1
metadata:
    name: book-web-ingress
    namespace: book
    selfLink: /apis/extensions/v1beta1/namespaces/book/ingresses/book-web-ingress
    uid: 452bcf4c-34bb-11ea-9cdc-42010a8001cf
    resourceVersion: '84204948'
    generation: 1
    creationTimestamp: '2020-01-11T21:42:31Z'
    labels:
        name: book-web-ingress
    annotations:
        ingress.kubernetes.io/backends: '{"k8s-be-32348--ab64a690ed0b76be":"UNHEALTHY"}'
        ingress.kubernetes.io/forwarding-rule: k8s-fw-book-book-web-ingress--ab64a690ed0b76be
        ingress.kubernetes.io/target-proxy: k8s-tp-book-book-web-ingress--ab64a690ed0b76be
        ingress.kubernetes.io/url-map: k8s-um-book-book-web-ingress--ab64a690ed0b76be
        kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"kubernetes.io/ingress.allow-http":"true"},"labels":{"name":"book-web-ingress"},"name":"book-web-ingress","namespace":"book"},"spec":{"backend":{"serviceName":"book-web-svc","servicePort":80},"rules":[{"host":"example.com","http":{"paths":[{"backend":{"serviceName":"book-web-svc","servicePort":80}}]}}]}}
        kubernetes.io/ingress.allow-http: 'true'
    finalizers:
        - networking.gke.io/ingress-finalizer
spec:
    backend:
        serviceName: book-web-svc
        servicePort: 80
    rules:
        -
            host: example.com
            http:
                paths:
                    -
                        pathType: ImplementationSpecific
                        backend:
                            serviceName: book-web-svc
                            servicePort: 80
status:
    loadBalancer:
        ingress:
            -
                ip: 34.107.196.144

