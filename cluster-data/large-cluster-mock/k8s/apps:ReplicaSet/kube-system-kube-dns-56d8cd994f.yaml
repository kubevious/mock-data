kind: ReplicaSet
apiVersion: apps/v1
metadata:
    name: kube-dns-56d8cd994f
    namespace: kube-system
    selfLink: /apis/apps/v1/namespaces/kube-system/replicasets/kube-dns-56d8cd994f
    uid: 5c5149c5-fc2b-46b7-9bd3-b986f9d8493b
    resourceVersion: '100940701'
    generation: 4
    creationTimestamp: '2020-07-27T12:46:44Z'
    labels:
        k8s-app: kube-dns
        pod-template-hash: 56d8cd994f
    annotations:
        deployment.kubernetes.io/desired-replicas: '2'
        deployment.kubernetes.io/max-replicas: '3'
        deployment.kubernetes.io/revision: '5'
    ownerReferences:
        -
            apiVersion: apps/v1
            kind: Deployment
            name: kube-dns
            uid: bec14d00-3437-11ea-9cdc-42010a8001cf
            controller: true
            blockOwnerDeletion: true
spec:
    replicas: 0
    selector:
        matchLabels:
            k8s-app: kube-dns
            pod-template-hash: 56d8cd994f
    template:
        metadata:
            creationTimestamp: null
            labels:
                k8s-app: kube-dns
                pod-template-hash: 56d8cd994f
            annotations:
                scheduler.alpha.kubernetes.io/critical-pod: ''
                seccomp.security.alpha.kubernetes.io/pod: runtime/default
        spec:
            volumes:
                -
                    name: kube-dns-config
                    configMap:
                        name: kube-dns
                        defaultMode: 420
                        optional: true
            containers:
                -
                    name: kubedns
                    image: 'k8s.gcr.io/k8s-dns-kube-dns-amd64:1.15.8'
                    args:
                        - '--domain=cluster.local.'
                        - '--dns-port=10053'
                        - '--config-dir=/kube-dns-config'
                        - '--v=2'
                    ports:
                        -
                            name: dns-local
                            containerPort: 10053
                            protocol: UDP
                        -
                            name: dns-tcp-local
                            containerPort: 10053
                            protocol: TCP
                        -
                            name: metrics
                            containerPort: 10055
                            protocol: TCP
                    env:
                        -
                            name: PROMETHEUS_PORT
                            value: '10055'
                    resources:
                        limits:
                            memory: 170Mi
                        requests:
                            cpu: 100m
                            memory: 70Mi
                    volumeMounts:
                        -
                            name: kube-dns-config
                            mountPath: /kube-dns-config
                    livenessProbe:
                        httpGet:
                            path: /healthcheck/kubedns
                            port: 10054
                            scheme: HTTP
                        initialDelaySeconds: 60
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 5
                    readinessProbe:
                        httpGet:
                            path: /readiness
                            port: 8081
                            scheme: HTTP
                        initialDelaySeconds: 3
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        runAsUser: 1001
                        runAsGroup: 1001
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
                -
                    name: dnsmasq
                    image: 'k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.8'
                    args:
                        - '-v=2'
                        - '-logtostderr'
                        - '-configDir=/etc/k8s/dns/dnsmasq-nanny'
                        - '-restartDnsmasq=true'
                        - '--'
                        - '-k'
                        - '--cache-size=1000'
                        - '--no-negcache'
                        - '--dns-forward-max=1500'
                        - '--log-facility=-'
                        - '--server=/cluster.local/127.0.0.1#10053'
                        - '--server=/in-addr.arpa/127.0.0.1#10053'
                        - '--server=/ip6.arpa/127.0.0.1#10053'
                    ports:
                        -
                            name: dns
                            containerPort: 53
                            protocol: UDP
                        -
                            name: dns-tcp
                            containerPort: 53
                            protocol: TCP
                    resources:
                        requests:
                            cpu: 150m
                            memory: 20Mi
                    volumeMounts:
                        -
                            name: kube-dns-config
                            mountPath: /etc/k8s/dns/dnsmasq-nanny
                    livenessProbe:
                        httpGet:
                            path: /healthcheck/dnsmasq
                            port: 10054
                            scheme: HTTP
                        initialDelaySeconds: 60
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 5
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        capabilities:
                            add:
                                - NET_BIND_SERVICE
                                - SETGID
                            drop:
                                - all
                -
                    name: sidecar
                    image: 'k8s.gcr.io/k8s-dns-sidecar-amd64:1.15.8'
                    args:
                        - '--v=2'
                        - '--logtostderr'
                        - >-
                            --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
                        - >-
                            --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
                    ports:
                        -
                            name: metrics
                            containerPort: 10054
                            protocol: TCP
                    resources:
                        requests:
                            cpu: 10m
                            memory: 20Mi
                    livenessProbe:
                        httpGet:
                            path: /metrics
                            port: 10054
                            scheme: HTTP
                        initialDelaySeconds: 60
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 5
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        runAsUser: 1001
                        runAsGroup: 1001
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
                -
                    name: prometheus-to-sd
                    image: 'k8s.gcr.io/prometheus-to-sd:v0.4.2'
                    command:
                        - /monitor
                        - >-
                            --source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits
                        - >-
                            --stackdriver-prefix=container.googleapis.com/internal/addons
                        - '--api-override=https://monitoring.googleapis.com/'
                        - '--pod-id=$(POD_NAME)'
                        - '--namespace-id=$(POD_NAMESPACE)'
                        - '--v=2'
                    env:
                        -
                            name: POD_NAME
                            valueFrom:
                                fieldRef:
                                    apiVersion: v1
                                    fieldPath: metadata.name
                        -
                            name: POD_NAMESPACE
                            valueFrom:
                                fieldRef:
                                    apiVersion: v1
                                    fieldPath: metadata.namespace
                    resources: {}
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        runAsUser: 1001
                        runAsGroup: 1001
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: Default
            nodeSelector:
                beta.kubernetes.io/os: linux
            serviceAccountName: kube-dns
            serviceAccount: kube-dns
            securityContext:
                fsGroup: 1001
            schedulerName: default-scheduler
            tolerations:
                -
                    key: CriticalAddonsOnly
                    operator: Exists
                -
                    key: components.gke.io/gke-managed-components
                    operator: Exists
            priorityClassName: system-cluster-critical
status:
    replicas: 0
    observedGeneration: 4

