kind: StatefulSet
apiVersion: apps/v1
metadata:
    name: kubevious-mysql
    namespace: kubevious
    selfLink: /apis/apps/v1/namespaces/kubevious/statefulsets/kubevious-mysql
    uid: cd331f30-6015-4715-b64a-9998107c105a
    resourceVersion: '274561859'
    generation: 10
    creationTimestamp: '2020-11-15T00:14:29Z'
    labels:
        app.kubernetes.io/component: kubevious-mysql
        app.kubernetes.io/instance: kubevious
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubevious
        app.kubernetes.io/version: 0.9.10
        helm.sh/chart: kubevious-0.9.10
    annotations:
        meta.helm.sh/release-name: kubevious
        meta.helm.sh/release-namespace: kubevious
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/component: kubevious-mysql
            app.kubernetes.io/instance: kubevious
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: kubevious
    template:
        metadata:
            creationTimestamp: null
            labels:
                app.kubernetes.io/component: kubevious-mysql
                app.kubernetes.io/instance: kubevious
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: kubevious
        spec:
            volumes:
                -
                    name: conf
                    emptyDir: {}
                -
                    name: config-map
                    configMap:
                        name: kubevious-mysql-conf
                        defaultMode: 420
                -
                    name: init-script
                    configMap:
                        name: kubevious-mysql-init-script
                        defaultMode: 420
            initContainers:
                -
                    name: init-mysql
                    image: 'mysql:8.0.22'
                    command:
                        - bash
                        - '-c'
                        - >
                            set -ex

                            echo "[mysqld]" > /mnt/conf.d/server-id.cnf

                            echo "server-id=1" >> /mnt/conf.d/server-id.cnf

                            echo "[mysqld]" > /mnt/conf.d/bin-logs.cnf

                            echo "binlog_expire_logs_seconds=259200" >>
                            /mnt/conf.d/bin-logs.cnf

                            cp /mnt/config-map/master.cnf /mnt/conf.d/
                    resources: {}
                    volumeMounts:
                        -
                            name: conf
                            mountPath: /mnt/conf.d
                        -
                            name: config-map
                            mountPath: /mnt/config-map
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
            containers:
                -
                    name: mysql
                    image: 'mysql:8.0.22'
                    ports:
                        -
                            name: mysql
                            containerPort: 3306
                            protocol: TCP
                    env:
                        -
                            name: NODE_ENV
                            value: production
                        -
                            name: MYSQL_DATABASE
                            value: kubevious
                        -
                            name: MYSQL_USER
                            valueFrom:
                                configMapKeyRef:
                                    key: MYSQL_USER_NAME
                                    name: kubevious-mysql-user
                        -
                            name: MYSQL_PASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: kubevious-mysql-secret
                                    key: MYSQL_PASS
                        -
                            name: MYSQL_ROOT_PASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: kubevious-mysql-secret-root
                                    key: MYSQL_ROOT_PASSWORD
                        -   name: MY_MEMORY_LIMIT
                            valueFrom:
                                resourceFieldRef:
                                    containerName: mysql
                                    resource: requests.memory
                                    divisor: 1Mi   
                        -   name: MY_NODE_NAME
                            valueFrom:
                                fieldRef:
                                    fieldPath: spec.nodeName
                        -   name: MY_POD_NAME
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.name
                        -   name: MY_POD_NAMESPACE
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.namespace
                        -   name: MY_POD_IP
                            valueFrom:
                                fieldRef:
                                    fieldPath: status.podIP
                        -   name: MY_POD_SERVICE_ACCOUNT
                            valueFrom:
                                fieldRef:
                                    fieldPath: spec.serviceAccountName                                                                     
                    resources:
                        requests:
                            cpu: 100m
                            memory: 200Mi
                    volumeMounts:
                        -
                            name: data
                            mountPath: /var/lib/mysql
                            subPath: mysql
                        -
                            name: conf
                            mountPath: /etc/mysql/conf.d
                        -
                            name: init-script
                            mountPath: /docker-entrypoint-initdb.d
                    livenessProbe:
                        exec:
                            command:
                                - mysqladmin
                                - ping
                        initialDelaySeconds: 120
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    readinessProbe:
                        exec:
                            command:
                                - bash
                                - '-c'
                                - >
                                    mysql -p$MYSQL_ROOT_PASSWORD -h 127.0.0.1 -e
                                    'SELECT 1'
                        initialDelaySeconds: 5
                        timeoutSeconds: 1
                        periodSeconds: 2
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            serviceAccountName: kubevious-mysql
            serviceAccount: kubevious-mysql
            securityContext: {}
            schedulerName: default-scheduler
    volumeClaimTemplates:
        -
            kind: PersistentVolumeClaim
            apiVersion: v1
            metadata:
                name: data
                creationTimestamp: null
            spec:
                accessModes:
                    - ReadWriteOnce
                resources:
                    requests:
                        storage: 20Gi
                volumeMode: Filesystem
            status:
                phase: Pending
    serviceName: kubevious-mysql
    podManagementPolicy: OrderedReady
    updateStrategy:
        type: RollingUpdate
        rollingUpdate:
            partition: 0
    revisionHistoryLimit: 10
status:
    observedGeneration: 10
    replicas: 1
    readyReplicas: 1
    currentReplicas: 1
    updatedReplicas: 1
    currentRevision: kubevious-mysql-55c446dfd
    updateRevision: kubevious-mysql-55c446dfd
    collisionCount: 0

