apiVersion: v1
kind: Pod
metadata:
  name: oom-test-75f76948f6-22222
  generateName: oom-test-75f76948f6-
  namespace: failures
  uid: 5a5be9fb-0078-44f8-bdbe-3fdf59938ddc
  resourceVersion: '1732152'
  creationTimestamp: '2022-04-27T23:33:22Z'
  labels:
    app.kubernetes.io/name: oom-test
    pod-template-hash: 75f76948f6
  ownerReferences:
    - apiVersion: apps/v1
      kind: ReplicaSet
      name: oom-test-75f76948f6
      uid: 19591e3a-49c1-4523-94eb-34aa148847ae
      controller: true
      blockOwnerDeletion: true
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2022-04-27T23:33:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"19591e3a-49c1-4523-94eb-34aa148847ae"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"good"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"stress"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
    - manager: kubelet
      operation: Update
      apiVersion: v1
      time: '2022-04-27T23:41:03Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
  selfLink: /api/v1/namespaces/failures/pods/oom-test-75f76948f6-22222
spec:
  volumes:
    - name: default-token-bh2tr
      secret:
        secretName: default-token-bh2tr
        defaultMode: 420
  containers:
    - name: stress
      image: containerstack/alpine-stress
      command:
        - /bin/sh
      args:
        - '-c'
        - >-
          PERIOD="$((RANDOM % 30 + 30))s"; echo "Waiting $PERIOD..."; date;
          sleep $PERIOD; stress --vm 1 --vm-bytes 52428800 --vm-keep
      resources:
        limits:
          cpu: 10m
          memory: 25M
        requests:
          cpu: 10m
          memory: 25M
      volumeMounts:
        - name: default-token-bh2tr
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: Always
    - name: good
      image: alpine
      command:
        - /bin/sh
      args:
        - '-c'
        - while :; do echo 'Hello World'; date; sleep 10 ; done
      resources:
        limits:
          cpu: 1m
          memory: 10M
        requests:
          cpu: 1m
          memory: 10M
      volumeMounts:
        - name: default-token-bh2tr
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: Always
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  nodeName: minikube
  securityContext: {}
  schedulerName: default-scheduler
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
  priority: 0
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-04-27T21:58:18Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-04-27T21:58:18Z"
    message: 'containers with unready status: [good]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-04-27T21:58:18Z"
    message: 'containers with unready status: [good]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-04-27T21:58:18Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: alpine
    imageID: ""
    lastState: {}
    name: good
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        message: 'Error response from daemon: Minimum memory limit allowed is 6MB'
        reason: CreateContainerError
  - containerID: docker://68aad973af5be73d7b7bd5237132410504ad0fb972a87ac982011c6b32556f50
    image: containerstack/alpine-stress:latest
    imageID: docker-pullable://containerstack/alpine-stress@sha256:1774c86f789aa83a726d60c42573ce2af609f498a8cf5c41c76ede74d8dbde0f
    lastState:
      terminated:
        containerID: docker://946e125cb63ab4b95ed8141639bcfaad4f43c91815df9332d2b146ead970b6a2
        exitCode: 1
        finishedAt: "2022-04-27T21:59:03Z"
        reason: OOMKilled
        startedAt: "2022-04-27T21:58:31Z"
    name: stress
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2022-04-27T21:59:08Z"
  hostIP: 192.168.49.2
  phase: Pending
  podIP: 172.17.0.5
  podIPs:
  - ip: 172.17.0.5
  qosClass: Guaranteed
  startTime: "2022-04-27T21:58:18Z"
