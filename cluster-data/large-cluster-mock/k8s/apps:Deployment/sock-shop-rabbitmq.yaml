kind: Deployment
apiVersion: apps/v1
metadata:
    name: rabbitmq
    namespace: sock-shop
    selfLink: /apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq
    uid: ce751d94-396f-11ea-b115-42010a8001d6
    resourceVersion: '274559643'
    generation: 1
    creationTimestamp: '2020-01-17T21:24:55Z'
    labels:
        name: rabbitmq
    annotations:
        deployment.kubernetes.io/revision: '1'
        kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"name":"rabbitmq"},"name":"rabbitmq","namespace":"sock-shop"},"spec":{"replicas":1,"template":{"metadata":{"labels":{"name":"rabbitmq"}},"spec":{"containers":[{"image":"rabbitmq:3.6.8","name":"rabbitmq","ports":[{"containerPort":5672}],"securityContext":{"capabilities":{"add":["CHOWN","SETGID","SETUID","DAC_OVERRIDE"],"drop":["all"]},"readOnlyRootFilesystem":true}}],"nodeSelector":{"beta.kubernetes.io/os":"linux"}}}}}
spec:
    replicas: 1
    selector:
        matchLabels:
            name: rabbitmq
    template:
        metadata:
            creationTimestamp: null
            labels:
                name: rabbitmq
        spec:
            containers:
                -
                    name: rabbitmq
                    image: 'rabbitmq:3.6.8'
                    ports:
                        -
                            containerPort: 5672
                            protocol: TCP
                    resources: {}
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        capabilities:
                            add:
                                - CHOWN
                                - SETGID
                                - SETUID
                                - DAC_OVERRIDE
                            drop:
                                - all
                        readOnlyRootFilesystem: true
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            nodeSelector:
                beta.kubernetes.io/os: linux
            securityContext: {}
            schedulerName: default-scheduler
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 1
            maxSurge: 1
    revisionHistoryLimit: 2147483647
    progressDeadlineSeconds: 2147483647
status:
    observedGeneration: 1
    replicas: 1
    updatedReplicas: 1
    readyReplicas: 1
    availableReplicas: 1
    conditions:
        -
            type: Available
            status: 'True'
            lastUpdateTime: '2020-01-17T21:24:55Z'
            lastTransitionTime: '2020-01-17T21:24:55Z'
            reason: MinimumReplicasAvailable
            message: Deployment has minimum availability.

