kind: Deployment
apiVersion: apps/v1
metadata:
    name: gke-busy-box
    namespace: kube-system
    selfLink: /apis/apps/v1/namespaces/kube-system/deployments/kube-dns
    uid: bec14d00-3437-11ea-9cdc-42010a8001cf
    resourceVersion: '274562791'
    generation: 21
    creationTimestamp: '2020-01-11T06:01:01Z'
    labels:
        addonmanager.kubernetes.io/mode: Reconcile
        k8s-app: kube-dns
        kubernetes.io/cluster-service: 'true'
    annotations:
        deployment.kubernetes.io/revision: '10'
        kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"kube-dns","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns"}},"strategy":{"rollingUpdate":{"maxSurge":"10%","maxUnavailable":0}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":"","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"kube-dns"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["--domain=cluster.local.","--dns-port=10053","--config-dir=/kube-dns-config","--v=2"],"env":[{"name":"PROMETHEUS_PORT","value":"10055"}],"image":"gke.gcr.io/k8s-dns-kube-dns-amd64:1.15.16-gke.0","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/kubedns","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"kubedns","ports":[{"containerPort":10053,"name":"dns-local","protocol":"UDP"},{"containerPort":10053,"name":"dns-tcp-local","protocol":"TCP"},{"containerPort":10055,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readiness","port":8081,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":5},"resources":{"limits":{"memory":"210Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/kube-dns-config","name":"kube-dns-config"}]},{"args":["-v=2","-logtostderr","-configDir=/etc/k8s/dns/dnsmasq-nanny","-restartDnsmasq=true","--","-k","--cache-size=1000","--no-negcache","--dns-forward-max=1500","--log-facility=-","--server=/cluster.local/127.0.0.1#10053","--server=/in-addr.arpa/127.0.0.1#10053","--server=/ip6.arpa/127.0.0.1#10053"],"image":"gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.16-gke.0","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/dnsmasq","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"dnsmasq","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"}],"resources":{"requests":{"cpu":"150m","memory":"20Mi"}},"securityContext":{"capabilities":{"add":["NET_BIND_SERVICE","SETGID"],"drop":["all"]}},"volumeMounts":[{"mountPath":"/etc/k8s/dns/dnsmasq-nanny","name":"kube-dns-config"}]},{"args":["--v=2","--logtostderr","--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV","--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"],"image":"gke.gcr.io/k8s-dns-sidecar-amd64:1.15.16-gke.0","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/metrics","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"sidecar","ports":[{"containerPort":10054,"name":"metrics","protocol":"TCP"}],"resources":{"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsUser":1001}}],"dnsPolicy":"Default","nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":65534,"supplementalGroups":[65534]},"serviceAccountName":"kube-dns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"configMap":{"name":"kube-dns","optional":true},"name":"kube-dns-config"}]}}}}
spec:
    replicas: 2
    selector:
        matchLabels:
            k8s-app: kube-dns
    template:
        metadata:
            creationTimestamp: null
            labels:
                k8s-app: kube-dns
            annotations:
                scheduler.alpha.kubernetes.io/critical-pod: ''
                seccomp.security.alpha.kubernetes.io/pod: runtime/default
        spec:
            volumes:
                -
                    name: kube-dns-config
                    configMap:
                        name: kube-dns
                        defaultMode: 420
                        optional: true
            containers:
                -
                    name: kubedns
                    image: 'gke.gcr.io/k8s-dns-kube-dns-amd64:1.15.16-gke.0'
                    args:
                        - '--domain=cluster.local.'
                        - '--dns-port=10053'
                        - '--config-dir=/kube-dns-config'
                        - '--v=2'
                    ports:
                        -
                            name: dns-local
                            containerPort: 10053
                            protocol: UDP
                        -
                            name: dns-tcp-local
                            containerPort: 10053
                            protocol: TCP
                        -
                            name: metrics
                            containerPort: 10055
                            protocol: TCP
                    env:
                        -
                            name: PROMETHEUS_PORT
                            value: '10055'
                    resources:
                        limits:
                            memory: 210Mi
                        requests:
                            cpu: 100m
                            memory: 70Mi
                    volumeMounts:
                        -
                            name: kube-dns-config
                            mountPath: /kube-dns-config
                    livenessProbe:
                        httpGet:
                            path: /healthcheck/kubedns
                            port: 10054
                            scheme: HTTP
                        initialDelaySeconds: 60
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 5
                    readinessProbe:
                        httpGet:
                            path: /readiness
                            port: 8081
                            scheme: HTTP
                        initialDelaySeconds: 3
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        runAsUser: 1001
                        runAsGroup: 1001
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
                -
                    name: dnsmasq
                    image: 'gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.16-gke.0'
                    args:
                        - '-v=2'
                        - '-logtostderr'
                        - '-configDir=/etc/k8s/dns/dnsmasq-nanny'
                        - '-restartDnsmasq=true'
                        - '--'
                        - '-k'
                        - '--cache-size=1000'
                        - '--no-negcache'
                        - '--dns-forward-max=1500'
                        - '--log-facility=-'
                        - '--server=/cluster.local/127.0.0.1#10053'
                        - '--server=/in-addr.arpa/127.0.0.1#10053'
                        - '--server=/ip6.arpa/127.0.0.1#10053'
                    ports:
                        -
                            name: dns
                            containerPort: 53
                            protocol: UDP
                        -
                            name: dns-tcp
                            containerPort: 53
                            protocol: TCP
                    resources:
                        requests:
                            cpu: 150m
                            memory: 20Mi
                    volumeMounts:
                        -
                            name: kube-dns-config
                            mountPath: /etc/k8s/dns/dnsmasq-nanny
                    livenessProbe:
                        httpGet:
                            path: /healthcheck/dnsmasq
                            port: 10054
                            scheme: HTTP
                        initialDelaySeconds: 60
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 5
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        capabilities:
                            add:
                                - NET_BIND_SERVICE
                                - SETGID
                            drop:
                                - all
                -
                    name: sidecar
                    image: 'gke.gcr.io/k8s-dns-sidecar-amd64:1.15.16-gke.0'
                    args:
                        - '--v=2'
                        - '--logtostderr'
                        - >-
                            --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
                        - >-
                            --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
                    ports:
                        -
                            name: metrics
                            containerPort: 10054
                            protocol: TCP
                    resources:
                        requests:
                            cpu: 10m
                            memory: 20Mi
                    livenessProbe:
                        httpGet:
                            path: /metrics
                            port: 10054
                            scheme: HTTP
                        initialDelaySeconds: 60
                        timeoutSeconds: 5
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 5
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        runAsUser: 1001
                        runAsGroup: 1001
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: Default
            nodeSelector:
                kubernetes.io/os: linux
            serviceAccountName: gke-metrics-agent
            serviceAccount: gke-metrics-agent
            securityContext:
                supplementalGroups:
                    - 65534
                fsGroup: 65534
            affinity:
                podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        -
                            weight: 100
                            podAffinityTerm:
                                labelSelector:
                                    matchExpressions:
                                        -
                                            key: k8s-app
                                            operator: In
                                            values:
                                                - kube-dns
                                topologyKey: kubernetes.io/hostname
            schedulerName: default-scheduler
            tolerations:
                -
                    key: CriticalAddonsOnly
                    operator: Exists
                -
                    key: components.gke.io/gke-managed-components
                    operator: Exists
            priorityClassName: system-cluster-critical
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 0
            maxSurge: 10%
    revisionHistoryLimit: 2147483647
    progressDeadlineSeconds: 2147483647
status:
    observedGeneration: 21
    replicas: 2
    updatedReplicas: 2
    readyReplicas: 2
    availableReplicas: 2
    conditions:
        -
            type: Available
            status: 'True'
            lastUpdateTime: '2021-08-01T11:47:25Z'
            lastTransitionTime: '2021-08-01T11:47:25Z'
            reason: MinimumReplicasAvailable
            message: Deployment has minimum availability.

