kind: Deployment
apiVersion: apps/v1
metadata:
    name: book-app
    namespace: book
    selfLink: /apis/apps/v1/namespaces/book/deployments/book-app
    uid: 44d4077a-34bb-11ea-9cdc-42010a8001cf
    resourceVersion: '61928555'
    generation: 3
    creationTimestamp: '2020-01-11T21:42:30Z'
    labels:
        app: book-app
    annotations:
        deployment.kubernetes.io/revision: '2'
        kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"book-app"},"name":"book-app","namespace":"book"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"book-app"}},"template":{"metadata":{"labels":{"app":"book-app"}},"spec":{"containers":[{"command":["/cloud_sql_proxy","-instances=my-project:us-central1:mysql-db-name=tcp:3306","-credential_file=/var/secrets/google/service-key.json"],"image":"gcr.io/cloudsql-docker/gce-proxy:1.11","imagePullPolicy":"IfNotPresent","name":"cloudsql-proxy","resources":{},"securityContext":{"allowPrivilegeEscalation":false,"runAsUser":2},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/secrets/google","name":"google-cloud-key","readOnly":true}]},{"env":[{"name":"MY_ENV_VAR_2","value":"abcd1234"}],"envFrom":[{"configMapRef":{"name":"my-config-1"}}],"image":"nginx:1.16","name":"nginx","ports":[{"containerPort":3000,"name":"default","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m"},"requests":{"cpu":"50m","memory":"100Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"google-cloud-key","secret":{"secretName":"gprod-addr-main-app"}}]}}}}
spec:
    replicas: 0
    selector:
        matchLabels:
            app: book-app
    template:
        metadata:
            creationTimestamp: null
            labels:
                app: book-app
        spec:
            volumes:
                -
                    name: google-cloud-key
                    secret:
                        secretName: gprod-addr-main-app
                        defaultMode: 420
            containers:
                -
                    name: cloudsql-proxy
                    image: 'gcr.io/cloudsql-docker/gce-proxy:1.11'
                    command:
                        - /cloud_sql_proxy
                        - >-
                            -instances=my-project:us-central1:mysql-db-name=tcp:3306
                        - >-
                            -credential_file=/var/secrets/google/service-key.json
                    resources: {}
                    volumeMounts:
                        -
                            name: google-cloud-key
                            readOnly: true
                            mountPath: /var/secrets/google
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        runAsUser: 2
                        allowPrivilegeEscalation: false
                -
                    name: nginx
                    image: 'nginx:1.16'
                    ports:
                        -
                            name: default
                            containerPort: 3000
                            protocol: TCP
                    envFrom:
                        -
                            configMapRef:
                                name: my-config-1
                    env:
                        -
                            name: MY_ENV_VAR_2
                            value: abcd1234
                    resources:
                        limits:
                            cpu: 10m
                        requests:
                            cpu: 10m
                            memory: 100Mi
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            securityContext: {}
            schedulerName: default-scheduler
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
status:
    observedGeneration: 3
    conditions:
        -
            type: Available
            status: 'True'
            lastUpdateTime: '2020-03-21T23:43:19Z'
            lastTransitionTime: '2020-03-21T23:43:19Z'
            reason: MinimumReplicasAvailable
            message: Deployment has minimum availability.
        -
            type: Progressing
            status: 'True'
            lastUpdateTime: '2020-03-21T23:43:19Z'
            lastTransitionTime: '2020-03-21T23:43:19Z'
            reason: NewReplicaSetAvailable
            message: ReplicaSet "book-app-7676cf7c64" has successfully progressed.

