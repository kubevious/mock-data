kind: Deployment
apiVersion: apps/v1
metadata:
    name: polaris-dashboard
    namespace: polaris
    selfLink: /apis/apps/v1/namespaces/polaris/deployments/polaris-dashboard
    uid: 9ffb2e13-5916-11ea-8ab4-42010a8000a7
    resourceVersion: '274561414'
    generation: 2
    creationTimestamp: '2020-02-27T04:07:09Z'
    labels:
        app: polaris
        component: dashboard
    annotations:
        deployment.kubernetes.io/revision: '2'
        kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"polaris","component":"dashboard"},"name":"polaris-dashboard","namespace":"polaris"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"polaris","component":"dashboard"}},"template":{"metadata":{"annotations":{"checksum/config":"8aa5a565fba7a2db98d46752087de8c1dcc83b70cd762c5829d5ba01270d54a2"},"labels":{"app":"polaris","component":"dashboard"}},"spec":{"containers":[{"command":["polaris","--dashboard","--config","/opt/app/config.yaml"],"image":"quay.io/fairwinds/polaris:0.6","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":5,"periodSeconds":20},"name":"dashboard","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":5,"periodSeconds":20},"resources":{"limits":{"cpu":"100m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true},"volumeMounts":[{"mountPath":"/opt/app/config.yaml","name":"config","readOnly":true,"subPath":"config.yaml"}]}],"nodeSelector":null,"serviceAccountName":"polaris-dashboard","tolerations":null,"volumes":[{"configMap":{"name":"polaris"},"name":"config"}]}}}}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: polaris
            component: dashboard
    template:
        metadata:
            creationTimestamp: null
            labels:
                app: polaris
                component: dashboard
            annotations:
                checksum/config: >-
                    8aa5a565fba7a2db98d46752087de8c1dcc83b70cd762c5829d5ba01270d54a2
        spec:
            volumes:
                -
                    name: config
                    configMap:
                        name: polaris
                        defaultMode: 420
            containers:
                -
                    name: dashboard
                    image: 'quay.io/fairwinds/polaris:0.6'
                    command:
                        - polaris
                        - '--dashboard'
                        - '--config'
                        - /opt/app/config.yaml
                    ports:
                        -
                            containerPort: 8080
                            protocol: TCP
                    resources:
                        limits:
                            cpu: 50m
                            memory: 128Mi
                        requests:
                            cpu: 10m
                            memory: 128Mi
                    volumeMounts:
                        -
                            name: config
                            readOnly: true
                            mountPath: /opt/app/config.yaml
                            subPath: config.yaml
                    livenessProbe:
                        httpGet:
                            path: /health
                            port: 8080
                            scheme: HTTP
                        initialDelaySeconds: 5
                        timeoutSeconds: 1
                        periodSeconds: 20
                        successThreshold: 1
                        failureThreshold: 3
                    readinessProbe:
                        httpGet:
                            path: /health
                            port: 8080
                            scheme: HTTP
                        initialDelaySeconds: 5
                        timeoutSeconds: 1
                        periodSeconds: 20
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: Always
                    securityContext:
                        capabilities:
                            drop:
                                - ALL
                        privileged: false
                        runAsNonRoot: true
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            serviceAccountName: polaris-dashboard
            serviceAccount: polaris-dashboard
            securityContext: {}
            schedulerName: default-scheduler
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
status:
    observedGeneration: 2
    replicas: 1
    updatedReplicas: 1
    readyReplicas: 1
    availableReplicas: 1
    conditions:
        -
            type: Progressing
            status: 'True'
            lastUpdateTime: '2020-03-21T23:58:02Z'
            lastTransitionTime: '2020-02-27T04:07:09Z'
            reason: NewReplicaSetAvailable
            message: >-
                ReplicaSet "polaris-dashboard-8554786c49" has successfully
                progressed.
        -
            type: Available
            status: 'True'
            lastUpdateTime: '2021-08-01T11:44:34Z'
            lastTransitionTime: '2021-08-01T11:44:34Z'
            reason: MinimumReplicasAvailable
            message: Deployment has minimum availability.

