kind: Deployment
apiVersion: apps/v1
metadata:
    name: gitlab-nginx-ingress-controller
    namespace: gitlab
    selfLink: >-
        /apis/apps/v1/namespaces/gitlab/deployments/gitlab-nginx-ingress-controller
    uid: 995e41f0-398b-11ea-b115-42010a8001d6
    resourceVersion: '274561248'
    generation: 3
    creationTimestamp: '2020-01-18T00:43:52Z'
    labels:
        app: nginx-ingress
        chart: nginx-ingress-0.30.0-1
        component: controller
        heritage: Helm
        release: gitlab
    annotations:
        deployment.kubernetes.io/revision: '3'
spec:
    replicas: 3
    selector:
        matchLabels:
            app: nginx-ingress
            component: controller
            release: gitlab
    template:
        metadata:
            creationTimestamp: null
            labels:
                app: nginx-ingress
                component: controller
                release: gitlab
        spec:
            containers:
                -
                    name: nginx-ingress-controller
                    image: >-
                        quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.21.0
                    args:
                        - /nginx-ingress-controller
                        - >-
                            --default-backend-service=gitlab/gitlab-nginx-ingress-default-backend
                        - >-
                            --publish-service=gitlab/gitlab-nginx-ingress-controller
                        - '--election-id=ingress-controller-leader'
                        - '--ingress-class=gitlab-nginx'
                        - '--configmap=gitlab/gitlab-nginx-ingress-controller'
                        - >-
                            --tcp-services-configmap=gitlab/gitlab-nginx-ingress-tcp
                        - '--watch-namespace=gitlab'
                        - '--force-namespace-isolation'
                    ports:
                        -
                            name: http
                            containerPort: 80
                            protocol: TCP
                        -
                            name: https
                            containerPort: 443
                            protocol: TCP
                        -
                            name: stats
                            containerPort: 18080
                            protocol: TCP
                        -
                            name: metrics
                            containerPort: 10254
                            protocol: TCP
                        -
                            name: gitlab-shell
                            containerPort: 22
                            protocol: TCP
                    env:
                        -
                            name: POD_NAME
                            valueFrom:
                                fieldRef:
                                    apiVersion: v1
                                    fieldPath: metadata.name
                        -
                            name: POD_NAMESPACE
                            valueFrom:
                                fieldRef:
                                    apiVersion: v1
                                    fieldPath: metadata.namespace
                    resources:
                        requests:
                            cpu: 15m
                            memory: 15Mi
                    livenessProbe:
                        httpGet:
                            path: /healthz
                            port: 10254
                            scheme: HTTP
                        initialDelaySeconds: 10
                        timeoutSeconds: 1
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    readinessProbe:
                        httpGet:
                            path: /healthz
                            port: 10254
                            scheme: HTTP
                        initialDelaySeconds: 10
                        timeoutSeconds: 1
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
                    securityContext:
                        capabilities:
                            add:
                                - NET_BIND_SERVICE
                            drop:
                                - ALL
                        runAsUser: 33
            restartPolicy: Always
            terminationGracePeriodSeconds: 60
            dnsPolicy: ClusterFirst
            serviceAccountName: gitlab-nginx-ingress
            serviceAccount: gitlab-nginx-ingress
            securityContext: {}
            affinity:
                podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        -
                            weight: 1
                            podAffinityTerm:
                                labelSelector:
                                    matchLabels:
                                        app: nginx-ingress
                                        release: gitlab
                                topologyKey: kubernetes.io/hostname
            schedulerName: default-scheduler
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
status:
    observedGeneration: 3
    replicas: 3
    updatedReplicas: 3
    readyReplicas: 3
    availableReplicas: 3
    conditions:
        -
            type: Progressing
            status: 'True'
            lastUpdateTime: '2020-02-04T05:23:08Z'
            lastTransitionTime: '2020-01-18T00:43:52Z'
            reason: NewReplicaSetAvailable
            message: >-
                ReplicaSet "gitlab-nginx-ingress-controller-7db754f856" has
                successfully progressed.
        -
            type: Available
            status: 'True'
            lastUpdateTime: '2021-08-01T11:44:22Z'
            lastTransitionTime: '2021-08-01T11:44:22Z'
            reason: MinimumReplicasAvailable
            message: Deployment has minimum availability.

