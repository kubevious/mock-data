kind: Deployment
apiVersion: apps/v1
metadata:
    name: frontend
    namespace: hipster
    selfLink: /apis/apps/v1/namespaces/hipster/deployments/frontend
    uid: a15c8a4d-3441-11ea-9cdc-42010a8001cf
    resourceVersion: '274561767'
    generation: 2
    creationTimestamp: '2020-01-11T07:11:47Z'
    annotations:
        deployment.kubernetes.io/revision: '2'
        kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend","namespace":"hipster"},"spec":{"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"RECOMMENDATION_SERVICE_ADDR","value":"recommendationservice:8080"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"CHECKOUT_SERVICE_ADDR","value":"checkoutservice:5050"},{"name":"AD_SERVICE_ADDR","value":"adservice:9555"}],"image":"gcr.io/google-samples/microservices-demo/frontend:v0.1.3","livenessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-liveness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-readiness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"20m","memory":"128Mi"},"requests":{"cpu":"5m","memory":"64Mi"}}}]}}}}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: frontend
    template:
        metadata:
            creationTimestamp: null
            labels:
                app: frontend
            annotations:
                sidecar.istio.io/rewriteAppHTTPProbers: 'true'
        spec:
            containers:
                -
                    name: server
                    image: 'gcr.io/google-samples/microservices-demo/frontend:v0.1.3'
                    ports:
                        -
                            containerPort: 8080
                            protocol: TCP
                    env:
                        -
                            name: PORT
                            value: '8080'
                        -
                            name: PRODUCT_CATALOG_SERVICE_ADDR
                            value: 'productcatalogservice:3550'
                        -
                            name: CURRENCY_SERVICE_ADDR
                            value: 'currencyservice:7000'
                        -
                            name: CART_SERVICE_ADDR
                            value: 'cartservice:7070'
                        -
                            name: RECOMMENDATION_SERVICE_ADDR
                            value: 'recommendationservice:8080'
                        -
                            name: SHIPPING_SERVICE_ADDR
                            value: 'shippingservice:50051'
                        -
                            name: CHECKOUT_SERVICE_ADDR
                            value: 'checkoutservice:5050'
                        -
                            name: AD_SERVICE_ADDR
                            value: 'adservice:9555'
                    resources:
                        limits:
                            cpu: 20m
                            memory: 128Mi
                        requests:
                            cpu: 5m
                            memory: 64Mi
                    livenessProbe:
                        httpGet:
                            path: /_healthz
                            port: 8080
                            scheme: HTTP
                            httpHeaders:
                                -
                                    name: Cookie
                                    value: shop_session-id=x-liveness-probe
                        initialDelaySeconds: 10
                        timeoutSeconds: 1
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    readinessProbe:
                        httpGet:
                            path: /_healthz
                            port: 8080
                            scheme: HTTP
                            httpHeaders:
                                -
                                    name: Cookie
                                    value: shop_session-id=x-readiness-probe
                        initialDelaySeconds: 10
                        timeoutSeconds: 1
                        periodSeconds: 10
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    imagePullPolicy: IfNotPresent
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            securityContext: {}
            schedulerName: default-scheduler
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
status:
    observedGeneration: 2
    replicas: 1
    updatedReplicas: 1
    readyReplicas: 1
    availableReplicas: 1
    conditions:
        -
            type: Progressing
            status: 'True'
            lastUpdateTime: '2020-01-30T04:44:37Z'
            lastTransitionTime: '2020-01-11T07:11:47Z'
            reason: NewReplicaSetAvailable
            message: ReplicaSet "frontend-7dbdf6c769" has successfully progressed.
        -
            type: Available
            status: 'True'
            lastUpdateTime: '2021-08-01T11:45:16Z'
            lastTransitionTime: '2021-08-01T11:45:16Z'
            reason: MinimumReplicasAvailable
            message: Deployment has minimum availability.

