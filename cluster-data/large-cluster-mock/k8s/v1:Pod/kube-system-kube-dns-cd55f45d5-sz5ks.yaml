kind: Pod
apiVersion: v1
metadata:
    name: kube-dns-cd55f45d5-sz5ks
    generateName: kube-dns-cd55f45d5-
    namespace: kube-system
    selfLink: /api/v1/namespaces/kube-system/pods/kube-dns-cd55f45d5-sz5ks
    uid: 027869a0-91fb-4ba2-8179-56de49e1d684
    resourceVersion: '274561402'
    creationTimestamp: '2021-08-01T11:39:51Z'
    labels:
        k8s-app: kube-dns
        pod-template-hash: cd55f45d5
    annotations:
        cni.projectcalico.org/podIP: 10.8.1.14/32
        scheduler.alpha.kubernetes.io/critical-pod: ''
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    ownerReferences:
        -
            apiVersion: apps/v1
            kind: ReplicaSet
            name: kube-dns-cd55f45d5
            uid: 264f788b-8fec-46d6-8382-36cc6c051c31
            controller: true
            blockOwnerDeletion: true
    managedFields:
        -
            manager: kube-controller-manager
            operation: Update
            apiVersion: v1
            time: '2021-08-01T11:39:50Z'
            fieldsType: FieldsV1
            fieldsV1:
                'f:metadata':
                    'f:annotations':
                        .: {}
                        'f:scheduler.alpha.kubernetes.io/critical-pod': {}
                        'f:seccomp.security.alpha.kubernetes.io/pod': {}
                    'f:generateName': {}
                    'f:labels':
                        .: {}
                        'f:k8s-app': {}
                        'f:pod-template-hash': {}
                    'f:ownerReferences':
                        .: {}
                        'k:{"uid":"264f788b-8fec-46d6-8382-36cc6c051c31"}':
                            .: {}
                            'f:apiVersion': {}
                            'f:blockOwnerDeletion': {}
                            'f:controller': {}
                            'f:kind': {}
                            'f:name': {}
                            'f:uid': {}
                'f:spec':
                    'f:affinity':
                        .: {}
                        'f:podAntiAffinity':
                            .: {}
                            'f:preferredDuringSchedulingIgnoredDuringExecution': {}
                    'f:containers':
                        'k:{"name":"dnsmasq"}':
                            .: {}
                            'f:args': {}
                            'f:image': {}
                            'f:imagePullPolicy': {}
                            'f:livenessProbe':
                                .: {}
                                'f:failureThreshold': {}
                                'f:httpGet':
                                    .: {}
                                    'f:path': {}
                                    'f:port': {}
                                    'f:scheme': {}
                                'f:initialDelaySeconds': {}
                                'f:periodSeconds': {}
                                'f:successThreshold': {}
                                'f:timeoutSeconds': {}
                            'f:name': {}
                            'f:ports':
                                .: {}
                                'k:{"containerPort":53,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'k:{"containerPort":53,"protocol":"UDP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                            'f:resources':
                                .: {}
                                'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                            'f:securityContext':
                                .: {}
                                'f:capabilities':
                                    .: {}
                                    'f:add': {}
                                    'f:drop': {}
                            'f:terminationMessagePath': {}
                            'f:terminationMessagePolicy': {}
                            'f:volumeMounts':
                                .: {}
                                'k:{"mountPath":"/etc/k8s/dns/dnsmasq-nanny"}':
                                    .: {}
                                    'f:mountPath': {}
                                    'f:name': {}
                        'k:{"name":"kubedns"}':
                            .: {}
                            'f:args': {}
                            'f:env':
                                .: {}
                                'k:{"name":"PROMETHEUS_PORT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                            'f:image': {}
                            'f:imagePullPolicy': {}
                            'f:livenessProbe':
                                .: {}
                                'f:failureThreshold': {}
                                'f:httpGet':
                                    .: {}
                                    'f:path': {}
                                    'f:port': {}
                                    'f:scheme': {}
                                'f:initialDelaySeconds': {}
                                'f:periodSeconds': {}
                                'f:successThreshold': {}
                                'f:timeoutSeconds': {}
                            'f:name': {}
                            'f:ports':
                                .: {}
                                'k:{"containerPort":10053,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'k:{"containerPort":10053,"protocol":"UDP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'k:{"containerPort":10055,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                            'f:readinessProbe':
                                .: {}
                                'f:failureThreshold': {}
                                'f:httpGet':
                                    .: {}
                                    'f:path': {}
                                    'f:port': {}
                                    'f:scheme': {}
                                'f:initialDelaySeconds': {}
                                'f:periodSeconds': {}
                                'f:successThreshold': {}
                                'f:timeoutSeconds': {}
                            'f:resources':
                                .: {}
                                'f:limits':
                                    .: {}
                                    'f:memory': {}
                                'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                            'f:securityContext':
                                .: {}
                                'f:allowPrivilegeEscalation': {}
                                'f:readOnlyRootFilesystem': {}
                                'f:runAsGroup': {}
                                'f:runAsUser': {}
                            'f:terminationMessagePath': {}
                            'f:terminationMessagePolicy': {}
                            'f:volumeMounts':
                                .: {}
                                'k:{"mountPath":"/kube-dns-config"}':
                                    .: {}
                                    'f:mountPath': {}
                                    'f:name': {}
                        'k:{"name":"sidecar"}':
                            .: {}
                            'f:args': {}
                            'f:image': {}
                            'f:imagePullPolicy': {}
                            'f:livenessProbe':
                                .: {}
                                'f:failureThreshold': {}
                                'f:httpGet':
                                    .: {}
                                    'f:path': {}
                                    'f:port': {}
                                    'f:scheme': {}
                                'f:initialDelaySeconds': {}
                                'f:periodSeconds': {}
                                'f:successThreshold': {}
                                'f:timeoutSeconds': {}
                            'f:name': {}
                            'f:ports':
                                .: {}
                                'k:{"containerPort":10054,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                            'f:resources':
                                .: {}
                                'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                            'f:securityContext':
                                .: {}
                                'f:allowPrivilegeEscalation': {}
                                'f:readOnlyRootFilesystem': {}
                                'f:runAsGroup': {}
                                'f:runAsUser': {}
                            'f:terminationMessagePath': {}
                            'f:terminationMessagePolicy': {}
                    'f:dnsPolicy': {}
                    'f:enableServiceLinks': {}
                    'f:nodeSelector':
                        .: {}
                        'f:kubernetes.io/os': {}
                    'f:priorityClassName': {}
                    'f:restartPolicy': {}
                    'f:schedulerName': {}
                    'f:securityContext':
                        .: {}
                        'f:fsGroup': {}
                        'f:supplementalGroups': {}
                    'f:serviceAccount': {}
                    'f:serviceAccountName': {}
                    'f:terminationGracePeriodSeconds': {}
                    'f:tolerations': {}
                    'f:volumes':
                        .: {}
                        'k:{"name":"kube-dns-config"}':
                            .: {}
                            'f:configMap':
                                .: {}
                                'f:defaultMode': {}
                                'f:name': {}
                                'f:optional': {}
                            'f:name': {}
        -
            manager: calico
            operation: Update
            apiVersion: v1
            time: '2021-08-01T11:40:00Z'
            fieldsType: FieldsV1
            fieldsV1:
                'f:metadata':
                    'f:annotations':
                        'f:cni.projectcalico.org/podIP': {}
        -
            manager: kubelet
            operation: Update
            apiVersion: v1
            time: '2021-08-01T11:44:33Z'
            fieldsType: FieldsV1
            fieldsV1:
                'f:status':
                    'f:conditions':
                        'k:{"type":"ContainersReady"}':
                            .: {}
                            'f:lastProbeTime': {}
                            'f:lastTransitionTime': {}
                            'f:status': {}
                            'f:type': {}
                        'k:{"type":"Initialized"}':
                            .: {}
                            'f:lastProbeTime': {}
                            'f:lastTransitionTime': {}
                            'f:status': {}
                            'f:type': {}
                        'k:{"type":"Ready"}':
                            .: {}
                            'f:lastProbeTime': {}
                            'f:lastTransitionTime': {}
                            'f:status': {}
                            'f:type': {}
                    'f:containerStatuses': {}
                    'f:hostIP': {}
                    'f:phase': {}
                    'f:podIP': {}
                    'f:podIPs':
                        .: {}
                        'k:{"ip":"10.8.1.14"}':
                            .: {}
                            'f:ip': {}
                    'f:startTime': {}
spec:
    volumes:
        -
            name: kube-dns-config
            configMap:
                name: kube-dns
                defaultMode: 420
                optional: true
        -
            name: kube-dns-token-r2bjs
            secret:
                secretName: kube-dns-token-r2bjs
                defaultMode: 420
    containers:
        -
            name: kubedns
            image: 'gke.gcr.io/k8s-dns-kube-dns-amd64:1.15.16-gke.0'
            args:
                - '--domain=cluster.local.'
                - '--dns-port=10053'
                - '--config-dir=/kube-dns-config'
                - '--v=2'
            ports:
                -
                    name: dns-local
                    containerPort: 10053
                    protocol: UDP
                -
                    name: dns-tcp-local
                    containerPort: 10053
                    protocol: TCP
                -
                    name: metrics
                    containerPort: 10055
                    protocol: TCP
            env:
                -
                    name: PROMETHEUS_PORT
                    value: '10055'
            resources:
                limits:
                    memory: 210Mi
                requests:
                    cpu: 100m
                    memory: 70Mi
            volumeMounts:
                -
                    name: kube-dns-config
                    mountPath: /kube-dns-config
                -
                    name: kube-dns-token-r2bjs
                    readOnly: true
                    mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            livenessProbe:
                httpGet:
                    path: /healthcheck/kubedns
                    port: 10054
                    scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 5
            readinessProbe:
                httpGet:
                    path: /readiness
                    port: 8081
                    scheme: HTTP
                initialDelaySeconds: 3
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
            securityContext:
                runAsUser: 1001
                runAsGroup: 1001
                readOnlyRootFilesystem: true
                allowPrivilegeEscalation: false
        -
            name: dnsmasq
            image: 'gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.16-gke.0'
            args:
                - '-v=2'
                - '-logtostderr'
                - '-configDir=/etc/k8s/dns/dnsmasq-nanny'
                - '-restartDnsmasq=true'
                - '--'
                - '-k'
                - '--cache-size=1000'
                - '--no-negcache'
                - '--dns-forward-max=1500'
                - '--log-facility=-'
                - '--server=/cluster.local/127.0.0.1#10053'
                - '--server=/in-addr.arpa/127.0.0.1#10053'
                - '--server=/ip6.arpa/127.0.0.1#10053'
            ports:
                -
                    name: dns
                    containerPort: 53
                    protocol: UDP
                -
                    name: dns-tcp
                    containerPort: 53
                    protocol: TCP
            resources:
                requests:
                    cpu: 150m
                    memory: 20Mi
            volumeMounts:
                -
                    name: kube-dns-config
                    mountPath: /etc/k8s/dns/dnsmasq-nanny
                -
                    name: kube-dns-token-r2bjs
                    readOnly: true
                    mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            livenessProbe:
                httpGet:
                    path: /healthcheck/dnsmasq
                    port: 10054
                    scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 5
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
            securityContext:
                capabilities:
                    add:
                        - NET_BIND_SERVICE
                        - SETGID
                    drop:
                        - all
        -
            name: sidecar
            image: 'gke.gcr.io/k8s-dns-sidecar-amd64:1.15.16-gke.0'
            args:
                - '--v=2'
                - '--logtostderr'
                - >-
                    --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
                - >-
                    --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
            ports:
                -
                    name: metrics
                    containerPort: 10054
                    protocol: TCP
            resources:
                requests:
                    cpu: 10m
                    memory: 20Mi
            volumeMounts:
                -
                    name: kube-dns-token-r2bjs
                    readOnly: true
                    mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            livenessProbe:
                httpGet:
                    path: /metrics
                    port: 10054
                    scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 5
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
            securityContext:
                runAsUser: 1001
                runAsGroup: 1001
                readOnlyRootFilesystem: true
                allowPrivilegeEscalation: false
    restartPolicy: Always
    terminationGracePeriodSeconds: 30
    dnsPolicy: Default
    nodeSelector:
        kubernetes.io/os: linux
    serviceAccountName: kube-dns
    serviceAccount: kube-dns
    nodeName: gke-kubevious-samples-pool-2-d17eaa99-a7xj
    securityContext:
        supplementalGroups:
            - 65534
        fsGroup: 65534
    affinity:
        podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
                -
                    weight: 100
                    podAffinityTerm:
                        labelSelector:
                            matchExpressions:
                                -
                                    key: k8s-app
                                    operator: In
                                    values:
                                        - kube-dns
                        topologyKey: kubernetes.io/hostname
    schedulerName: default-scheduler
    tolerations:
        -
            key: CriticalAddonsOnly
            operator: Exists
        -
            key: components.gke.io/gke-managed-components
            operator: Exists
        -
            key: node.kubernetes.io/not-ready
            operator: Exists
            effect: NoExecute
            tolerationSeconds: 300
        -
            key: node.kubernetes.io/unreachable
            operator: Exists
            effect: NoExecute
            tolerationSeconds: 300
    priorityClassName: system-cluster-critical
    priority: 2000000000
    enableServiceLinks: true
status:
    phase: Running
    conditions:
        -
            type: Initialized
            status: 'True'
            lastProbeTime: null
            lastTransitionTime: '2021-08-01T11:39:52Z'
        -
            type: Ready
            status: 'True'
            lastProbeTime: null
            lastTransitionTime: '2021-08-01T11:44:33Z'
        -
            type: ContainersReady
            status: 'True'
            lastProbeTime: null
            lastTransitionTime: '2021-08-01T11:44:33Z'
        -
            type: PodScheduled
            status: 'True'
            lastProbeTime: null
            lastTransitionTime: '2021-08-01T11:39:51Z'
    hostIP: 10.128.15.198
    podIP: 10.8.1.14
    podIPs:
        -
            ip: 10.8.1.14
    startTime: '2021-08-01T11:39:52Z'
    containerStatuses:
        -
            name: dnsmasq
            state:
                running:
                    startedAt: '2021-08-01T11:43:32Z'
            lastState: {}
            ready: true
            restartCount: 0
            image: 'gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.16-gke.0'
            imageID: >-
                docker-pullable://gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:bd25b644c9e14dcfe77f54ec7f249b151850f6ad23548e02046aa9204fb11d25
            containerID: >-
                docker://2dd39aaebbefbad6fc5e8209aacfc377c6661f609b21898831b1844c8048d4c1
            started: true
        -
            name: kubedns
            state:
                running:
                    startedAt: '2021-08-01T11:40:57Z'
            lastState: {}
            ready: true
            restartCount: 0
            image: 'gke.gcr.io/k8s-dns-kube-dns-amd64:1.15.16-gke.0'
            imageID: >-
                docker-pullable://gke.gcr.io/k8s-dns-kube-dns-amd64@sha256:9e76595f4bf8490bbaff6acfcc1f3243a4bb112481f7f59b3a52c2b09e6ced3c
            containerID: >-
                docker://722fa2b676725c3990eb22cee2d5ee5d18ccbca8e04177863ca4f6dbb2ca9157
            started: true
        -
            name: sidecar
            state:
                running:
                    startedAt: '2021-08-01T11:44:24Z'
            lastState: {}
            ready: true
            restartCount: 0
            image: 'gke.gcr.io/k8s-dns-sidecar-amd64:1.15.16-gke.0'
            imageID: >-
                docker-pullable://gke.gcr.io/k8s-dns-sidecar-amd64@sha256:f890a184d953ef2a80f756ff1ab93e92cc6cd76cdb0c89b56d1d30846d72249b
            containerID: >-
                docker://c196281da89a68479cfcfc8dc6f02ee79afb1524bcc4f765e4a78eb428920de5
            started: true
    qosClass: Burstable

