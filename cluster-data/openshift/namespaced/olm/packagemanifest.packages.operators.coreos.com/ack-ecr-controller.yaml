apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Amazon, Inc.
    provider-url: https://aws.amazon.com
  name: ack-ecr-controller
  namespace: olm
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: ack-ecr-controller.v0.1.7
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "ecr.services.k8s.aws/v1alpha1",
              "kind": "Repository",
              "metadata": {
                "name": "example"
              },
              "spec": {}
            }
          ]
        capabilities: Basic Install
        categories: Cloud Provider
        certified: "false"
        containerImage: public.ecr.aws/aws-controllers-k8s/ecr-controller:v0.1.7
        createdAt: "2022-09-12 21:33:42"
        description: AWS ECR controller is a service controller for managing ECR resources
          in Kubernetes
        operatorframework.io/suggested-namespace: ack-system
        operators.operatorframework.io/builder: operator-sdk-v1.19.0+git
        operators.operatorframework.io/project_layout: unknown
        repository: https://github.com/aws-controllers-k8s
        support: Community
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: PullThroughCacheRule represents the state of an AWS ecr PullThroughCacheRule
            resource.
          displayName: PullThroughCacheRule
          kind: PullThroughCacheRule
          name: pullthroughcacherules.ecr.services.k8s.aws
          version: v1alpha1
        - description: Repository represents the state of an AWS ecr Repository resource.
          displayName: Repository
          kind: Repository
          name: repositories.ecr.services.k8s.aws
          version: v1alpha1
      description: |-
        Manage Amazon Elastic Container Registry (ECR) resources in AWS from within your Kubernetes cluster.

        **About Amazon ECR**

        Amazon Elastic Container Registry (Amazon ECR) is an AWS managed container image registry service that is secure, scalable, and reliable. Amazon ECR supports private repositories with resource-based permissions using AWS IAM. This is so that specified users or Amazon EC2 instances can access your container repositories and images. You can use your preferred CLI to push, pull, and manage Docker images, Open Container Initiative (OCI) images, and OCI compatible artifacts.

        **About the AWS Controllers for Kubernetes**

        This controller is a component of the [AWS Controller for Kubernetes](https://github.com/aws/aws-controllers-k8s) project.

        **Pre-Installation Steps**

        Please follow the following link: [Red Hat OpenShift](https://aws-controllers-k8s.github.io/community/docs/user-docs/openshift/)
      displayName: AWS Controllers for Kubernetes - Amazon ECR
      installModes:
      - supported: true
        type: AllNamespaces
      keywords:
      - ecr
      - aws
      - amazon
      - ack
      links:
      - name: AWS Controllers for Kubernetes
        url: https://github.com/aws-controllers-k8s/community
      - name: Documentation
        url: https://aws-controllers-k8s.github.io/community/
      - name: Amazon ECR Developer Resources
        url: https://aws.amazon.com/ecr/resources/
      maintainers:
      - email: ack-maintainers@amazon.com
        name: ecr maintainer team
      maturity: alpha
      provider:
        name: Amazon, Inc.
        url: https://aws.amazon.com
      relatedImages:
      - public.ecr.aws/aws-controllers-k8s/ecr-controller:v0.1.7
      version: 0.1.7
    name: alpha
  defaultChannel: alpha
  packageName: ack-ecr-controller
  provider:
    name: Amazon, Inc.
    url: https://aws.amazon.com
