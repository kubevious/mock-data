apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Backube
    provider-url: https://github.com/backube
  name: snapscheduler
  namespace: operators
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: snapscheduler.v3.1.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "snapscheduler.backube/v1",
              "kind": "SnapshotSchedule",
              "metadata": {
                "name": "daily"
              },
              "spec": {
                "retention": {
                  "maxCount": 7
                },
                "schedule": "0 0 * * *"
              }
            }
          ]
        capabilities: Full Lifecycle
        categories: Storage
        certified: "false"
        containerImage: quay.io/backube/snapscheduler:3.1.0
        description: The SnapScheduler operator takes snapshots of Kubernetes CSI-based
          persistent volumes according to user-supplied schedules.
        operators.operatorframework.io/builder: operator-sdk-v1.22.0
        operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
        repository: https://github.com/backube/snapscheduler
        support: https://github.com/backube/snapscheduler
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: SnapshotSchedule defines a schedule for taking automated snapshots
            of PVC(s)
          displayName: Snapshot Schedule
          kind: SnapshotSchedule
          name: snapshotschedules.snapscheduler.backube
          version: v1
      description: |-
        ## About this operator

        The SnapScheduler operator takes snapshots of CSI-based PersistentVolumes
        according to a configurable
        [Cron-like](https://en.wikipedia.org/wiki/Cron#Overview) schedule. The
        schedules include configurable retention policies for snapshots as well as
        selectors to limit the volumes that are snapshotted. An example schedule
        could be:

        > *Snapshot **all volumes** in a namespace **daily at midnight**, retaining
        > the most recent **7** snapshots for each volume.*

        Multiple schedules can be combined to provide more elaborate protection
        schemes. For example, a given volume (or collection of volumes) could be
        protected with:

        - 6 hourly snapshots
        - 7 daily snapshots
        - 4 weekly snapshots
        - 12 monthly snapshots

        ### How it works

        The operator watches for `SnapshotSchedule` CRs in each namespace. When the
        current time matches the schedule's cronspec, the operator creates a
        `VolumeSnapshot` object for each `PersistentVolumeClaim` in the namespace
        (or subset thereof if a label selector is provided). The `VolumeSnapshot`
        objects are named according to the template:
        `<pvcname>-<schedulename>-<timestamp>`. After creating the new snapshots,
        the oldest snapshots are removed if necessary, according to the retention
        policy of the schedule.

        Please see the [full
        documentation](https://backube.github.io/snapscheduler/) for more
        information.

        ## Requirements

        - OpenShift >= 4.7 (Kubernetes >= 1.20)
        - CSI-based storage driver that supports snapshots (i.e. has the
          `CREATE_DELETE_SNAPSHOT` capability)

        ## Examples

        The schedule for snapshotting is controlled by the
        `snapshotschedules.snapscheduler.backube` Custom Resource. This is a
        namespaced resource that applies only to the PersistentVolumeClaims in its
        namespace.

        Below is a simple example that keeps 7 daily (taken at midnight) snapshots
        of all PVCs in a given namespace:

        ```yaml
        ---
        apiVersion: snapscheduler.backube/v1
        kind: SnapshotSchedule
        metadata:
          name: daily
        spec:
          retention:
            maxCount: 7
          schedule: "0 0 * * *"
        ```

        See the [usage
        documentation](https://backube.github.io/snapscheduler/usage.html) for full
        details, including how to:

        - add label selectors to restrict which PVCs this schedule applies to
        - set the VolumeSnapshotClass used by the schedule
        - apply custom labels to the automatically created VolumeSnapshot objects
      displayName: SnapScheduler
      installModes:
      - supported: false
        type: OwnNamespace
      - supported: false
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - csi
      - snapshot
      - storage
      - scheduler
      links:
      - name: Documentation
        url: https://backube.github.io/snapscheduler/
      - name: Source
        url: https://github.com/backube/snapscheduler
      - name: Blog
        url: https://backube.github.io/
      maintainers:
      - email: jstrunk@redhat.com
        name: John Strunk
      maturity: stable
      minKubeVersion: 1.20.0-0
      provider:
        name: Backube
        url: https://github.com/backube
      relatedImages:
      - quay.io/brancz/kube-rbac-proxy:v0.13.0
      - quay.io/backube/snapscheduler:3.1.0
      version: 3.1.0
    name: stable
  - currentCSV: snapscheduler.v3.1.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "snapscheduler.backube/v1",
              "kind": "SnapshotSchedule",
              "metadata": {
                "name": "daily"
              },
              "spec": {
                "retention": {
                  "maxCount": 7
                },
                "schedule": "0 0 * * *"
              }
            }
          ]
        capabilities: Full Lifecycle
        categories: Storage
        certified: "false"
        containerImage: quay.io/backube/snapscheduler:3.1.0
        description: The SnapScheduler operator takes snapshots of Kubernetes CSI-based
          persistent volumes according to user-supplied schedules.
        operators.operatorframework.io/builder: operator-sdk-v1.22.0
        operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
        repository: https://github.com/backube/snapscheduler
        support: https://github.com/backube/snapscheduler
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: SnapshotSchedule defines a schedule for taking automated snapshots
            of PVC(s)
          displayName: Snapshot Schedule
          kind: SnapshotSchedule
          name: snapshotschedules.snapscheduler.backube
          version: v1
      description: |-
        ## About this operator

        The SnapScheduler operator takes snapshots of CSI-based PersistentVolumes
        according to a configurable
        [Cron-like](https://en.wikipedia.org/wiki/Cron#Overview) schedule. The
        schedules include configurable retention policies for snapshots as well as
        selectors to limit the volumes that are snapshotted. An example schedule
        could be:

        > *Snapshot **all volumes** in a namespace **daily at midnight**, retaining
        > the most recent **7** snapshots for each volume.*

        Multiple schedules can be combined to provide more elaborate protection
        schemes. For example, a given volume (or collection of volumes) could be
        protected with:

        - 6 hourly snapshots
        - 7 daily snapshots
        - 4 weekly snapshots
        - 12 monthly snapshots

        ### How it works

        The operator watches for `SnapshotSchedule` CRs in each namespace. When the
        current time matches the schedule's cronspec, the operator creates a
        `VolumeSnapshot` object for each `PersistentVolumeClaim` in the namespace
        (or subset thereof if a label selector is provided). The `VolumeSnapshot`
        objects are named according to the template:
        `<pvcname>-<schedulename>-<timestamp>`. After creating the new snapshots,
        the oldest snapshots are removed if necessary, according to the retention
        policy of the schedule.

        Please see the [full
        documentation](https://backube.github.io/snapscheduler/) for more
        information.

        ## Requirements

        - OpenShift >= 4.7 (Kubernetes >= 1.20)
        - CSI-based storage driver that supports snapshots (i.e. has the
          `CREATE_DELETE_SNAPSHOT` capability)

        ## Examples

        The schedule for snapshotting is controlled by the
        `snapshotschedules.snapscheduler.backube` Custom Resource. This is a
        namespaced resource that applies only to the PersistentVolumeClaims in its
        namespace.

        Below is a simple example that keeps 7 daily (taken at midnight) snapshots
        of all PVCs in a given namespace:

        ```yaml
        ---
        apiVersion: snapscheduler.backube/v1
        kind: SnapshotSchedule
        metadata:
          name: daily
        spec:
          retention:
            maxCount: 7
          schedule: "0 0 * * *"
        ```

        See the [usage
        documentation](https://backube.github.io/snapscheduler/usage.html) for full
        details, including how to:

        - add label selectors to restrict which PVCs this schedule applies to
        - set the VolumeSnapshotClass used by the schedule
        - apply custom labels to the automatically created VolumeSnapshot objects
      displayName: SnapScheduler
      installModes:
      - supported: false
        type: OwnNamespace
      - supported: false
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - csi
      - snapshot
      - storage
      - scheduler
      links:
      - name: Documentation
        url: https://backube.github.io/snapscheduler/
      - name: Source
        url: https://github.com/backube/snapscheduler
      - name: Blog
        url: https://backube.github.io/
      maintainers:
      - email: jstrunk@redhat.com
        name: John Strunk
      maturity: stable
      minKubeVersion: 1.20.0-0
      provider:
        name: Backube
        url: https://github.com/backube
      relatedImages:
      - quay.io/backube/snapscheduler:3.1.0
      - quay.io/brancz/kube-rbac-proxy:v0.13.0
      version: 3.1.0
    name: candidate
  defaultChannel: stable
  packageName: snapscheduler
  provider:
    name: Backube
    url: https://github.com/backube
