apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Splunk Inc.
    provider-url: www.splunk.com
  name: splunk
  namespace: operators
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: splunk.v2.0.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "ClusterMaster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "clustermaster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "IndexerCluster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "indexercluster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "LicenseMaster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "licensemaster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "MonitoringConsole",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "monitoringconsole-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "SearchHeadCluster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "searchheadcluster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "Standalone",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "standalone-sample"
              },
              "spec": {}
            }
          ]
        capabilities: Seamless Upgrades
        categories: Big Data, Logging & Tracing, Monitoring, Security, AI/Machine
          Learning
        containerImage: docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50
        description: The Splunk Operator for Kubernetes enables you to quickly and
          easily deploy Splunk Enterprise on your choice of private or public cloud
          provider. The Operator simplifies scaling and management of Splunk Enterprise
          by automating administrative workflows using Kubernetes best practices.
        marketplace.openshift.io/remote-workflow: https://marketplace.redhat.com/en-us/operators/splunk-operator/pricing?utm_source=openshift_console
        marketplace.openshift.io/support-workflow: https://marketplace.redhat.com/en-us/operators/splunk-operator/support?utm_source=openshift_console
        olm.properties: '[{"type": "olm.maxOpenShiftVersion", "value": "4.9"}]'
        operators.operatorframework.io/builder: operator-sdk-v1.21.0
        operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
        repository: https://github.com/splunk/splunk-operator
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: ClusterMaster is the Schema for the cluster manager API
          displayName: Cluster Master v3
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v3
        - description: cluster master v1 api
          displayName: Cluster Master v1
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1
        - description: cluster master v1alpha1 api
          displayName: Cluster Master v1alpha1
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1alpha1
        - description: cluster master v1beta1 api
          displayName: Cluster Master v1beta1
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1beta1
        - description: cluster master v1beta2 api
          displayName: Cluster Master v1beta2
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1beta2
        - description: cluster master v1beta3 api
          displayName: Cluster Master v1beta3
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1beta3
        - description: cluster master v2 api
          displayName: Cluster Master v2
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v2
        - description: IndexerCluster is the Schema for a Splunk Enterprise indexer
            cluster
          displayName: Indexer Cluster v3
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v3
        - description: indexer cluster v1 api
          displayName: Indexer Cluster v1
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1
        - description: indexer cluster v1alpha1 api
          displayName: Indexer Cluster v1alpha1
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1alpha1
        - description: indexer cluster v1beta1 api
          displayName: Indexer Cluster v1beta1
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1beta1
        - description: indexer cluster v1beta2 api
          displayName: Indexer Cluster v1beta2
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1beta2
        - description: indexer cluster v1beta3 api
          displayName: Indexer Cluster v1beta3
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1beta3
        - description: indexer cluster v2 api
          displayName: Indexer Cluster v2
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v2
        - description: LicenseMaster is the Schema for a Splunk Enterprise license
            manager.
          displayName: License Master v3
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v3
        - description: LicenseMaster v1 is the Schema for a Splunk Enterprise license
            manager.
          displayName: License Master v1
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1
        - description: LicenseMaster v1alpha1 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1alpha1
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1alpha1
        - description: LicenseMaster v1beta1 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1beta1
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1beta1
        - description: LicenseMaster v1beta2 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1beta2
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1beta2
        - description: LicenseMaster v1beta3 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1beta3
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1beta3
        - description: LicenseMaster v2 is the Schema for a Splunk Enterprise license
            manager.
          displayName: License Master v2
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v2
        - description: MonitoringConsole is the Schema for the monitoringconsole API
          displayName: Monitoring Console v3
          kind: MonitoringConsole
          name: monitoringconsoles.enterprise.splunk.com
          version: v3
        - description: SearchHeadCluster is the Schema for a Splunk Enterprise search
            head cluster
          displayName: Search Head Cluster v3
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v3
        - description: SearchHeadCluster v1 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1
        - description: SearchHeadCluster v1alpha1 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1alpha1
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1alpha1
        - description: SearchHeadCluster v1beta1 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1beta1
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1beta1
        - description: SearchHeadCluster v1beta2 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1beta2
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1beta2
        - description: SearchHeadCluster v1beta3 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1beta3
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1beta3
        - description: SearchHeadCluster v2 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v2
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v2
        - description: Standalone is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v3
        - description: Standalone v1 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1
        - description: Standalone v1alpha1 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1alpha1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1alpha1
        - description: Standalone v1beat1 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1beta1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1beta1
        - description: Standalone v1beta2 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1beta2
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1beta2
        - description: Standalone v1beta3 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1beta3
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1beta3
        - description: Standalone v2 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v2
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v2
      description: "# Getting Started with the Splunk Operator for Kubernetes\n\nThe
        Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk
        Enterprise on your choice of private or public cloud provider. The Operator
        simplifies scaling and management of Splunk Enterprise by automating administrative
        workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as
        a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/)
        and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/)
        objects to create and manage a scalable and sustainable Splunk Enterprise
        environment.\n\nThis guide is intended to help new users get up and running
        with the\nSplunk Operator for Kubernetes. It is divided into the following
        sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n*
        [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n*
        [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating
        Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n*
        [Securing Splunk Deployments in Kubernetes](https://github.com/splunk/splunk-operator/blob/master/docs/Security.md)\n*
        [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK
        SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying
        distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY
        DEVELOPED: Splunk Operator for Kubernetes is an open source product developed
        by Splunkers with contributions from the community of partners and customers.
        This unique product will be enhanced, maintained and supported by the community,
        led by Splunkers with deep subject matter expertise. The primary reason why
        Splunk is taking this approach is to push product development closer to those
        that use and depend upon it. This direct connection will help us all be more
        successful and move at a rapid pace.\n\nIf you're interested in contributing
        to the SOK open source project, review the [Contributing to the Project](https://github.com/splunk/splunk-operator/blob/master/docs/CONTRIBUTING.md)
        page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)**
        channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)**
        splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview
        the [Change Log](https://github.com/splunk/splunk-operator/blob/master/docs/ChangeLog.md)
        page for a history of changes in each release.\n\n## Prerequisites for the
        Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version
        1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with
        any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/)
        of Kubernetes. We do not have platform recommendations, but this is a table
        of platforms that our developers, customers, and partners have used successfully
        with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing
        Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes
        Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft
        Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner
        Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms
        </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise
        Compatibility\nEach Splunk Operator release has specific Splunk Enterprise
        compatibility requirements. Before installing or upgrading the Splunk Operator,
        review the [Change Log](https://github.com/splunk/splunk-operator/blob/master/docs/ChangeLog.md)
        to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk
        Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator
        by following the instructions given at [Installing Splunk Apps](https://github.com/splunk/splunk-operator/blob/master/docs/Examples.md#installing-splunk-apps).
        \ Premium apps such as Enterprise Security and IT Service Intelligence are
        currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator
        requires these docker images to be present or available to your Kubernetes
        cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by
        this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator)
        (1.1.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk)
        (8.2.6 or later)\n\nAll of the Splunk Enterprise images are publicly available
        on [Docker Hub](https://hub.docker.com/). If your cluster does not have access
        to pull from Docker Hub, see the [Required Images Documentation](Images.md)
        page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes
        and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources
        Requirements\nThe resource guidelines for running production Splunk Enterprise
        instances in pods through the Splunk Operator are the same as running Splunk
        Enterprise natively on a supported operating system and file system. Refer
        to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware)
        for additional details.  We would also recommend following the same guidance
        on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP)
        for the nodes in your Kubernetes cluster.  Please be aware that this may impact
        performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased
        on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware),
        a summary of the minimum reference hardware requirements is given below.\n\n|
        Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n|
        ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU
        Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head
        Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._|
        _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per
        core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn
        addition to the guidelines provided in the reference hardware, [Kubernetes
        Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)
        \ can be used to configure CPU/Mem resources allocations that map to your
        _service level objectives_. For further information on utilizing Kubernetes
        Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        |
        Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_
        | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory
        \ ```requests``` and ```limits``` values are equal, the pod is given a QoS
        class of Guaranteed. This level of service is recommended for Splunk Enterprise
        ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests```
        < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value
        is set lower than the ```limits``` the pod is given a QoS class of Burstable.
        This level of service is useful in a user acceptance testing ___(UAT) environment___,
        where the pods run with minimum resources, and Kubernetes allocates additional
        resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests```
        or ```limits``` are set_ | _When the ```requests``` or ```limits``` values
        are not set, the pod is given a QoS class of BestEffort. This level of service
        is sufficient for ___testing, or a small development task___._ |\n\nExamples
        on how to implement these QoS are given at [Examples of Guaranteed and Burstable
        QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n###
        Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume
        Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims)
        to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\"
        path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying
        machines fail, Kubernetes will automatically try to recover by restarting
        the Splunk Enterprise pods on another machine that is able to reuse the same
        data volumes. This minimizes the maintenance burden on your operations team
        by reducing the impact of common hardware failures to the equivalent of a
        service restart. \nThe use of Persistent Volume Claims requires that your
        cluster is configured to support one or more Kubernetes persistent [Storage
        Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See
        the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for
        more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure
        must have access to storage that meets or exceeds the recommendations provided
        in the Splunk Enterprise storage type recommendations at [Reference Hardware
        documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F)
        In summary, Indexers with SmartStore need NVMe or SSD storage to provide the
        necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk
        SmartStore Required\nFor production environments, we are requiring the use
        of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases,
        demand for storage typically outpaces demand for compute resources. [Splunk's
        SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore)
        allows you to manage your indexer storage and compute resources in a ___cost-effective___
        manner by scaling those resources separately. SmartStore utilizes a fast storage
        cache on each indexer node to keep recent data locally available for search
        and keep other data in a remote object store. Look into the [SmartStore Resource
        Guide](https://github.com/splunk/splunk-operator/blob/master/docs/SmartStore.md)
        document for configuring and using SmartStore through operator.\n\n## Installing
        the Splunk Operator\n\nA Kubernetes cluster administrator can install and
        start the Splunk Operator by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/1.1.0/splunk-operator-install.yaml\n```\n\nThe
        [Advanced Installation Instructions](Install.md) page offers guidance for
        advanced configurations, including the use of private image registries, installation
        at cluster scope, and installing the Splunk Operator as a user who is not
        a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red
        Hat OpenShift](https://github.com/splunk/splunk-operator/blob/master/docs/OpenShift.md)
        page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is
        copied to a private registry, or directly onto your Kubernetes workers before
        creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md)
        page, and the [Advanced Installation Instructions](https://github.com/splunk/splunk-operator/blob/master/docs/Install.md)
        page for guidance on working with copies of the Docker images.*\n\nAfter the
        Splunk Operator starts, you'll see a single pod running within your current
        namespace:\n```\n$ kubectl get pods\nNAME                               READY
        \  STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running
        \  0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information
        on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator
        and Splunk Enterprise Deployments](https://github.com/splunk/splunk-operator/blob/master/docs/SplunkOperatorUpgrade.md)
        page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom
        resource is used to create a single instance deployment of Splunk Enterprise.
        For example:\n\n1. Run the command to create a deployment named “s1”:\n\n\n```yaml\ncat
        <<EOF | kubectl apply -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n
        \ name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The
        `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk
        Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/)
        associated with the instance if you delete the pod.**\n\nWithin a few minutes,
        you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME
        \                                  READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl
        \       1/1    Running   0          11h\nsplunk-default-monitoring-console-0
        \    1/1    Running   0          30s\nsplunk-s1-standalone-0                  1/1
        \   Running   0          45s\n```\n\n*Note: if your shell prints a `%` at
        the end, leave that out when you copy the output.*\n\n2. You can use a simple
        network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl
        port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for
        the namespace. The Splunk Enterprise passwords used in the namespace are generated
        automatically. To learn how to find and read the passwords, see the [Reading
        global kubernetes secret object](https://github.com/splunk/splunk-operator/blob/master/docs/Examples.md#reading-global-kubernetes-secret-object)
        page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the
        `admin` account with the password.\n\n5. To delete your standalone deployment,
        run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom
        resource is just one of the resources the Splunk Operator provides. You can
        find more custom resources and the parameters they support on the [Custom
        Resource Guide](https://github.com/splunk/splunk-operator/blob/master/docs/CustomResources.md)
        page.\n\n\nFor additional guidance on making Splunk Enterprise ports accessible
        outside of Kubernetes, see the [Configuring Ingress](https://github.com/splunk/splunk-operator/blob/master/docs/Ingress.md)
        page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with
        a valid support entitlement contract and have a Splunk-related question, you
        can open a support case on the https://www.splunk.com/ support portal.\n"
      displayName: Splunk Operator
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - Splunk
      - Enterprise
      - Operator
      - Monitoring
      - Logs
      - Tracing
      links:
      - name: Documentation
        url: https://github.com/splunk/splunk-operator/tree/master/docs
      maintainers:
      - email: support@splunk.com
        name: Splunk Operator Maintainers
      maturity: stable
      minKubeVersion: 1.18.0
      provider:
        name: Splunk Inc.
        url: www.splunk.com
      relatedImages:
      - docker.io/splunk/splunk@sha256:dc97f8a61f947deb52648c3b3ea48b765cdbac5fdb171479d0961f8d80b6dcce
      - gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c
      - docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50
      version: 2.0.0
    name: alpha
  - currentCSV: splunk.v2.0.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "ClusterMaster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "clustermaster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "IndexerCluster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "indexercluster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "LicenseMaster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "licensemaster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "MonitoringConsole",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "monitoringconsole-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "SearchHeadCluster",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "searchheadcluster-sample"
              },
              "spec": {}
            },
            {
              "apiVersion": "enterprise.splunk.com/v3",
              "kind": "Standalone",
              "metadata": {
                "finalizers": [
                  "enterprise.splunk.com/delete-pvc"
                ],
                "name": "standalone-sample"
              },
              "spec": {}
            }
          ]
        capabilities: Seamless Upgrades
        categories: Big Data, Logging & Tracing, Monitoring, Security, AI/Machine
          Learning
        containerImage: docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50
        description: The Splunk Operator for Kubernetes enables you to quickly and
          easily deploy Splunk Enterprise on your choice of private or public cloud
          provider. The Operator simplifies scaling and management of Splunk Enterprise
          by automating administrative workflows using Kubernetes best practices.
        marketplace.openshift.io/remote-workflow: https://marketplace.redhat.com/en-us/operators/splunk-operator/pricing?utm_source=openshift_console
        marketplace.openshift.io/support-workflow: https://marketplace.redhat.com/en-us/operators/splunk-operator/support?utm_source=openshift_console
        olm.properties: '[{"type": "olm.maxOpenShiftVersion", "value": "4.9"}]'
        operators.operatorframework.io/builder: operator-sdk-v1.21.0
        operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
        repository: https://github.com/splunk/splunk-operator
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: ClusterMaster is the Schema for the cluster manager API
          displayName: Cluster Master v3
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v3
        - description: cluster master v1 api
          displayName: Cluster Master v1
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1
        - description: cluster master v1alpha1 api
          displayName: Cluster Master v1alpha1
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1alpha1
        - description: cluster master v1beta1 api
          displayName: Cluster Master v1beta1
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1beta1
        - description: cluster master v1beta2 api
          displayName: Cluster Master v1beta2
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1beta2
        - description: cluster master v1beta3 api
          displayName: Cluster Master v1beta3
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v1beta3
        - description: cluster master v2 api
          displayName: Cluster Master v2
          kind: ClusterMaster
          name: clustermasters.enterprise.splunk.com
          version: v2
        - description: IndexerCluster is the Schema for a Splunk Enterprise indexer
            cluster
          displayName: Indexer Cluster v3
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v3
        - description: indexer cluster v1 api
          displayName: Indexer Cluster v1
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1
        - description: indexer cluster v1alpha1 api
          displayName: Indexer Cluster v1alpha1
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1alpha1
        - description: indexer cluster v1beta1 api
          displayName: Indexer Cluster v1beta1
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1beta1
        - description: indexer cluster v1beta2 api
          displayName: Indexer Cluster v1beta2
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1beta2
        - description: indexer cluster v1beta3 api
          displayName: Indexer Cluster v1beta3
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v1beta3
        - description: indexer cluster v2 api
          displayName: Indexer Cluster v2
          kind: IndexerCluster
          name: indexerclusters.enterprise.splunk.com
          version: v2
        - description: LicenseMaster is the Schema for a Splunk Enterprise license
            manager.
          displayName: License Master v3
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v3
        - description: LicenseMaster v1 is the Schema for a Splunk Enterprise license
            manager.
          displayName: License Master v1
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1
        - description: LicenseMaster v1alpha1 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1alpha1
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1alpha1
        - description: LicenseMaster v1beta1 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1beta1
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1beta1
        - description: LicenseMaster v1beta2 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1beta2
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1beta2
        - description: LicenseMaster v1beta3 is the Schema for a Splunk Enterprise
            license manager.
          displayName: License Master v1beta3
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v1beta3
        - description: LicenseMaster v2 is the Schema for a Splunk Enterprise license
            manager.
          displayName: License Master v2
          kind: LicenseMaster
          name: licensemasters.enterprise.splunk.com
          version: v2
        - description: MonitoringConsole is the Schema for the monitoringconsole API
          displayName: Monitoring Console v3
          kind: MonitoringConsole
          name: monitoringconsoles.enterprise.splunk.com
          version: v3
        - description: SearchHeadCluster is the Schema for a Splunk Enterprise search
            head cluster
          displayName: Search Head Cluster v3
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v3
        - description: SearchHeadCluster v1 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1
        - description: SearchHeadCluster v1alpha1 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1alpha1
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1alpha1
        - description: SearchHeadCluster v1beta1 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1beta1
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1beta1
        - description: SearchHeadCluster v1beta2 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1beta2
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1beta2
        - description: SearchHeadCluster v1beta3 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v1beta3
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v1beta3
        - description: SearchHeadCluster v2 is the Schema for a Splunk Enterprise
            search
          displayName: Search Head Cluster v2
          kind: SearchHeadCluster
          name: searchheadclusters.enterprise.splunk.com
          version: v2
        - description: Standalone is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v3
        - description: Standalone v1 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1
        - description: Standalone v1alpha1 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1alpha1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1alpha1
        - description: Standalone v1beat1 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1beta1
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1beta1
        - description: Standalone v1beta2 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1beta2
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1beta2
        - description: Standalone v1beta3 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v1beta3
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v1beta3
        - description: Standalone v2 is the Schema for a Splunk Enterprise standalone
            instances.
          displayName: Standalone v2
          kind: Standalone
          name: standalones.enterprise.splunk.com
          version: v2
      description: "# Getting Started with the Splunk Operator for Kubernetes\n\nThe
        Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk
        Enterprise on your choice of private or public cloud provider. The Operator
        simplifies scaling and management of Splunk Enterprise by automating administrative
        workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as
        a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/)
        and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/)
        objects to create and manage a scalable and sustainable Splunk Enterprise
        environment.\n\nThis guide is intended to help new users get up and running
        with the\nSplunk Operator for Kubernetes. It is divided into the following
        sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n*
        [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n*
        [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating
        Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n*
        [Securing Splunk Deployments in Kubernetes](https://github.com/splunk/splunk-operator/blob/master/docs/Security.md)\n*
        [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK
        SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying
        distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY
        DEVELOPED: Splunk Operator for Kubernetes is an open source product developed
        by Splunkers with contributions from the community of partners and customers.
        This unique product will be enhanced, maintained and supported by the community,
        led by Splunkers with deep subject matter expertise. The primary reason why
        Splunk is taking this approach is to push product development closer to those
        that use and depend upon it. This direct connection will help us all be more
        successful and move at a rapid pace.\n\nIf you're interested in contributing
        to the SOK open source project, review the [Contributing to the Project](https://github.com/splunk/splunk-operator/blob/master/docs/CONTRIBUTING.md)
        page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)**
        channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)**
        splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview
        the [Change Log](https://github.com/splunk/splunk-operator/blob/master/docs/ChangeLog.md)
        page for a history of changes in each release.\n\n## Prerequisites for the
        Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version
        1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with
        any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/)
        of Kubernetes. We do not have platform recommendations, but this is a table
        of platforms that our developers, customers, and partners have used successfully
        with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing
        Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes
        Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft
        Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner
        Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms
        </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise
        Compatibility\nEach Splunk Operator release has specific Splunk Enterprise
        compatibility requirements. Before installing or upgrading the Splunk Operator,
        review the [Change Log](https://github.com/splunk/splunk-operator/blob/master/docs/ChangeLog.md)
        to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk
        Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator
        by following the instructions given at [Installing Splunk Apps](https://github.com/splunk/splunk-operator/blob/master/docs/Examples.md#installing-splunk-apps).
        \ Premium apps such as Enterprise Security and IT Service Intelligence are
        currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator
        requires these docker images to be present or available to your Kubernetes
        cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by
        this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator)
        (1.1.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk)
        (8.2.6 or later)\n\nAll of the Splunk Enterprise images are publicly available
        on [Docker Hub](https://hub.docker.com/). If your cluster does not have access
        to pull from Docker Hub, see the [Required Images Documentation](Images.md)
        page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes
        and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources
        Requirements\nThe resource guidelines for running production Splunk Enterprise
        instances in pods through the Splunk Operator are the same as running Splunk
        Enterprise natively on a supported operating system and file system. Refer
        to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware)
        for additional details.  We would also recommend following the same guidance
        on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP)
        for the nodes in your Kubernetes cluster.  Please be aware that this may impact
        performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased
        on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware),
        a summary of the minimum reference hardware requirements is given below.\n\n|
        Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n|
        ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU
        Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head
        Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._|
        _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per
        core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn
        addition to the guidelines provided in the reference hardware, [Kubernetes
        Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)
        \ can be used to configure CPU/Mem resources allocations that map to your
        _service level objectives_. For further information on utilizing Kubernetes
        Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        |
        Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_
        | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory
        \ ```requests``` and ```limits``` values are equal, the pod is given a QoS
        class of Guaranteed. This level of service is recommended for Splunk Enterprise
        ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests```
        < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value
        is set lower than the ```limits``` the pod is given a QoS class of Burstable.
        This level of service is useful in a user acceptance testing ___(UAT) environment___,
        where the pods run with minimum resources, and Kubernetes allocates additional
        resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests```
        or ```limits``` are set_ | _When the ```requests``` or ```limits``` values
        are not set, the pod is given a QoS class of BestEffort. This level of service
        is sufficient for ___testing, or a small development task___._ |\n\nExamples
        on how to implement these QoS are given at [Examples of Guaranteed and Burstable
        QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n###
        Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume
        Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims)
        to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\"
        path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying
        machines fail, Kubernetes will automatically try to recover by restarting
        the Splunk Enterprise pods on another machine that is able to reuse the same
        data volumes. This minimizes the maintenance burden on your operations team
        by reducing the impact of common hardware failures to the equivalent of a
        service restart. \nThe use of Persistent Volume Claims requires that your
        cluster is configured to support one or more Kubernetes persistent [Storage
        Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See
        the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for
        more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure
        must have access to storage that meets or exceeds the recommendations provided
        in the Splunk Enterprise storage type recommendations at [Reference Hardware
        documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F)
        In summary, Indexers with SmartStore need NVMe or SSD storage to provide the
        necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk
        SmartStore Required\nFor production environments, we are requiring the use
        of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases,
        demand for storage typically outpaces demand for compute resources. [Splunk's
        SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore)
        allows you to manage your indexer storage and compute resources in a ___cost-effective___
        manner by scaling those resources separately. SmartStore utilizes a fast storage
        cache on each indexer node to keep recent data locally available for search
        and keep other data in a remote object store. Look into the [SmartStore Resource
        Guide](https://github.com/splunk/splunk-operator/blob/master/docs/SmartStore.md)
        document for configuring and using SmartStore through operator.\n\n## Installing
        the Splunk Operator\n\nA Kubernetes cluster administrator can install and
        start the Splunk Operator by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/1.1.0/splunk-operator-install.yaml\n```\n\nThe
        [Advanced Installation Instructions](Install.md) page offers guidance for
        advanced configurations, including the use of private image registries, installation
        at cluster scope, and installing the Splunk Operator as a user who is not
        a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red
        Hat OpenShift](https://github.com/splunk/splunk-operator/blob/master/docs/OpenShift.md)
        page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is
        copied to a private registry, or directly onto your Kubernetes workers before
        creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md)
        page, and the [Advanced Installation Instructions](https://github.com/splunk/splunk-operator/blob/master/docs/Install.md)
        page for guidance on working with copies of the Docker images.*\n\nAfter the
        Splunk Operator starts, you'll see a single pod running within your current
        namespace:\n```\n$ kubectl get pods\nNAME                               READY
        \  STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running
        \  0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information
        on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator
        and Splunk Enterprise Deployments](https://github.com/splunk/splunk-operator/blob/master/docs/SplunkOperatorUpgrade.md)
        page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom
        resource is used to create a single instance deployment of Splunk Enterprise.
        For example:\n\n1. Run the command to create a deployment named “s1”:\n\n\n```yaml\ncat
        <<EOF | kubectl apply -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n
        \ name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The
        `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk
        Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/)
        associated with the instance if you delete the pod.**\n\nWithin a few minutes,
        you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME
        \                                  READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl
        \       1/1    Running   0          11h\nsplunk-default-monitoring-console-0
        \    1/1    Running   0          30s\nsplunk-s1-standalone-0                  1/1
        \   Running   0          45s\n```\n\n*Note: if your shell prints a `%` at
        the end, leave that out when you copy the output.*\n\n2. You can use a simple
        network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl
        port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for
        the namespace. The Splunk Enterprise passwords used in the namespace are generated
        automatically. To learn how to find and read the passwords, see the [Reading
        global kubernetes secret object](https://github.com/splunk/splunk-operator/blob/master/docs/Examples.md#reading-global-kubernetes-secret-object)
        page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the
        `admin` account with the password.\n\n5. To delete your standalone deployment,
        run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom
        resource is just one of the resources the Splunk Operator provides. You can
        find more custom resources and the parameters they support on the [Custom
        Resource Guide](https://github.com/splunk/splunk-operator/blob/master/docs/CustomResources.md)
        page.\n\n\nFor additional guidance on making Splunk Enterprise ports accessible
        outside of Kubernetes, see the [Configuring Ingress](https://github.com/splunk/splunk-operator/blob/master/docs/Ingress.md)
        page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with
        a valid support entitlement contract and have a Splunk-related question, you
        can open a support case on the https://www.splunk.com/ support portal.\n"
      displayName: Splunk Operator
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - Splunk
      - Enterprise
      - Operator
      - Monitoring
      - Logs
      - Tracing
      links:
      - name: Documentation
        url: https://github.com/splunk/splunk-operator/tree/master/docs
      maintainers:
      - email: support@splunk.com
        name: Splunk Operator Maintainers
      maturity: stable
      minKubeVersion: 1.18.0
      provider:
        name: Splunk Inc.
        url: www.splunk.com
      relatedImages:
      - docker.io/splunk/splunk@sha256:dc97f8a61f947deb52648c3b3ea48b765cdbac5fdb171479d0961f8d80b6dcce
      - gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c
      - docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50
      version: 2.0.0
    name: stable
  defaultChannel: stable
  packageName: splunk
  provider:
    name: Splunk Inc.
    url: www.splunk.com
