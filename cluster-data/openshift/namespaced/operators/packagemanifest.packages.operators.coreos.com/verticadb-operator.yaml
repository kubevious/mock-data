apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Vertica
    provider-url: http://www.vertica.com
  name: verticadb-operator
  namespace: operators
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: verticadb-operator.v1.7.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "vertica.com/v1beta1",
              "kind": "VerticaAutoscaler",
              "metadata": {
                "name": "verticaautoscaler-sample"
              },
              "spec": {
                "serviceName": "defaultsubcluster",
                "verticaDBName": "verticadb-sample"
              }
            },
            {
              "apiVersion": "vertica.com/v1beta1",
              "kind": "VerticaDB",
              "metadata": {
                "name": "verticadb-sample"
              },
              "spec": {
                "communal": {
                  "credentialSecret": "s3-auth",
                  "endpoint": "http://minio",
                  "includeUIDInPath": true,
                  "path": "s3://nimbusdb/db"
                },
                "image": "vertica/vertica-k8s:latest",
                "subclusters": [
                  {
                    "name": "defaultsubcluster",
                    "resources": {
                      "requests": {
                        "cpu": "500m"
                      }
                    },
                    "size": 3
                  }
                ]
              }
            }
          ]
        capabilities: Auto Pilot
        categories: Database
        containerImage: docker.io/vertica/verticadb-operator:1.7.0
        createdAt: "2022-08-26T14:44:35Z"
        description: Operator that manages a Vertica Eon Mode database.
        operators.operatorframework.io/builder: operator-sdk-v1.17.0+git
        operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
        repository: https://github.com/vertica/vertica-kubernetes
        support: Vertica
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: VerticaAutoscaler is a CR that allows you to autoscale one
            or more subclusters in a VerticaDB.
          displayName: Vertica Autoscaler
          kind: VerticaAutoscaler
          name: verticaautoscalers.vertica.com
          version: v1beta1
        - description: VerticaDB is the CR that defines a Vertica Eon mode cluster
            that is managed by the verticadb-operator.
          displayName: Vertica DB
          kind: VerticaDB
          name: verticadbs.vertica.com
          version: v1beta1
      description: |-
        ### What is Vertica?
        Vertica is a unified analytics platform, based on a massively scalable architecture with the broadest set of analytical functions spanning event and time series, pattern matching, geospatial and end-to-end in-database machine learning. Vertica enables you to easily apply these powerful functions to the largest and most demanding analytical workloads, arming you and your customers with predictive business insights faster than any analytics data warehouse in the market. Vertica provides a unified analytics platform across major public clouds and on-premises data centers and integrates data in cloud object storage and HDFS without forcing you to move any of your data.

        ### What does this operator do?
        This operator manages a Vertica Eon Mode database, and automates the following administrative tasks:

        * Installing Vertica
        * Creating and reviving a Vertica database
        * Restarting and rescheduling DOWN pods to maintain quorum
        * Upgrading Vertica to a new version while keeping the database online
        * Subcluster scaling, both manually and automatically with the Horizontal Pod Autoscaler
        * Service management and health monitoring for pods
        * Load balancing for internal and external traffic
        * Expose a metrics endpoint to integrate with Prometheus to monitor the operator's health

        For a brief overview on how to create a cluster, see the [Vertica GitHub repository](https://github.com/vertica/vertica-kubernetes). For an in-depth look at Vertica on Kubernetes, see the [Vertica documentation](https://www.vertica.com/docs/latest/HTML/Content/Authoring/Containers/ContainerizedVertica.htm).
      displayName: VerticaDB Operator
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: false
        type: AllNamespaces
      keywords:
      - database
      - vertica
      links:
      - name: Documentation
        url: https://www.vertica.com/docs/latest/HTML/Content/Authoring/Containers/ContainerizedVertica.htm
      - name: Vertica Container Images
        url: https://hub.docker.com/u/vertica
      maintainers:
      - email: matt.spilchen@vertica.com
        name: Matt Spilchen
      maturity: alpha
      minKubeVersion: 1.21.1
      provider:
        name: Vertica
        url: http://www.vertica.com
      relatedImages:
      - docker.io/vertica/verticadb-operator:1.7.0
      - gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
      version: 1.7.0
    name: stable
  defaultChannel: stable
  packageName: verticadb-operator
  provider:
    name: Vertica
    url: http://www.vertica.com
