apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/arch.s390x: supported
    operatorframework.io/os.linux: supported
    provider: Strimzi
    provider-url: ""
  name: strimzi-kafka-operator
  namespace: kube-public
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: strimzi-cluster-operator.v0.19.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.5.0",
                    "replicas":3,
                    "listeners":{
                      "plain":{
                        },
                      "tls":{
                        }
                    },
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.5"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.5.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaConnectS2I",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.5.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.5.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "whitelist":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1alpha1",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 2,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.5.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": 1,
                      "offset.storage.replication.factor": 1,
                      "status.storage.replication.factor": 1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "NetworkOutboundCapacityGoal",
                  "CpuCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: docker.io/strimzi/operator:0.19.0
        createdAt: "2020-07-27 22:49:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Connect cluster with Source 2 Image support
          displayName: Kafka Connect Source to Image
          kind: KafkaConnectS2I
          name: kafkaconnects2is.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1alpha1
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta1
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1alpha1
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1alpha1
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1alpha1
      description: "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
        cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)
        in various deployment configurations. See our [website](https://strimzi.io)
        for more details about the project.\n### New in 0.19\n* Support for scale
        subresource in `KafkaConnect`, `KafkaConnectS2I`, `KafkaBridge`, `KafkaMirrorMaker`,
        `KafkaMirrorMaker2`, and `KafkaConnector` resources\n* Use Java 11 as the
        Java runtime\n* Add support for Open Policy Agent for Kafka authorization\n*
        Use Strimzi Kafka Bridge 0.18.0\n* Make it possible to configure labels and
        annotations for secrets created by the User Operator\n* Remove deprecated
        `Kafka.spec.topicOperator` classes and deployment logic\n* Refactored the
        format of the `KafkaRebalance` resource's status. The state of the rebalance
        is now displayed in the associated `Condition`'s `type` field rather than
        the `status` field. This was done so that the information would display correctly
        in various Kubernetes tools.\n* Added performance tuning options to the `KafkaRebalance`
        CR and the ability to define a regular expression that will exclude matching
        topics from a rebalance optimization proposal.\n* Support dynamically changeable
        logging in the Entity Operator and Kafka Bridge \n### Supported Features\n*
        **Manages the Kafka Cluster** - Deploys and manages all of the components
        of this complex application, including dependencies like Apache ZooKeeper®
        that are traditionally hard to administer.\n* **Includes Kafka Connect** -
        Allows for configuration of common data sources and sinks to move data into
        and out of the Kafka cluster.\n* **Topic Management** - Creates and manages
        Kafka Topics within the cluster.\n* **User Management** - Creates and manages
        Kafka Users within the cluster.\n* **Connector Management** - Creates and
        manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2**
        - Allows for morroring data between different Apache Kafka® clusters.\n* **Includes
        HTTP Kafka Bridge** - Allows clients to send and receive messages through
        an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses
        built-in Cruise Control for redistributes partition replicas according to
        specified goals in order to achieve the best cluster performance.\n* **Monitoring**
        - Built-in support for monitoring using Prometheus and provided Grafana dashabords\n###
        Upgrading your Clusters\nThe Strimzi Operator understands how to run and upgrade
        between a set of Kafka versions. When specifying a new version in your config,
        check to make sure you aren't using any features that may have been removed.
        See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
        for more information.\n### Storage\nAn efficient data storage infrastructure
        is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed
        via Strimzi requires block storage. The use of file storage (for example,
        NFS) is not recommended.\nThe Strimzi Operator supports three types of data
        storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n*
        JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi
        also supports advanced operations such as adding or removing disks in Apache
        Kafka® brokers or resizing the persistent volumes (where supported by the
        infrastructure).\n### Documentation\nDocumentation to the current _master_
        branch as well as all releases can be found on our [website](https://strimzi.io/documentation).\n###
        Getting help\nIf you encounter any issues while using Strimzi, you can get
        help using:\n* [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n*
        [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
        Contributing\nYou can contribute by:\n* Raising any issues you find using
        Strimzi\n* Fixing issues by opening Pull Requests\n* Improving documentation\n*
        Talking about Strimzi\n\nAll bugs, tasks or enhancements are tracked as [GitHub
        issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues
        which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
        label.\n\nThe [Hacking guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/HACKING.md)
        describes how to build Strimzi and how to  test your changes before submitting
        a patch or opening a PR.\n\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)
        describes how to contribute to Strimzi documentation.\n\nIf you want to get
        in touch with us first before contributing, you can use:\n* [Strimzi mailing
        list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi
        Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
        License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).\n"
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.11.0
      provider:
        name: Strimzi
      relatedImages:
      - docker.io/strimzi/kafka-bridge@sha256:07625a283342ae26f94aa002362bf7a7729553a9a1693e6a9e1648e7f12b7bc2
      - docker.io/strimzi/jmxtrans@sha256:1f4c19182a6bff0ad0f358284e1da3cbdc042b13623f23e19802400542bef89d
      - docker.io/strimzi/kafka@sha256:df7007f48fb49969499b5191188ab299ff460d3bd04b2942b81e44088e5c47b7
      - docker.io/strimzi/kafka@sha256:19fe5726d2702b8d2a80e1eeb3c2330c1efb528d275b9671cbc3dabe8fd25940
      - docker.io/strimzi/operator@sha256:d8fed9eb28c6d024670b060527681e21c6744a6c7dd2bf48450ce577382d3646
      - docker.io/strimzi/kafka@sha256:961419d795036f5f491817a5652c8f30c531a7b3cafd245d9473812a6a632c19
      version: 0.19.0
    name: strimzi-0.19.x
  - currentCSV: strimzi-cluster-operator.v0.31.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.2.3",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "default.replication.factor":3,
                      "min.insync.replicas":2,
                      "inter.broker.protocol.version":"3.2"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.2.3",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.2.3",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.2.3",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            },
            {
              "apiVersion": "core.strimzi.io/v1beta2",
              "kind": "StrimziPodSet",
              "metadata": {
                "name": "strimzi-pod-set-example"
              },
              "spec": {
                "pods": [
                  {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                      "labels": {
                        "app": "strimzi-pod-set-example"
                      },
                      "name": "example-pod"
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "sleep",
                            3600
                          ],
                          "image": "busybox:latest",
                          "imagePullPolicy": "IfNotPresent",
                          "name": "busybox"
                        }
                      ]
                    }
                  }
                ],
                "selector": {
                  "matchLabels": {
                    "app": "strimzi-pod-set-example"
                  }
                }
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:6e5e207c70c25c595d3ce60268c0214c7518e95836c9b1212ef1eb2f008c7a76
        createdAt: "2022-09-20 21:07:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy",
          "proxy-aware"]'
        operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
        - description: Internal custom resource used to manage Strimzi pods
          displayName: Strimzi Pod Set
          kind: StrimziPodSet
          name: strimzipodsets.core.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        **This is the last version of Strimzi with support for Kubernetes 1.16, 1.17 and 1.18!**
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.31 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.31 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.31.1
        * Kafka 3.1.2 and 3.2.3 (fixes CVE-2022-34917)
        * Make `sasl.server.max.receive.size` broker option user configurable
        * Update Strimzi Kafka Bridge to 0.22.1
        ### New in 0.31.0
        * Support for Apache Kafka 3.2.1
        * Pluggable Pod Security Profiles with built-in support for _restricted_ Kubernetes Security Profile
        * Support for leader election and running multiple operator replicas (1 active leader replicas and one or more stand-by replicas)
        * Support for IPv6 addresses being used in Strimzi issued certificates
        * `StrimziPodSet` reconciliation metrics
        * Updated Strimzi Kafka Bridge to 0.22.0 and Kafka Exporter to 1.6.0
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi
        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kaniko-executor@sha256:06581fb615f0b13ddfe27fae26ba5836b12c6e28afd55a81cba7685c9ca4bf79
      - quay.io/strimzi/operator@sha256:6e5e207c70c25c595d3ce60268c0214c7518e95836c9b1212ef1eb2f008c7a76
      - quay.io/strimzi/kafka@sha256:652924a1dba46aa716caba8381f1e791c09035e31ce62fdcc81f9b69af36cd02
      - quay.io/strimzi/maven-builder@sha256:670ca70900f2229ef140a592b77f2107934601f8b050b79250eab17ff62099b6
      - quay.io/strimzi/kafka@sha256:9553aae22d35448681cbbf7a831a28149fb159f3df58ccf8c8ec4ca7eb9c1fdf
      - quay.io/strimzi/kafka@sha256:83acc1e2cc1e64a88bdbb54b9818a6ad3658c3da60e72c4be365f824c5fcf57c
      - quay.io/strimzi/kafka@sha256:430b3eb70e47a91d7b5b6f230d5be024c2de853099cc0437e219b443e0ead9f5
      - quay.io/strimzi/kafka@sha256:03cc48bc5cf367f898338665b253855bed7d6096fe577adfe344da2f2cddcfe4
      - quay.io/strimzi/jmxtrans@sha256:52dd107062d78c29bb58c905ac654c39df72bbe3c25613023aa33e834930606d
      - quay.io/strimzi/kafka@sha256:b7c059bd72d8b063a96dde788d91d1ad87498bad3e73acba600929d595aeb7d6
      - quay.io/strimzi/kafka-bridge@sha256:3ddac62a4f8c8a3ebb72d5841d3826f7fd3fbb0e00eb75fb40bced0a576b86a9
      version: 0.31.1
    name: stable
  - currentCSV: strimzi-cluster-operator.v0.22.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.7.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.7",
                      "inter.broker.protocol.version":"2.7"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.7.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnectS2I",
              "metadata":{
                "name":"my-connect-s2i-cluster"
              },
              "spec":{
                "version":"2.7.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.7.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "whitelist":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 2,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.7.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": 1,
                      "offset.storage.replication.factor": 1,
                      "status.storage.replication.factor": 1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "NetworkOutboundCapacityGoal",
                  "CpuCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster with S2I support"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:0e37f671e6d489c3e56ffb8f51f19a2a014b2cb3f57eafcc5e2931090932e725
        createdAt: "2021-03-23 13:13:13"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster with Source 2 Image support
          displayName: Kafka Connect Source to Image
          kind: KafkaConnectS2I
          name: kafkaconnects2is.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release introduces new API version `v1beta2` to all Strimzi custom resources.  This is a preparation for migration to `apiextensions/v1` which is needed because Kubernetes 1.22 will remove support for `apiextensions/v1beta1`.  Migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs after the upgrade to 0.22 is done and before upgrading to Strimzi 0.23 which will support only Strimzi `v1beta2` APIs and `apiextensions/v1` CRDs. For more details about the CRD upgrades, see the [documentation](https://strimzi.io/docs/operators/0.22.1/deploying.html#assembly-upgrade-resources-str).
        ### New in 0.22
        * Add v1beta2 version for all resources. v1beta2 removes all deprecated fields.
        * Add annotations that enable the operator to restart Kafka Connect connectors or tasks. The annotations can be applied to the KafkaConnector and the KafkaMirrorMaker2 custom resources.
        * Add additional configuration options for the Kaniko executor used by the Kafka Connect Build on Kubernetes
        * Add support for JMX options configuration of all Kafka Connect (KC, KC2SI, MM2)
        * Update Strimzi Kafka OAuth to version 0.7 and add support for new features (OAuth over SASL PLAIN, Checking token audience, Validating tokens using JSONPath)
        * Configure external logging ConfigMap name and key.
        * Add support for configuring labels and annotations in ClusterRoleBindings created as part of Kafka and Kafka Connect clusters
        * Add support for Ingress v1 in Kubernetes 1.19 and newer
        * Add support for Kafka 2.6.1
        * List topics used by a Kafka Connect connector in the .status section of the KafkaConnector custom resource
        * Bump Cruise Control to v2.5.37 for Kafka 2.7 support. Note this new version of Cruise Control uses Log4j 2 and is supported by dynamic logging configuration (where logging properties are defined in a ConfigMap). However, existing Log4j configurations must be updated to Log4j 2 configurations.
        * Support pausing reconciliation of CR with annotation strimzi.io/pause-reconciliation
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kafka@sha256:f7f19ec9598c4c577460988f48ddf55c1103fe3883fbe4ea8813f2864f24662e
      - quay.io/strimzi/kafka@sha256:322087236facbddbdb1c24d2f8d963773913a85f2333bebecf1e37374e88e54c
      - quay.io/strimzi/kafka@sha256:9413de5670950e85f43a5ee6d06940218f753f78f71489eb8f4fdcccdd21074e
      - quay.io/strimzi/kafka@sha256:59239810a6c46907590df3daaa79d10c034c26f770a51fec07313da389b031f6
      - quay.io/strimzi/kaniko-executor@sha256:c812530c2ea981d3316c7544b180289abfbd9adf1dde6f1345692b8fb0a65cb0
      - quay.io/strimzi/operator@sha256:0e37f671e6d489c3e56ffb8f51f19a2a014b2cb3f57eafcc5e2931090932e725
      - quay.io/strimzi/jmxtrans@sha256:79bbdab70980a6929197264b944a1f53b528785de1ecf47f96a0a397d43d784f
      - quay.io/strimzi/kafka@sha256:3e15af3627116de6c7db1619d9c963147392851be36fa6342c3c17263e993de3
      - quay.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
      version: 0.22.1
    name: strimzi-0.22.x
  - currentCSV: strimzi-cluster-operator.v0.27.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.0.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"3.0",
                      "inter.broker.protocol.version":"3.0"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.0.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.0.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.0.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            },
            {
              "apiVersion": "core.strimzi.io/v1beta2",
              "kind": "StrimziPodSet",
              "metadata": {
                "name": "strimzi-pod-set-example"
              },
              "spec": {
                "pods": [
                  {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                      "labels": {
                        "app": "strimzi-pod-set-example"
                      },
                      "name": "example-pod"
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "sleep",
                            3600
                          ],
                          "image": "busybox:latest",
                          "imagePullPolicy": "IfNotPresent",
                          "name": "busybox"
                        }
                      ]
                    }
                  }
                ],
                "selector": {
                  "matchLabels": {
                    "app": "strimzi-pod-set-example"
                  }
                }
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:9ea49407a04006d0bddfaaee822adfb95f5857af32ffcee81ba60ce891b07ba8
        createdAt: "2022-01-14 20:00:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
        - description: Internal custom resource used to manage Strimzi pods
          displayName: Strimzi Pod Set
          kind: StrimziPodSet
          name: strimzipodsets.core.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.27 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.27 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.27.1
        * Updated Log4j2 to version 2.17.1 and Fabric8 Kubernetes Client to 5.10.2
        ### New in 0.27.0
        * Updated Log4j2 to version 2.17.0 (adresses CVE-2021-44228, CVE-2021-45046, CVE-2021-45105)
        * (Experimental) support for AArch64 / ARM64 architecture
        * `ControlPlaneListener` and `ServiceAccountPatching` feature gates are now in the beta phase and are enabled by default
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kafka@sha256:a3ec567ca529df2fa41f8986d21e86dde66be94aa4baa56faa66db4dcb3b258e
      - quay.io/strimzi/kafka@sha256:5682a6bfcc4ee13d53a30d587c8f96bc40abe3618880989336c5af274ea3cefa
      - quay.io/strimzi/operator@sha256:9ea49407a04006d0bddfaaee822adfb95f5857af32ffcee81ba60ce891b07ba8
      - quay.io/strimzi/kafka-bridge@sha256:55a52316aead02efa2004174e11ad4728bb8b6f1c1415f725f597f1d2f2da188
      - quay.io/strimzi/jmxtrans@sha256:d2d2477517eb1ac98b51ad6d64d8c1c578141637afa8d46037076f0013183c0b
      - quay.io/strimzi/kaniko-executor@sha256:a07ebe6600d6baba09980abdde2931b3b6abd2f75aeb2cac5c6a2d22a37aa807
      - quay.io/strimzi/maven-builder@sha256:9acd178cc504be8acaa70a39f3c17830aae1f0e93a656110790f9476b09260d5
      - quay.io/strimzi/kafka@sha256:f4d68bb94447c6612f70de7f6587e9e7ef712c83769ea1f11a8dbda0d241a059
      version: 0.27.1
    name: strimzi-0.27.x
  - currentCSV: strimzi-cluster-operator.v0.28.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.1.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "default.replication.factor":3,
                      "min.insync.replicas":2,
                      "inter.broker.protocol.version":"3.1"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.1.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.1.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.1.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            },
            {
              "apiVersion": "core.strimzi.io/v1beta2",
              "kind": "StrimziPodSet",
              "metadata": {
                "name": "strimzi-pod-set-example"
              },
              "spec": {
                "pods": [
                  {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                      "labels": {
                        "app": "strimzi-pod-set-example"
                      },
                      "name": "example-pod"
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "sleep",
                            3600
                          ],
                          "image": "busybox:latest",
                          "imagePullPolicy": "IfNotPresent",
                          "name": "busybox"
                        }
                      ]
                    }
                  }
                ],
                "selector": {
                  "matchLabels": {
                    "app": "strimzi-pod-set-example"
                  }
                }
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:8b010c5fb8244b742a37f264feefc116d75bb2abd2d6895375cbeea250727b39
        createdAt: "2022-02-12 23:02:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
        - description: Internal custom resource used to manage Strimzi pods
          displayName: Strimzi Pod Set
          kind: StrimziPodSet
          name: strimzipodsets.core.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.28 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.28 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.28.0
        * Support for Kafka 3.1.0
        * Support for `StrimziPodSet` resources (disabled by default through the `UseStrimziPodSets` feature gate)
        * Support custom authentication mechanisms in Kafka listeners
        * Intra-broker disk balancing using Cruise Control
        * Add support for disabling the FIPS mode in OpenJDK
        * Fix renewing your own CA certificates
        * Added the option `createBootstrapService` to disable the creation of the bootstrap service for the Load Balancer Type Listener
        * Dependency updates (Strimzi Kafka Bridge, Strimzi OAuth, Open Policy Agent Authroizer plugin and others)
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/jmxtrans@sha256:3a55a81790dc88b90d1bf858e2cfd7e591ad0e79f763c6d1667b2d3eb0d0c79d
      - quay.io/strimzi/kaniko-executor@sha256:a07ebe6600d6baba09980abdde2931b3b6abd2f75aeb2cac5c6a2d22a37aa807
      - quay.io/strimzi/maven-builder@sha256:3d5d664e089651944712361a6d8ba42b578dbd9bb3dfd9972f614520c9cfab75
      - quay.io/strimzi/operator@sha256:8b010c5fb8244b742a37f264feefc116d75bb2abd2d6895375cbeea250727b39
      - quay.io/strimzi/kafka@sha256:7c04f65e216bb941458aeadffb85e9eeee43d5ca67da566017c2c93a0664c98e
      - quay.io/strimzi/kafka@sha256:06e9bda15495feb2b92d9950e834cdeed6ef20064f021a879610f1b59dd46950
      - quay.io/strimzi/kafka-bridge@sha256:c345c783d8fbbee4edeca2ebc47e7c454fcc2e26686820b8037de97369280ba0
      version: 0.28.0
    name: strimzi-0.28.x
  - currentCSV: strimzi-cluster-operator.v0.29.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.2.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "default.replication.factor":3,
                      "min.insync.replicas":2,
                      "inter.broker.protocol.version":"3.2"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.2.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.2.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.2.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            },
            {
              "apiVersion": "core.strimzi.io/v1beta2",
              "kind": "StrimziPodSet",
              "metadata": {
                "name": "strimzi-pod-set-example"
              },
              "spec": {
                "pods": [
                  {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                      "labels": {
                        "app": "strimzi-pod-set-example"
                      },
                      "name": "example-pod"
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "sleep",
                            3600
                          ],
                          "image": "busybox:latest",
                          "imagePullPolicy": "IfNotPresent",
                          "name": "busybox"
                        }
                      ]
                    }
                  }
                ],
                "selector": {
                  "matchLabels": {
                    "app": "strimzi-pod-set-example"
                  }
                }
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:afde94c6d2544207cb7f3c94b54455643558a9d5daaa13b9f736cc8da20e319c
        createdAt: "2022-05-15 00:01:07"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy",
          "proxy-aware"]'
        operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
        - description: Internal custom resource used to manage Strimzi pods
          displayName: Strimzi Pod Set
          kind: StrimziPodSet
          name: strimzipodsets.core.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.29 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.29 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.29.0
        * Add support for Apache Kafka 3.0.1, 3.1.1 and 3.2.0
        * Renew user certificates in User Operator only during maintenance windows
        * Remove TLS sidecar from Cruise Control pod. Cruise Control is now configured to not using ZooKeeper, so the TLS sidecar is not needed anymore.
        * Allow Cruise Control topic names to be configured
        * Add support for `spec.rack.topologyKey` property in Mirror Maker 2 to enable "fetch from the closest replica" feature.
        * Experiemntal support for the s390x platform
        * Added new rebalancing modes on the `KafkaRebalance` custom resource to add or remove brokers
        * Experimental KRaft mode (ZooKeeper-less Kafka). Use it for development and testing only!
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi
        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/jmxtrans@sha256:f89e3c9618430908a8b390f2490f5aa43687b12889b434472a962ce0170c6463
      - quay.io/strimzi/kafka@sha256:95678e843bc87cbe571f3f299045dd075725816b59e1b87821cd6025876ec559
      - quay.io/strimzi/kafka@sha256:935caab03f1d0365b47ddefec0c1d8fa449fc3de715ccdd298aedef5ce968c73
      - quay.io/strimzi/kafka-bridge@sha256:b7bc3dd90e87223766f608a0087b521f0bba79d1c21eaa833bc2708c71148b7f
      - quay.io/strimzi/maven-builder@sha256:0c096a59faf8fd224298c01415a895043db4647534c060cb7e53207e9448bf65
      - quay.io/strimzi/kaniko-executor@sha256:544c4987f7f3ca558b04e9ef4357be204f088212b7b5b9ed0f909401a8bc5238
      - quay.io/strimzi/operator@sha256:afde94c6d2544207cb7f3c94b54455643558a9d5daaa13b9f736cc8da20e319c
      - quay.io/strimzi/kafka@sha256:284cde40784b6ff7bfb81b6dd28928e1e8c598fe6a72504f025592e5b43fa94c
      - quay.io/strimzi/kafka@sha256:ac190141120c1800cc7131d3a1f701e64efdcd4a5d87f0b2e0e2cadfdef8b438
      - quay.io/strimzi/kafka@sha256:9dfc09273ad8fc4bdc75cbe93b4a061a05a5defb5884a221ae1e178ba602787f
      version: 0.29.0
    name: strimzi-0.29.x
  - currentCSV: strimzi-cluster-operator.v0.21.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.7.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.7",
                      "inter.broker.protocol.version":"2.7"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.7.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaConnectS2I",
              "metadata":{
                "name":"my-connect-s2i-cluster"
              },
              "spec":{
                "version":"2.7.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.7.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "whitelist":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1alpha1",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 2,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.7.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": 1,
                      "offset.storage.replication.factor": 1,
                      "status.storage.replication.factor": 1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "NetworkOutboundCapacityGoal",
                  "CpuCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster with S2I support"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator:0.21.1
        createdAt: "2021-01-19 13:13:13"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Connect cluster with Source 2 Image support
          displayName: Kafka Connect Source to Image
          kind: KafkaConnectS2I
          name: kafkaconnects2is.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1alpha1
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta1
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1alpha1
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1alpha1
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1alpha1
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### New in 0.21
        * **Since 0.21 Strimzi supports only Kubernetes 1.16 and higher.**
        * Support for Kafka 2.7.0
        * Support for declarative management of connector plugins in Kafka Connect CR
        * Add support for secretPrefix property for User Operator to prefix all secret names created from KafkaUser resource
        * Allow configuring labels and annotations for Cluster CA certificate secrets
        * Add the JAAS configuration string in the sasl.jaas.config property to the generated secrets for KafkaUser with SCRAM-SHA-512 authentication
        * Allow disabling ownerReference on CA secrets
        * Make it possible to run Strimzi operators and operands with read-only root filesystem
        * Add possibility to configure DeploymentStrategy for Kafka Connect, Kafka Mirror Maker (1 and 2), and Kafka Bridge
        * Support passing metrics configuration as an external ConfigMap
        * Enable CORS configuration for Cruise Control
        * Support for rolling individual Kafka or ZooKeeper pods through the Cluster Operator using an annotation
        * Support for Topology Spread Constraints in Pod templates
        * Make Kafka cluster-id available on Kafka CR status
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kafka@sha256:536ccd07bf46371b1d78a382201dbd0d6e5ad3eaa343974e6b27bd34ce01ee23
      - quay.io/strimzi/kafka@sha256:7d383a11a6466f15f8a3c10010406e76fec1493adfc97f08c9d58ef2c90cade5
      - docker.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
      - quay.io/strimzi/jmxtrans@sha256:6a6f59d342196690ed2bc90a9a2cc1a09f8f650097811d92913cf384729f2b0c
      - quay.io/strimzi/operator@sha256:5d3f4313b465b6a987b0de398969342b31157cacde1b06ed9b5f2e7d08e73549
      - gcr.io/kaniko-project/executor@sha256:b9eec410fa32cd77cdb7685c70f86a96debb8b087e77e63d7fe37eaadb178709
      - quay.io/strimzi/kafka@sha256:f1268f53ce158ceaed3b93c6449e7318853f3d9eefbfe125dc19e58db8c76f99
      - quay.io/strimzi/kafka@sha256:deb1113293028409ec219f352281ffe4c97a51b2057419a27fcbe88856ad6329
      version: 0.21.1
    name: strimzi-0.21.x
  - currentCSV: strimzi-cluster-operator.v0.20.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.6.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.6",
                      "inter.broker.protocol.version":"2.6"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.6.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaConnectS2I",
              "metadata":{
                "name":"my-connect-s2i-cluster"
              },
              "spec":{
                "version":"2.6.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.6.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "whitelist":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1alpha1",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta1",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 2,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.6.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": 1,
                      "offset.storage.replication.factor": 1,
                      "status.storage.replication.factor": 1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1alpha1",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "NetworkOutboundCapacityGoal",
                  "CpuCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster with S2I support"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: docker.io/strimzi/operator@sha256:3ded125be57b1da93736baa3200b67c42252d1c6cb5f1e583354f6bb29fe1f60
        createdAt: "2020-12-15 13:16:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Connect cluster with Source 2 Image support
          displayName: Kafka Connect Source to Image
          kind: KafkaConnectS2I
          name: kafkaconnects2is.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1alpha1
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta1
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta1
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1alpha1
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1alpha1
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1alpha1
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### New in 0.20
        * Last version to support Kubernetes 1.11 and higher. Future versions will support only Kubernetes 1.16 and higher.
        * Big improvements to Kafka listener configuration
        * Add support for Kafka 2.5.1 and 2.6.0. Remove support for 2.4.0 and 2.4.1
        * Remove TLS sidecars from Kafka pods
        * Cruise Control metrics
        * Support dynamically changeable logging in the Cluster Operator, Kafka brokers, Kafka Connect and Kafka Mirror Maker 2
        * Support for `client.rack` in Kafka Connect
        * Support for configuring `hostAliases` in Pod template
        * Use Strimzi Kafka Bridge 0.19.0
        * Improvements to OAuth authentication and Keycloak authroization
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.11.0
      provider:
        name: Strimzi
      relatedImages:
      - docker.io/strimzi/kafka@sha256:b3b3c7a35f9416db17773d4ce569120f818b3c2faa2480847bd0797d5193e653
      - docker.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
      - docker.io/strimzi/jmxtrans@sha256:de31d15268d596befce3fcf74927c14ccec783d18879c81b39c669364e15a6e6
      - docker.io/strimzi/operator@sha256:3ded125be57b1da93736baa3200b67c42252d1c6cb5f1e583354f6bb29fe1f60
      - docker.io/strimzi/kafka@sha256:6671bd4f37d2df0877e2aa6c3dba53a7c110528ced9b15c9c3f5bd32949fc4ba
      - docker.io/strimzi/kafka@sha256:2e4b7af64b818ce85642d7e0aa0a8bdd798a5b1d5fa9116400b0c91742bab8f6
      version: 0.20.1
    name: strimzi-0.20.x
  - currentCSV: strimzi-cluster-operator.v0.25.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.8.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.8",
                      "inter.broker.protocol.version":"2.8"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.8.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster with S2I support"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:afaf1dd1f2f696ae80674d74159661ea239ae609f78a73a1423c7a17a39e5044
        createdAt: "2021-06-24 13:13:13"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.25 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.25 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.25
        * Move from Scala 2.12 to Scala 2.13
        * Open Policy Agent authorizer updated to a new version supporting Scala 2.13.
          The new version of the authroizer uses different format of the input data sent to the OPA server and might require you to update your policies.
          See [release notes](https://github.com/strimzi/strimzi-kafka-operator/releases/tag/0.25.0) for more details.

        * Allow a custom password to be set for SCRAM-SHA-512 users by referencing a secret in the `KafkaUser` resource
        * Add support for [EnvVar Configuration Provider for Apache Kafka](https://github.com/strimzi/kafka-env-var-config-provider)
        * Add support for `tls-external` authentication to User Operator to allow management of ACLs and Quotas for TLS users with user certificates generated externally
        * Support for disabling the automatic generation of network policies by the Cluster Operator
        * Configure fixed size limit for `emptyDir` volumes used for temporary files
        * Update Strimzi Kafka Bridge to 0.20.2
        * The `KafkaConnectS2I` resource has been removed and is no longer supported by the operator.
          Please use the [migration guide](https://strimzi.io/docs/operators/0.24.0/full/using.html#proc-migrating-kafka-connect-s2i-str) to migrate your `KafkaConnectS2I` deployments to [`KafkaConnect` Build](https://strimzi.io/docs/operators/latest/full/deploying.html#creating-new-image-using-kafka-connect-build-str) instead.

        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kafka@sha256:d8991608ec71f17e850c33714ee02ca87ba94bc0f077be62ad1ed127ca244823
      - quay.io/strimzi/kafka@sha256:ee17eb3611019b0cfa5e9e196610edc1dbd7084471fb20990f055c89da8eef45
      - quay.io/strimzi/kafka@sha256:56a33815f7d50a97ea9bb4cce1e3a6d04d918b841b5aa285f16b792d8930059e
      - quay.io/strimzi/kafka-bridge@sha256:a005e20d7fbe04d6f587f2093e21a00556ec62b850df757b9f7d9d57e3141c40
      - quay.io/strimzi/jmxtrans@sha256:af5eb8459ac9a0acbca51e67c6e0217f62ba404cba9f2251968c927dcef75252
      - quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
      - quay.io/strimzi/operator@sha256:afaf1dd1f2f696ae80674d74159661ea239ae609f78a73a1423c7a17a39e5044
      version: 0.25.0
    name: strimzi-0.25.x
  - currentCSV: strimzi-cluster-operator.v0.24.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.8.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.8",
                      "inter.broker.protocol.version":"2.8"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnectS2I",
              "metadata":{
                "name":"my-connect-s2i-cluster"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 2,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.8.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster with S2I support"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:786ea69c77e0651f009a73a8b3ce0b3d41b3cd71b917dc0d9bdc61c725f494a6
        createdAt: "2021-06-24 13:13:13"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster with Source 2 Image support
          displayName: Kafka Connect Source to Image
          kind: KafkaConnectS2I
          name: kafkaconnects2is.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
      description: "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
        cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)
        in various deployment configurations. See our [website](https://strimzi.io)
        for more details about the project.\n### CRD Upgrades\n**!!! IMPORTANT !!!**
        \ This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.
        \ If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed
        for all Strimzi CRDs and CRs before the upgrade to 0.24 is done!  If upgrading
        from Strimzi version earlier than 0.22, you need to first install the CRDs
        from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi
        CRDs and CRs before the upgrade to 0.24 is done!  For more details about the
        CRD upgrades, see the documentation.\n### New in 0.24\n* Add support for Kafka
        2.7.1 and remove support for 2.6.0, 2.6.1, and 2.6.2\n* Add support for [Kubernetes
        Configuration Provider for Apache Kafka](https://github.com/strimzi/kafka-kubernetes-config-provider)\n*
        Use Red Hat UBI8 base image\n* Support for patching of service accounts and
        configuring their labels and annotations. The feature is disabled by default
        and enabled using the new `ServiceAccountPatching` feature gate.\n* Added
        support for configuring cluster-operator's worker thread pool size that is
        used for various sync and async tasks\n* Add Kafka Quotas plugin with produce,
        consume, and storage quotas\n* Support pausing reconciliation of KafkaTopic
        CR with annotation `strimzi.io/pause-reconciliation`\n* Update cruise control
        to 2.5.57\n* Update to Strimzi Kafka Bridge to 0.20.1\n* Support for broker
        load information added to the rebalance optimization proposal. Information
        on the load difference, before and after a rebalance is stored in a ConfigMap\n*
        Add support for selectively changing the verbosity of logging for individual
        CRs, using markers.\n* Added support for `controller_mutation_rate' quota.
        Creation/Deletion of topics and creation of partitions can be configured through
        this.\n* Use newer version of Kafka Exporter with different bugfixes \n###
        Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages
        all of the components of this complex application, including dependencies
        like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes
        Kafka Connect** - Allows for configuration of common data sources and sinks
        to move data into and out of the Kafka cluster.\n* **Topic Management** -
        Creates and manages Kafka Topics within the cluster.\n* **User Management**
        - Creates and manages Kafka Users within the cluster.\n* **Connector Management**
        - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror
        Maker 1 and 2** - Allows for morroring data between different Apache Kafka®
        clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive
        messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster
        Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas
        according to specified goals in order to achieve the best cluster performance.\n*
        **Monitoring** - Built-in support for monitoring using Prometheus and provided
        Grafana dashabords\n### Upgrading your Clusters\nThe Strimzi Operator understands
        how to run and upgrade between a set of Kafka versions. When specifying a
        new version in your config, check to make sure you aren't using any features
        that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
        for more information.\n### Storage\nAn efficient data storage infrastructure
        is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed
        via Strimzi requires block storage. The use of file storage (for example,
        NFS) is not recommended.\nThe Strimzi Operator supports three types of data
        storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n*
        JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi
        also supports advanced operations such as adding or removing disks in Apache
        Kafka® brokers or resizing the persistent volumes (where supported by the
        infrastructure).\n### Documentation\nDocumentation to the current _master_
        branch as well as all releases can be found on our [website](https://strimzi.io/documentation).\n###
        Getting help\nIf you encounter any issues while using Strimzi, you can get
        help using:\n* [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n*
        [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
        Contributing\nYou can contribute by:\n* Raising any issues you find using
        Strimzi\n* Fixing issues by opening Pull Requests\n* Improving documentation\n*
        Talking about Strimzi\n\nAll bugs, tasks or enhancements are tracked as [GitHub
        issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues
        which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
        label.\n\nThe [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md)
        describes how to build Strimzi and how to  test your changes before submitting
        a patch or opening a PR.\n\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)
        describes how to contribute to Strimzi documentation.\n\nIf you want to get
        in touch with us first before contributing, you can use:\n* [Strimzi mailing
        list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi
        Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
        License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).\n"
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/operator@sha256:786ea69c77e0651f009a73a8b3ce0b3d41b3cd71b917dc0d9bdc61c725f494a6
      - quay.io/strimzi/kafka@sha256:95cfe9000afda2f7def269ca46472d3803ee85146c521884884d8505a7187daf
      - quay.io/strimzi/kafka@sha256:8959b7968ab8b3306906cdbff2ebb8d63329af37e58124a601843795c4ef5bd6
      - quay.io/strimzi/kafka@sha256:fbb08410d9595029bc4a02ed859971264e6ce2dc85dd6a9855eaa7bb58b52a25
      - quay.io/strimzi/kafka-bridge@sha256:537ea10e87619251204747ebc1005c632a6c6ed270f5ef06f86c0c3ae4a7553b
      - quay.io/strimzi/jmxtrans@sha256:2c54adabf6f31c087dbb898057f9c5e200aaf4c5b39fb3a47bbaf7f6587df72d
      - quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
      version: 0.24.0
    name: strimzi-0.24.x
  - currentCSV: strimzi-cluster-operator.v0.26.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.0.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"3.0",
                      "inter.broker.protocol.version":"3.0"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.0.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.0.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.0.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:5d90caa66f57939ba62a9a50efa00fce319ba596e719a3f8a42170d7635ee3f4
        createdAt: "2021-12-14 00:16:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.26 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.26 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.26.1
        * **Updated Log4j2 to fix CVE-2021-44228**
        ### New in 0.26.0
        * Add support for Kafka 2.8.1 and 3.0.0; remove Kafka 2.7.0 and 2.7.1
        * Add support for exposing JMX in Zookeeper
        * Allow configuring labels and annotations for JMX authentication secrets
        * Enable Cruise Control anomaly.detection configurations
        * Add support for building connector images from the Maven coordinates
        * Allow Kafka Connect Build artifacts to be downloaded from insecure servers
        * Add option to specify pull secret in Kafka Connect Build on OpenShift
        * Configurable authentication, authorization, and SSL for Cruise Control API
        * Allow to configure `/tmp` volume size via Pod template. By default `1Mi` is used.
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kafka@sha256:6367b0fbba9593e3ac736040ea2d7ef71296b1ec144d3b54d9370352141b90e4
      - quay.io/strimzi/kafka-bridge@sha256:d3899c79747e4cb3a6df5a9fcd80b81f038ca0634a97329c1d160499469876dd
      - quay.io/strimzi/operator@sha256:5d90caa66f57939ba62a9a50efa00fce319ba596e719a3f8a42170d7635ee3f4
      - quay.io/strimzi/jmxtrans@sha256:bff5d3bab575d0b9ed95dd79d2d22518cc00c4d1c9dbb5614ed16149d4920a1b
      - quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
      - quay.io/strimzi/maven-builder@sha256:663eb81388ae8f824e7920c272f6d2e2274cf6c140d61416607261cdce9d50e2
      - quay.io/strimzi/kafka@sha256:8c022a8535742b2eea691737f863af5ddef1e8df08b415b8139ecd02a79052a5
      - quay.io/strimzi/kafka@sha256:bd22a134b0c351ddfc78a3263850c2f16733c52f57ac92984cbe0ffff477c724
      version: 0.26.1
    name: strimzi-0.26.x
  - currentCSV: strimzi-cluster-operator.v0.23.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"2.8.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "log.message.format.version":"2.8",
                      "inter.broker.protocol.version":"2.8"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnectS2I",
              "metadata":{
                "name":"my-connect-s2i-cluster"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"2.8.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "whitelist":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 2,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"2.8.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": 1,
                      "offset.storage.replication.factor": 1,
                      "status.storage.replication.factor": 1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "NetworkOutboundCapacityGoal",
                  "CpuCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster with S2I support"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:59d939f342f96d0e8a54c96fd187832c4b19cd4137bf55ace53d486728ae6c5f
        createdAt: "2021-05-14 11:37:13"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster with Source 2 Image support
          displayName: Kafka Connect Source to Image
          kind: KafkaConnectS2I
          name: kafkaconnects2is.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  Starting with Strimzi 0.23, we support only the `v1beta2` API version of all Strimzi custom resources.  This is a required for migration to `apiextensions/v1` which is needed because Kubernetes 1.22 will remove support for `apiextensions/v1beta1`.  Migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs **before upgrading to Strimzi 0.23**. For more details about the CRD upgrades, see the [documentation](https://strimzi.io/docs/operators/0.23.0/deploying.html#assembly-upgrade-resources-str).
        ### New in 0.23
        * Migrate to CRD v1 (required by Kubernetes 1.22+)
        * Strimzi API versions `v1alpha1` and `v1beta1` were removed from all Strimzi custom resources apart from `KafkaTopic` and `KafkaUser` (use `v1beta2` versions instead)
        * Add support for Kafka 2.8.0 and 2.6.2, remove support for Kafka 2.5.x
        * Make it possible to configure maximum number of connections and maximum connection creation rate in listener configuration
        * Add support for configuring finalizers for `loadbalancer` type listeners
        * Use dedicated Service Account for Kafka Connect Build on Kubernetes
        * Remove direct ZooKeeper access for handling user quotas in the User Operator. Add usage of Admin Client API instead.
        * Support for configuring custom Authorizer implementation
        * Changed Reconciliation interval for Topic Operator from 90 to 120 seconds (to keep it the same as for other operators)
        * Changed Zookeeper session timeout default value to 18 seconds for Topic and User Operators (for improved resiliency)
        * Removed requirement for replicas and partitions KafkaTopic spec making these parameters optional
        * Support to configure a custom filter for parent CR's labels propagation into subresources
        * Allow disabling service links (environment variables describing Kubernetes services) in Pod template
        * Add support for separate control plane listener (disabled by default, available via the `ControlPlaneListener` feature gate)
        * Support for Dual Stack networking
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi

        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/jmxtrans@sha256:b4ec1844f4cc5eb74cd0aac83d74b81b977e178bf670d1136d1af0b68663d0a3
      - quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
      - quay.io/strimzi/kafka@sha256:dbc53bb374d2cb9513a5bb8f80fea751c91b249cabd36d8b3c04af5e5c961738
      - quay.io/strimzi/kafka@sha256:699bff48ee445d8ba381a791cd0340015e3ecede8d169f41bc151095ab7fb5cc
      - quay.io/strimzi/kafka@sha256:641f46114c59d61577bcb3f4ef5af16aea3ed42c2a575f8d3641c82848df85e8
      - quay.io/strimzi/operator@sha256:59d939f342f96d0e8a54c96fd187832c4b19cd4137bf55ace53d486728ae6c5f
      - quay.io/strimzi/kafka@sha256:e90695b35d6dd5db20c9900dd0dab95d1ef908f3145b4f9f436b903303c88549
      - quay.io/strimzi/kafka@sha256:d2745f48ed262290ce66c3362ffb9b9a8cfeb9c76beac40c995f72f3f06ad10e
      - quay.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
      version: 0.23.0
    name: strimzi-0.23.x
  - currentCSV: strimzi-cluster-operator.v0.30.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.2.0",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "default.replication.factor":3,
                      "min.insync.replicas":2,
                      "inter.broker.protocol.version":"3.2"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.2.0",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.2.0",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.2.0",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            },
            {
              "apiVersion": "core.strimzi.io/v1beta2",
              "kind": "StrimziPodSet",
              "metadata": {
                "name": "strimzi-pod-set-example"
              },
              "spec": {
                "pods": [
                  {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                      "labels": {
                        "app": "strimzi-pod-set-example"
                      },
                      "name": "example-pod"
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "sleep",
                            3600
                          ],
                          "image": "busybox:latest",
                          "imagePullPolicy": "IfNotPresent",
                          "name": "busybox"
                        }
                      ]
                    }
                  }
                ],
                "selector": {
                  "matchLabels": {
                    "app": "strimzi-pod-set-example"
                  }
                }
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:587db6f4389f56209f48853beedbfe249f6d590a4cb0000be2c42b57e43c2adb
        createdAt: "2022-07-16 00:00:10"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy",
          "proxy-aware"]'
        operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
        - description: Internal custom resource used to manage Strimzi pods
          displayName: Strimzi Pod Set
          kind: StrimziPodSet
          name: strimzipodsets.core.strimzi.io
          version: v1beta2
      description: "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
        cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)
        in various deployment configurations. See our [website](https://strimzi.io)
        for more details about the project.\n### CRD Upgrades\n**!!! IMPORTANT !!!**
        \ This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.
        \ If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed
        for all Strimzi CRDs and CRs before the upgrade to 0.30 is done!  If upgrading
        from Strimzi version earlier than 0.22, you need to first install the CRDs
        from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi
        CRDs and CRs before the upgrade to 0.30 is done!  For more details about the
        CRD upgrades, see the documentation.\n### New in 0.30.0\n* The `UseStrimziPodSets`
        feature gate moves to beta stage. By default, StrimziPodSets are used instead
        of StatefulSets. If needed, `UseStrimziPodSets` can be disabled in the feature
        gates configuration in the Cluster Operator.\n* The `ServiceAccountPatching`
        feature gate moves to GA. It cannot be disabled anymore and will be permanently
        enabled.\n* Remove support for Kafka 3.0.0 and 3.0.1\n* Add support for `simple`
        authorization and for the User Operator to the experimental `UseKRaft` feature
        gate. _(Note: Due to [KAFKA-13909](https://issues.apache.org/jira/browse/KAFKA-13909),
        broker restarts currently don't work when authorization is enabled.)_\n* Add
        CPU and network capacity overrides for Cruise Control capacity config\n* Use
        better encryption and digest algorithms when creating the PKCS12 stores. For
        existing clusters, the certificates will not be updated during upgrade but
        only next time the PKCS12 store is created. \n* Operator emits Kafka events
        to explain why it restarted a Kafka broker\n* Better configurability of the
        Kafka Admin client in the User Operator\n* Update Strimzi Kafka Bridge to
        0.21.6\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys
        and manages all of the components of this complex application, including dependencies
        like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes
        Kafka Connect** - Allows for configuration of common data sources and sinks
        to move data into and out of the Kafka cluster.\n* **Topic Management** -
        Creates and manages Kafka Topics within the cluster.\n* **User Management**
        - Creates and manages Kafka Users within the cluster.\n* **Connector Management**
        - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror
        Maker 1 and 2** - Allows for mirroring data between different Apache Kafka®
        clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive
        messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster
        Rebalancing** - Uses built-in Cruise Control for redistributing partition
        replicas according to specified goals in order to achieve the best cluster
        performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus
        and provided Grafana dashboards\n### Upgrading your Clusters\nThe Strimzi
        Operator understands how to run and upgrade between a set of Kafka versions.
        When specifying a new version in your config, check to make sure you aren't
        using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
        for more information.\n### Storage\nAn efficient data storage infrastructure
        is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed
        via Strimzi requires block storage. The use of file storage (for example,
        NFS) is not recommended.\nThe Strimzi Operator supports three types of data
        storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n*
        JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi
        also supports advanced operations such as adding or removing disks in Apache
        Kafka® brokers or resizing the persistent volumes (where supported by the
        infrastructure).\n### Documentation\nDocumentation to the current _main_ branch
        as well as all releases can be found on our [website](https://strimzi.io/documentation).\n###
        Getting help\nIf you encounter any issues while using Strimzi, you can get
        help using:\n* [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n*
        [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
        Contributing\nYou can contribute by:\n* Raising any issues you find using
        Strimzi\n* Fixing issues by opening Pull Requests\n* Improving documentation\n*
        Talking about Strimzi\nAll bugs, tasks or enhancements are tracked as [GitHub
        issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues
        which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
        label.\nThe [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md)
        describes how to build Strimzi and how to  test your changes before submitting
        a patch or opening a PR.\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)
        describes how to contribute to Strimzi documentation.\nIf you want to get
        in touch with us first before contributing, you can use:\n* [Strimzi mailing
        list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi
        Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
        License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).\n"
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/jmxtrans@sha256:de1ca88b713b926b72df535aca2cfad24fb1b2bf40481065d6fa0c421b872320
      - quay.io/strimzi/kaniko-executor@sha256:544c4987f7f3ca558b04e9ef4357be204f088212b7b5b9ed0f909401a8bc5238
      - quay.io/strimzi/maven-builder@sha256:f2cb45234f3a7a010824a370d03032b706271cd0d1d260da929f046f9259d7e0
      - quay.io/strimzi/operator@sha256:587db6f4389f56209f48853beedbfe249f6d590a4cb0000be2c42b57e43c2adb
      - quay.io/strimzi/kafka@sha256:68d6f4cb5cc5ccad44de799bd9cf417c469a09e1024dbe42298942f25a09e004
      - quay.io/strimzi/kafka@sha256:d9258ddd453c3a53ca8e737b989d27725818da95f7a4fc879c9f07fe743c0cef
      - quay.io/strimzi/kafka@sha256:5d881605425ab0b37d0b9cac6957d00ba904df0db185ca6181c810151bdab8e7
      - quay.io/strimzi/kafka-bridge@sha256:77fc68da171c74d3a4b75b1030eaaa5eae12e200002f7aa2ee1969385eba1d66
      version: 0.30.0
    name: strimzi-0.30.x
  - currentCSV: strimzi-cluster-operator.v0.31.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"Kafka",
              "metadata":{
                "name":"my-cluster"
              },
              "spec":{
                "kafka":{
                    "version":"3.2.3",
                    "replicas":3,
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "type": "internal",
                        "tls": false
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "type": "internal",
                        "tls": true
                      }
                    ],
                    "config":{
                      "offsets.topic.replication.factor":3,
                      "transaction.state.log.replication.factor":3,
                      "transaction.state.log.min.isr":2,
                      "default.replication.factor":3,
                      "min.insync.replicas":2,
                      "inter.broker.protocol.version":"3.2"
                    },
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "zookeeper":{
                    "replicas":3,
                    "storage":{
                      "type":"ephemeral"
                    }
                },
                "entityOperator":{
                    "topicOperator":{
                      },
                    "userOperator":{
                      }
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaConnect",
              "metadata":{
                "name":"my-connect-cluster"
              },
              "spec":{
                "version":"3.2.3",
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
                "tls":{
                    "trustedCertificates":[
                      {
                          "secretName":"my-cluster-cluster-ca-cert",
                          "certificate":"ca.crt"
                      }
                    ]
                },
                "config": {
                    "group.id": "connect-cluster",
                    "offset.storage.topic": "connect-cluster-offsets",
                    "config.storage.topic": "connect-cluster-configs",
                    "status.storage.topic": "connect-cluster-status",
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaMirrorMaker",
              "metadata":{
                "name":"my-mirror-maker"
              },
              "spec":{
                "version":"3.2.3",
                "replicas":1,
                "consumer":{
                    "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                    "groupId":"my-source-group-id"
                },
                "producer":{
                    "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
                },
                "include":".*"
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaBridge",
              "metadata":{
                "name":"my-bridge"
              },
              "spec":{
                "replicas":1,
                "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
                "http":{
                    "port":8080
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaTopic",
              "metadata":{
                "name":"my-topic",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "partitions":10,
                "replicas":3,
                "config":{
                    "retention.ms":604800000,
                    "segment.bytes":1073741824
                }
              }
            },
            {
              "apiVersion":"kafka.strimzi.io/v1beta2",
              "kind":"KafkaUser",
              "metadata":{
                "name":"my-user",
                "labels":{
                    "strimzi.io/cluster":"my-cluster"
                }
              },
              "spec":{
                "authentication":{
                    "type":"tls"
                },
                "authorization":{
                    "type":"simple",
                    "acls":[
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"group",
                            "name":"my-group",
                            "patternType":"literal"
                          },
                          "operation":"Read",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Write",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Create",
                          "host":"*"
                      },
                      {
                          "resource":{
                            "type":"topic",
                            "name":"my-topic",
                            "patternType":"literal"
                          },
                          "operation":"Describe",
                          "host":"*"
                      }
                    ]
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaConnector",
              "metadata": {
                "name": "my-source-connector",
                "labels": {
                  "strimzi.io/cluster": "my-connect-cluster"
                }
              },
              "spec": {
                "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
                "tasksMax": 1,
                "config": {
                  "file": "/opt/kafka/LICENSE",
                  "topic": "my-topic"
                }
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaMirrorMaker2",
              "metadata": {
                "name": "my-mm2-cluster"
              },
              "spec": {
                "version":"3.2.3",
                "replicas": 1,
                "connectCluster": "my-cluster-target",
                "clusters": [
                  {
                    "alias": "my-cluster-source",
                    "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                  },
                  {
                    "alias": "my-cluster-target",
                    "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                    "config": {
                      "config.storage.replication.factor": -1,
                      "offset.storage.replication.factor": -1,
                      "status.storage.replication.factor": -1
                    }
                  }
                ],
                "mirrors": [
                  {
                    "sourceCluster": "my-cluster-source",
                    "targetCluster": "my-cluster-target",
                    "sourceConnector": {
                      "config": {
                        "replication.factor": 1,
                        "offset-syncs.topic.replication.factor": 1,
                        "sync.topic.acls.enabled": "false"
                      }
                    },
                    "heartbeatConnector": {
                      "config": {
                        "heartbeats.topic.replication.factor": 1
                      }
                    },
                    "checkpointConnector": {
                      "config": {
                        "checkpoints.topic.replication.factor": 1
                      }
                    },
                    "topicsPattern": ".*",
                    "groupsPattern": ".*"
                  }
                ]
              }
            },
            {
              "apiVersion": "kafka.strimzi.io/v1beta2",
              "kind": "KafkaRebalance",
              "metadata": {
                "name": "my-rebalance",
                "labels": {
                  "strimzi.io/cluster": "my-cluster"
                }
              },
              "spec": {
                "goals": [
                  "CpuCapacityGoal",
                  "NetworkInboundCapacityGoal",
                  "DiskCapacityGoal",
                  "RackAwareGoal",
                  "MinTopicLeadersPerBrokerGoal",
                  "NetworkOutboundCapacityGoal",
                  "ReplicaCapacityGoal"
                ]
              }
            },
            {
              "apiVersion": "core.strimzi.io/v1beta2",
              "kind": "StrimziPodSet",
              "metadata": {
                "name": "strimzi-pod-set-example"
              },
              "spec": {
                "pods": [
                  {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                      "labels": {
                        "app": "strimzi-pod-set-example"
                      },
                      "name": "example-pod"
                    },
                    "spec": {
                      "containers": [
                        {
                          "command": [
                            "sleep",
                            3600
                          ],
                          "image": "busybox:latest",
                          "imagePullPolicy": "IfNotPresent",
                          "name": "busybox"
                        }
                      ]
                    }
                  }
                ],
                "selector": {
                  "matchLabels": {
                    "app": "strimzi-pod-set-example"
                  }
                }
              }
            }
          ]
        alm-examples-metadata: |-
          {
            "my-cluster": {
              "description": "Example Kafka cluster with Ephemeral storage"
            },
            "my-connect-cluster": {
              "description": "Example Kafka Connect cluster"
            },
            "my-mirror-maker": {
              "description": "Example Kafka Mirror Maker 1 deployment"
            },
            "my-mm2-cluster": {
              "description": "Example Kafka Mirror Maker 2 deployment"
            },
            "my-bridge": {
              "description": "Example Strimzi Kafka HTTP Bridge deployment"
            },
            "my-topic": {
              "description": "Example KafkaTopic custom resource"
            },
            "my-user": {
              "description": "Example KafkaUser custom resource"
            },
            "my-source-connector": {
              "description": "Example Kafka Connect source connector"
            },
            "my-rebalance": {
              "description": "Example Cruise Control rebalance request"
            }
          }
        capabilities: Deep Insights
        categories: Streaming & Messaging
        certified: "false"
        containerImage: quay.io/strimzi/operator@sha256:6e5e207c70c25c595d3ce60268c0214c7518e95836c9b1212ef1eb2f008c7a76
        createdAt: "2022-09-20 21:07:00"
        description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
          or OpenShift in various deployment configurations.
        operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy",
          "proxy-aware"]'
        operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
        repository: https://github.com/strimzi/strimzi-kafka-operator
        support: Strimzi
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents a Kafka cluster
          displayName: Kafka
          kind: Kafka
          name: kafkas.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Connect cluster
          displayName: Kafka Connect
          kind: KafkaConnect
          name: kafkaconnects.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker cluster
          displayName: Kafka Mirror Maker
          kind: KafkaMirrorMaker
          name: kafkamirrormakers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka Bridge cluster
          displayName: Kafka Bridge
          kind: KafkaBridge
          name: kafkabridges.kafka.strimzi.io
          version: v1beta2
        - description: Represents a topic inside a Kafka cluster
          displayName: Kafka Topic
          kind: KafkaTopic
          name: kafkatopics.kafka.strimzi.io
          version: v1beta2
        - description: Represents a user inside a Kafka cluster
          displayName: Kafka User
          kind: KafkaUser
          name: kafkausers.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Connector inside a Kafka Connect cluster
          displayName: Kafka Connector
          kind: KafkaConnector
          name: kafkaconnectors.kafka.strimzi.io
          version: v1beta2
        - description: Represents a Kafka MirrorMaker 2 cluster
          displayName: Kafka MirrorMaker 2
          kind: KafkaMirrorMaker2
          name: kafkamirrormaker2s.kafka.strimzi.io
          version: v1beta2
        - description: Triggeres rebalance of replicas in a Kafka cluster
          displayName: Kafka Rebalance
          kind: KafkaRebalance
          name: kafkarebalances.kafka.strimzi.io
          version: v1beta2
        - description: Internal custom resource used to manage Strimzi pods
          displayName: Strimzi Pod Set
          kind: StrimziPodSet
          name: strimzipodsets.core.strimzi.io
          version: v1beta2
      description: |
        Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
        **This is the last version of Strimzi with support for Kubernetes 1.16, 1.17 and 1.18!**
        ### CRD Upgrades
        **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.31 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.31 is done!  For more details about the CRD upgrades, see the documentation.
        ### New in 0.31.1
        * Kafka 3.1.2 and 3.2.3 (fixes CVE-2022-34917)
        * Make `sasl.server.max.receive.size` broker option user configurable
        * Update Strimzi Kafka Bridge to 0.22.1
        ### New in 0.31.0
        * Support for Apache Kafka 3.2.1
        * Pluggable Pod Security Profiles with built-in support for _restricted_ Kubernetes Security Profile
        * Support for leader election and running multiple operator replicas (1 active leader replicas and one or more stand-by replicas)
        * Support for IPv6 addresses being used in Strimzi issued certificates
        * `StrimziPodSet` reconciliation metrics
        * Updated Strimzi Kafka Bridge to 0.22.0 and Kafka Exporter to 1.6.0
        ### Supported Features
        * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
        * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
        * **Topic Management** - Creates and manages Kafka Topics within the cluster.
        * **User Management** - Creates and manages Kafka Users within the cluster.
        * **Connector Management** - Creates and manages Kafka Connect connectors.
        * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
        * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
        * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
        * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
        ### Upgrading your Clusters
        The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
        ### Storage
        An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
        The Strimzi Operator supports three types of data storage:
        * Ephemeral (Recommended for development only!)
        * Persistent
        * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
        Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
        ### Documentation
        Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
        ### Getting help
        If you encounter any issues while using Strimzi, you can get help using:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### Contributing
        You can contribute by:
        * Raising any issues you find using Strimzi
        * Fixing issues by opening Pull Requests
        * Improving documentation
        * Talking about Strimzi
        All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
        The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
        The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
        If you want to get in touch with us first before contributing, you can use:
        * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
        * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
        ### License
        Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
      displayName: Strimzi
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kafka
      - messaging
      - kafka-connect
      - kafka-streams
      - data-streaming
      - data-streams
      - streaming
      - streams
      links:
      - name: Website
        url: https://strimzi.io/
      - name: Documentation
        url: https://strimzi.io/documentation/
      - name: Mailing list
        url: https://lists.cncf.io/g/cncf-strimzi-users/topics
      - name: Slack
        url: https://cloud-native.slack.com/messages/strimzi
      - name: GitHub
        url: https://github.com/strimzi/strimzi-kafka-operator
      maintainers:
      - email: cncf-strimzi-users@lists.cncf.io
        name: Strimzi
      maturity: stable
      minKubeVersion: 1.16.0
      provider:
        name: Strimzi
      relatedImages:
      - quay.io/strimzi/kafka@sha256:b7c059bd72d8b063a96dde788d91d1ad87498bad3e73acba600929d595aeb7d6
      - quay.io/strimzi/kafka@sha256:652924a1dba46aa716caba8381f1e791c09035e31ce62fdcc81f9b69af36cd02
      - quay.io/strimzi/kafka-bridge@sha256:3ddac62a4f8c8a3ebb72d5841d3826f7fd3fbb0e00eb75fb40bced0a576b86a9
      - quay.io/strimzi/kafka@sha256:83acc1e2cc1e64a88bdbb54b9818a6ad3658c3da60e72c4be365f824c5fcf57c
      - quay.io/strimzi/kaniko-executor@sha256:06581fb615f0b13ddfe27fae26ba5836b12c6e28afd55a81cba7685c9ca4bf79
      - quay.io/strimzi/maven-builder@sha256:670ca70900f2229ef140a592b77f2107934601f8b050b79250eab17ff62099b6
      - quay.io/strimzi/kafka@sha256:9553aae22d35448681cbbf7a831a28149fb159f3df58ccf8c8ec4ca7eb9c1fdf
      - quay.io/strimzi/kafka@sha256:03cc48bc5cf367f898338665b253855bed7d6096fe577adfe344da2f2cddcfe4
      - quay.io/strimzi/operator@sha256:6e5e207c70c25c595d3ce60268c0214c7518e95836c9b1212ef1eb2f008c7a76
      - quay.io/strimzi/jmxtrans@sha256:52dd107062d78c29bb58c905ac654c39df72bbe3c25613023aa33e834930606d
      - quay.io/strimzi/kafka@sha256:430b3eb70e47a91d7b5b6f230d5be024c2de853099cc0437e219b443e0ead9f5
      version: 0.31.1
    name: strimzi-0.31.x
  defaultChannel: stable
  packageName: strimzi-kafka-operator
  provider:
    name: Strimzi
