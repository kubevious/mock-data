apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Percona
    provider-url: ""
  name: percona-xtradb-cluster-operator
  namespace: kube-system
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: percona-xtradb-cluster-operator.v1.10.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "pxc.percona.com/v1-10-0",
              "kind": "PerconaXtraDBCluster",
              "metadata": {
                "name": "cluster1",
                "finalizers": [
                  "delete-pxc-pods-in-order"
                ]
              },
              "spec": {
                "crVersion": "1.10.0",
                "secretsName": "my-cluster-secrets",
                "vaultSecretName": "keyring-secret-vault",
                "sslSecretName": "my-cluster-ssl",
                "sslInternalSecretName": "my-cluster-ssl-internal",
                "logCollectorSecretName": "my-log-collector-secrets",
                "allowUnsafeConfigurations": false,
                "updateStrategy": "SmartUpdate",
                "upgradeOptions": {
                  "versionServiceEndpoint": "https://check.percona.com",
                  "apply": "8.0-recommended",
                  "schedule": "0 4 * * *"
                },
                "pxc": {
                  "size": 3,
                  "image": "percona/percona-xtradb-cluster:8.0.23-14.1",
                  "autoRecovery": true,
                  "resources": {
                    "requests": {
                      "memory": "1G",
                      "cpu": "600m"
                    }
                  },
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "6G"
                        }
                      }
                    }
                  },
                  "gracePeriod": 600
                },
                "haproxy": {
                  "enabled": true,
                  "size": 3,
                  "image": "percona/percona-xtradb-cluster-operator:1.10.0-haproxy",
                  "resources": {
                    "requests": {
                      "memory": "1G",
                      "cpu": "600m"
                    }
                  },
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "gracePeriod": 30
                },
                "proxysql": {
                  "enabled": false,
                  "size": 3,
                  "image": "percona/percona-xtradb-cluster-operator:1.10.0-proxysql",
                  "resources": {
                    "requests": {
                      "memory": "1G",
                      "cpu": "600m"
                    }
                  },
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "2G"
                        }
                      }
                    }
                  },
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "gracePeriod": 30
                },
                "logcollector": {
                  "enabled": true,
                  "image": "percona/percona-xtradb-cluster-operator:1.10.0-logcollector",
                  "resources": {
                    "requests": {
                      "memory": "100M",
                      "cpu": "200m"
                    }
                  }
                },
                "pmm": {
                  "enabled": false,
                  "image": "percona/pmm-client:2.23.0",
                  "serverHost": "monitoring-service",
                  "serverUser": "admin",
                  "resources": {
                    "requests": {
                      "memory": "150M",
                      "cpu": "300m"
                    }
                  }
                },
                "backup": {
                  "image": "percona/percona-xtradb-cluster-operator:1.10.0-pxc8.0-backup",
                  "pitr": {
                    "enabled": false,
                    "storageName": "STORAGE-NAME-HERE",
                    "timeBetweenUploads": 60
                  },
                  "storages": {
                    "s3-us-west": {
                      "type": "s3",
                      "s3": {
                        "bucket": "S3-BACKUP-BUCKET-NAME-HERE",
                        "credentialsSecret": "my-cluster-name-backup-s3",
                        "region": "us-west-2"
                      }
                    },
                    "fs-pvc": {
                      "type": "filesystem",
                      "volume": {
                        "persistentVolumeClaim": {
                          "accessModes": [
                            "ReadWriteOnce"
                          ],
                          "resources": {
                            "requests": {
                              "storage": "6G"
                            }
                          }
                        }
                      }
                    }
                  },
                  "schedule": [
                    {
                      "name": "sat-night-backup",
                      "schedule": "0 0 * * 6",
                      "keep": 3,
                      "storageName": "s3-us-west"
                    },
                    {
                      "name": "daily-backup",
                      "schedule": "0 0 * * *",
                      "keep": 5,
                      "storageName": "fs-pvc"
                    }
                  ]
                }
              }
            },
            {
              "apiVersion": "pxc.percona.com/v1",
              "kind": "PerconaXtraDBClusterBackup",
              "metadata": {
                "name": "backup1"
              },
              "spec": {
                "pxcCluster": "cluster1",
                "storageName": "fs-pvc"
              }
            },
            {
              "apiVersion": "pxc.percona.com/v1alpha1",
              "kind": "PerconaXtraDBBackup",
              "metadata": {
                "name": "backup1"
              },
              "spec": {
                "pxcCluster": "cluster1",
                "storageName": "s3-us-west"
              }
            },
            {
              "apiVersion": "pxc.percona.com/v1",
              "kind": "PerconaXtraDBClusterRestore",
              "metadata": {
                "name": "restore1"
              },
              "spec": {
                "pxcCluster": "cluster1",
                "backupName": "backup1"
              }
            },
            {
              "apiVersion": "pxc.percona.com/v1",
              "kind": "PerconaXtraDBClusterBackup",
              "metadata": {
                "name": "backup1"
              },
              "spec": {
                "pxcCluster": "cluster1",
                "storageName": "fs-pvc"
              }
            },
            {
              "apiVersion": "pxc.percona.com/v1alpha1",
              "kind": "PerconaXtraDBBackup",
              "metadata": {
                "name": "backup1"
              },
              "spec": {
                "pxcCluster": "cluster1",
                "storageName": "s3-us-west"
              }
            },
            {
              "apiVersion": "pxc.percona.com/v1",
              "kind": "PerconaXtraDBClusterRestore",
              "metadata": {
                "name": "restore1"
              },
              "spec": {
                "pxcCluster": "cluster1",
                "backupName": "backup1"
              }
            }
          ]
        capabilities: Deep Insights
        categories: Database
        certified: "true"
        containerImage: percona/percona-xtradb-cluster-operator:1.10.0
        createdAt: "2021-12-22T13:11:44.000Z"
        description: Percona Distribution for MySQL Operator manages the lifecycle
          of Percona XtraDB cluster instances.
        repository: https://github.com/percona/percona-xtradb-cluster-operator
        support: Percona
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Instance of a Percona XtraDB Cluster
          displayName: PerconaXtraDBCluster
          kind: PerconaXtraDBCluster
          name: perconaxtradbclusters.pxc.percona.com
          version: v1-10-0
        - description: Instance of a Percona XtraDB Cluster Backup
          displayName: PerconaXtraDBClusterBackup
          kind: PerconaXtraDBClusterBackup
          name: perconaxtradbclusterbackups.pxc.percona.com
          version: v1
        - description: Instance of a Percona XtraDB Cluster Restore
          displayName: PerconaXtraDBClusterRestore
          kind: PerconaXtraDBClusterRestore
          name: perconaxtradbclusterrestores.pxc.percona.com
          version: v1
        - description: (Legacy) Instance of a Percona XtraDB Cluster Backup
          displayName: PerconaXtraDBBackup
          kind: PerconaXtraDBBackup
          name: perconaxtradbbackups.pxc.percona.com
          version: v1alpha1
      description: |2+

        ## Percona is Cloud Native

        Percona Distribution for MySQL Operator is an open-source drop in replacement for MySQL Enterprise with synchronous replication running on Kubernetes. It automates the deployment and management of the members in your Percona XtraDB Cluster environment. It can be used to instantiate a new Percona XtraDB Cluster, or to scale an existing environment.

        Consult the [documentation](https://percona.github.io/percona-xtradb-cluster-operator/) on the Percona Distribution for MySQL Operator for complete details on capabilities and options.

        ### Supported Features

        * **Scale Your Cluster**  change the `size` parameter to [add or remove members](https://percona.github.io/percona-xtradb-cluster-operator/install/scaling) of the cluster. Three is the minimum recommended size for a functioning cluster.

        * **Manage Your Users**  [add, remove, or change](https://percona.github.io/percona-xtradb-cluster-operator/configure/users) the privileges of database users

        * **Automate Your Backups**  [configure cluster backups](https://percona.github.io/percona-xtradb-cluster-operator/configure/operator) to run on a scheduled basis. Backups can be stored on a persistent volume or S3-compatible storage. Leverage [Point-in-time recovery](https://www.percona.com/doc/kubernetes-operator-for-pxc/backups.html#storing-binary-logs-for-point-in-time-recovery) to reduce RPO/RTO.
        * **Proxy integration**  choose HAProxy or ProxySQL as a proxy in front of the Percona XtraDB Cluster. Proxies are deployed and configured automatically with the Operator.

        ### Common Configurations

        * **Set Resource Limits** - set limitation on requests to CPU and memory resources.

        * **Customize Storage** - set the desired Storage Class and Access Mode for your database cluster data.

        * **Control Scheduling** - define how your PXC Pods are scheduled onto the K8S cluster with tolerations, pod disruption budgets, node selector and affinity settings.
        * Automatic synchronization of MySQL users with ProxySQL
        * HAProxy Support
        * Fully automated minor version updates (Smart Update)
        * Update Reader members before Writer member at cluster upgrades
        * Support MySQL versions 5.7 and 8.0
        ### Before You Start

        Add the PXC user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`
        file with Base64-encoded logins and passwords for the user accounts.

        Below is a sample `secrets.yaml` file for the correct formatting.

        ```
        apiVersion: v1
        kind: Secret
        metadata:
          name: my-cluster-secrets
        type: Opaque
        data:
          root: cm9vdF9wYXNzd29yZA==
          xtrabackup: YmFja3VwX3Bhc3N3b3Jk
          monitor: bW9uaXRvcg==
          clustercheck: Y2x1c3RlcmNoZWNrcGFzc3dvcmQ=
          proxyadmin: YWRtaW5fcGFzc3dvcmQ=
          pmmserver: c3VwYXxefHBheno=
          operator: b3BlcmF0b3JhZG1pbg==
        ```
        ###  Release Highlights
        * Custom sidecar containers allow users to customize Percona XtraDB Cluster and other Operator components without changing the container images. In this release, we enable
          even more customization, by allowing users to mount volumes into the sidecar containers.
        * In this release, we put a lot of effort into fixing bugs that were reported by the community. We appreciate everyone who helped us with discovering these issues and
          contributed to the fixes.
        * Mount volumes into sidecar containers to enable customization (Thanks to Sridhar L for contributing) * spec.Backup.serviceAccount and spec.automountServiceAccountToken Custom Resource options can now be used in the Helm chart
          (Thanks to Gerwin van de Steeg for reporting this issue)
        * The logrotate command now doesn’t use verbose mode to avoid flooding the log with rotate information * Logs are now strictly following JSON specification to simplify parsing * New source_retry_count and source_connect_retry options were added to tune source retries for replication between two clusters * New replicasServiceEnabled option was added to allow disabling the Kubernetes Service for haproxy-replicas, which may be useful to avoid the unwanted forwarding of the
          application write requests to all Percona XtraDB Cluster instances
        * Logrotate now doesn’t rotate GRA logs (binlog events in ROW format representing the failed transaction) as ordinary log files, storing them for 7 days instead which
          gives additional time to debug the problem

      displayName: Percona Distribution for MySQL Operator
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: false
        type: AllNamespaces
      keywords:
      - mysql
      - percona
      - database
      - pxc
      - galera
      links:
      - name: Percona
        url: https://www.percona.com/
      - name: Percona Kubernetes Operators Landing Page
        url: https://www.percona.com/software/percona-kubernetes-operators
      - name: Documentation
        url: https://percona.github.io/percona-xtradb-cluster-operator/
      - name: Github
        url: https://github.com/percona/percona-xtradb-cluster-operator
      maintainers:
      - email: info@percona.com
        name: Percona
      maturity: stable
      provider:
        name: Percona
      relatedImages:
      - percona/percona-xtradb-cluster-operator:1.10.0
      version: 1.10.0
    name: stable
  defaultChannel: stable
  packageName: percona-xtradb-cluster-operator
  provider:
    name: Percona
