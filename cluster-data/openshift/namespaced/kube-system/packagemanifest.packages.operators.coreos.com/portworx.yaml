apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Portworx
    provider-url: ""
  name: portworx
  namespace: kube-system
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: portworx-operator.v1.9.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "core.libopenstorage.org/v1",
              "kind": "StorageCluster",
              "metadata": {
                "name": "portworx",
                "namespace": "test-operator"
              },
              "spec": {}
            },
            {
              "apiVersion": "core.libopenstorage.org/v1",
              "kind": "StorageNode",
              "metadata": {
                "name": "example",
                "namespace": "test-operator"
              },
              "spec": {}
            }
          ]
        capabilities: Auto Pilot
        categories: Storage
        certified: "false"
        containerImage: docker.io/portworx/px-operator:1.9.1
        createdAt: "2022-09-08T08:00:00Z"
        description: Cloud native storage solution for production workloads
        operatorframework.io/initialization-resource: |-
          {
            "apiVersion": "core.libopenstorage.org/v1",
            "kind": "StorageCluster",
            "metadata": {
              "name": "portworx"
            }
          }
        repository: https://github.com/libopenstorage/operator
        support: Portworx, Inc
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Storage Cluster installs Portworx in the cluster. It has all
            the necessary configurations to setup and update a Portworx cluster.
          displayName: Storage Cluster
          kind: StorageCluster
          name: storageclusters.core.libopenstorage.org
          version: v1
        - description: Do not create Storage Node as it is internally created by the
            operator. It represents the status of a Portworx node.
          displayName: Storage Node
          kind: StorageNode
          name: storagenodes.core.libopenstorage.org
          version: v1
      description: |
        Portworx-Enterprise is the most widely-used and reliable cloud-native
        storage solution for production workloads and provides high-availability,
        data protection and security for containerized applications.

        Portworx Enterprise enables you to migrate entire applications, including
        data, between clusters in a single data center or cloud, or between clouds,
        with a single kubectl command.

        The cloud native storage and data management platform that enterprises trust
        to manage data in containers now has an operator which simplifies the install,
        configuration, upgrades and manages the Portworx Enterprise cluster lifecycle.

        Learn more about the Portworx Enterprise
        [the data platform for Kubernetes](https://portworx.com/products/introduction)

        To learn more about the platform features, please visit our
        [product features page](https://portworx.com/products/features)

        ### About Portworx

        Portworx is the solution for running stateful containers in production,
        designed with DevOps in mind. With Portworx, users can manage any database
        or stateful service on any infrastructure using any container scheduler,
        including Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves
        the five most common problems DevOps teams encounter when running stateful
        services in production: persistence, high availability, data automation,
        security, and support for multiple data stores and infrastructure.

        ### How to install StorageCluster

        To customize your cluster's configuration (specification), use the
        [Spec Generator](https://central.portworx.com/) from PX-Central.

        ### Prerequisite

        Ensure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.

        ### Tutorials

        * [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)

        * [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)

        * [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)

        * [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)

        * [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)

        * [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)

        * [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)

        * [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)

        * [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)

        ### Uninstall

        Deleting the StorageCluster object for Portworx cluster does not stop Portworx
        service running on the nodes, to avoid application downtime.

        To uninstall Portworx completely without wiping the data, you should add the
        following delete strategy to the StorageCluster spec:
        ```
        spec:
          deleteStrategy:
            type: Uninstall
        ```
        **Caution:** To uninstall Portworx and **wipe all the data**, you should use the following
        delete strategy:
        ```
        spec:
          deleteStrategy:
            type: UninstallAndWipe
        ```
      displayName: Portworx Enterprise
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - portworx
      - persistent storage
      - storage
      - cloud native
      - open source
      links:
      - name: Product Features
        url: https://portworx.com/products/features
      - name: Documentation
        url: https://docs.portworx.com
      - name: Support
        url: https://docs.portworx.com/support
      - name: Source Code
        url: https://github.com/libopenstorage/operator
      maintainers:
      - email: support@portworx.com
        name: Portworx
      maturity: stable
      minKubeVersion: 1.12.0
      provider:
        name: Portworx
      relatedImages:
      - docker.io/portworx/px-operator:1.9.1
      version: 1.9.1
    name: alpha
  - currentCSV: portworx-operator.v1.9.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "core.libopenstorage.org/v1",
              "kind": "StorageCluster",
              "metadata": {
                "name": "portworx",
                "namespace": "test-operator"
              },
              "spec": {}
            },
            {
              "apiVersion": "core.libopenstorage.org/v1",
              "kind": "StorageNode",
              "metadata": {
                "name": "example",
                "namespace": "test-operator"
              },
              "spec": {}
            }
          ]
        capabilities: Auto Pilot
        categories: Storage
        certified: "false"
        containerImage: docker.io/portworx/px-operator:1.9.1
        createdAt: "2022-09-08T08:00:00Z"
        description: Cloud native storage solution for production workloads
        operatorframework.io/initialization-resource: |-
          {
            "apiVersion": "core.libopenstorage.org/v1",
            "kind": "StorageCluster",
            "metadata": {
              "name": "portworx"
            }
          }
        repository: https://github.com/libopenstorage/operator
        support: Portworx, Inc
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Storage Cluster installs Portworx in the cluster. It has all
            the necessary configurations to setup and update a Portworx cluster.
          displayName: Storage Cluster
          kind: StorageCluster
          name: storageclusters.core.libopenstorage.org
          version: v1
        - description: Do not create Storage Node as it is internally created by the
            operator. It represents the status of a Portworx node.
          displayName: Storage Node
          kind: StorageNode
          name: storagenodes.core.libopenstorage.org
          version: v1
      description: |
        Portworx-Enterprise is the most widely-used and reliable cloud-native
        storage solution for production workloads and provides high-availability,
        data protection and security for containerized applications.

        Portworx Enterprise enables you to migrate entire applications, including
        data, between clusters in a single data center or cloud, or between clouds,
        with a single kubectl command.

        The cloud native storage and data management platform that enterprises trust
        to manage data in containers now has an operator which simplifies the install,
        configuration, upgrades and manages the Portworx Enterprise cluster lifecycle.

        Learn more about the Portworx Enterprise
        [the data platform for Kubernetes](https://portworx.com/products/introduction)

        To learn more about the platform features, please visit our
        [product features page](https://portworx.com/products/features)

        ### About Portworx

        Portworx is the solution for running stateful containers in production,
        designed with DevOps in mind. With Portworx, users can manage any database
        or stateful service on any infrastructure using any container scheduler,
        including Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves
        the five most common problems DevOps teams encounter when running stateful
        services in production: persistence, high availability, data automation,
        security, and support for multiple data stores and infrastructure.

        ### How to install StorageCluster

        To customize your cluster's configuration (specification), use the
        [Spec Generator](https://central.portworx.com/) from PX-Central.

        ### Prerequisite

        Ensure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.

        ### Tutorials

        * [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)

        * [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)

        * [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)

        * [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)

        * [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)

        * [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)

        * [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)

        * [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)

        * [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)

        ### Uninstall

        Deleting the StorageCluster object for Portworx cluster does not stop Portworx
        service running on the nodes, to avoid application downtime.

        To uninstall Portworx completely without wiping the data, you should add the
        following delete strategy to the StorageCluster spec:
        ```
        spec:
          deleteStrategy:
            type: Uninstall
        ```
        **Caution:** To uninstall Portworx and **wipe all the data**, you should use the following
        delete strategy:
        ```
        spec:
          deleteStrategy:
            type: UninstallAndWipe
        ```
      displayName: Portworx Enterprise
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - portworx
      - persistent storage
      - storage
      - cloud native
      - open source
      links:
      - name: Product Features
        url: https://portworx.com/products/features
      - name: Documentation
        url: https://docs.portworx.com
      - name: Support
        url: https://docs.portworx.com/support
      - name: Source Code
        url: https://github.com/libopenstorage/operator
      maintainers:
      - email: support@portworx.com
        name: Portworx
      maturity: stable
      minKubeVersion: 1.12.0
      provider:
        name: Portworx
      relatedImages:
      - docker.io/portworx/px-operator:1.9.1
      version: 1.9.1
    name: stable
  defaultChannel: stable
  packageName: portworx
  provider:
    name: Portworx
