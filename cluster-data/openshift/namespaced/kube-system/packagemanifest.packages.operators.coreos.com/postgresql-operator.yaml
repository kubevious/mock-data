apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Openlabs
    provider-url: ""
  name: postgresql-operator
  namespace: kube-system
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: postgresql-operator.v0.0.1
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "postgresql.example.com/v1alpha1",
              "kind": "Postgresql",
              "metadata": {
                "name": "example-postgresql"
              },
              "spec": {
                "image": "postgres:10.4",
                "size": 3
              }
            }
          ]
        capabilities: Seamless Upgrades
        categories: Database
        certified: "true"
        containerImage: quay.io/deekshah86/postgresql-operator
        createdAt: "2019-12-13 09:00:00"
        description: Deploys postgresql based applications
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        repository: https://github.com/janepelladinesh/postgresql-operator
        support: postgresql
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Describes application deployment
          displayName: Postgresql Application
          kind: Postgresql
          name: postgresqls.postgresql.example.com
          version: v1alpha1
      description: "The Postgres operator manages PostgreSQL clusters on Kubernetes.\n
        How it works\n\nThe operator watches additions, updates, and deletions of
        PostgreSQL cluster manifests and changes the running clusters accordingly.
        For each PostgreSQL custom resource it creates StatefulSets, Services, and
        also Postgres roles. For some configuration changes, e.g. updating a pod's
        Docker image, the operator carries out the rolling update.\n\n### Creating
        a Postgres cluster\n\nAfter installing the Postgres Operator you can use the
        provided YAML examples to create a minimal cluster setup with onw instances.\n\n```\n#
        First, make sure the operator is running\nkubectl get pod -l name=postgres-operator
        -n operators\n\n# Then create a new Postgres cluster with a custom resource
        file \n\n# check for deployed clusters\nkubectl get postgresql -n <namespace>\n```\n\n\n\nThe
        operator can be configured by defining an `OperatorConfiguration` custom resource
        that contains the parameters to be changed. The YAML example shows the default
        configuration used internally when creating the operator . For a detailed
        description of each parameter checkout out the [operator reference](https://github.com/janepelladinesh/postgresql-operator)\n
        for more details about how to use the operator.\n"
      displayName: Postgresql Operator
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - postgres
      - database
      maintainers:
      - email: janepelladinesh97@gmail.com
        name: Dinesh
      - email: anil_bandi@gmail.com
        name: Anil
      maturity: alpha
      provider:
        name: Openlabs
      relatedImages:
      - quay.io/deekshah86/postgresql-operator
      version: 0.0.1
    name: alpha
  defaultChannel: alpha
  packageName: postgresql-operator
  provider:
    name: Openlabs
