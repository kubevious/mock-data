apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: kubevious
    meta.helm.sh/release-namespace: kubevious
  creationTimestamp: "2022-10-03T18:38:01Z"
  generation: 1
  labels:
    app.kubernetes.io/component: kubevious-backend
    app.kubernetes.io/instance: kubevious
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubevious
    app.kubernetes.io/version: 1.0.13
    helm.sh/chart: kubevious-1.0.13
  name: kubevious-backend
  namespace: kubevious
  ownerReferences:
  - apiVersion: installer.kubevious.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Kubevious
    name: kubevious
    uid: 8f47dab5-0847-44c2-a914-8e403488bf96
  resourceVersion: "31310"
  uid: 1aba9b3d-d272-4d6b-9135-c8704412830a
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: kubevious-backend
      app.kubernetes.io/instance: kubevious
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubevious
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: kubevious-backend
        app.kubernetes.io/instance: kubevious
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubevious
        app.kubernetes.io/version: 1.0.13
        helm.sh/chart: kubevious-1.0.13
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: LOG_LEVEL
          value: info
        - name: SERVER_PORT
          value: "4001"
        - name: COLLECTOR_BASE_URL
          value: http://kubevious-collector-clusterip:4000
        - name: PARSER_BASE_URL
          value: http://kubevious-parser-clusterip:4000
        - name: GUARD_BASE_URL
          value: http://kubevious-guard-clusterip:4000
        envFrom:
        - configMapRef:
            name: kubevious-mysql-config
        - secretRef:
            name: kubevious-mysql-secret
        - configMapRef:
            name: kubevious-redis-config
        - secretRef:
            name: kubevious-worldvious
        - configMapRef:
            name: kubevious-worldvious
        image: docker.io/kubevious/backend-ubi:1.0.18
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: kubevious
        ports:
        - containerPort: 4001
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kubevious-backend
      serviceAccountName: kubevious-backend
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-10-03T18:38:32Z"
    lastUpdateTime: "2022-10-03T18:38:32Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-10-03T18:38:01Z"
    lastUpdateTime: "2022-10-03T18:38:32Z"
    message: ReplicaSet "kubevious-backend-5965867f89" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
