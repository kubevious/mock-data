apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: kubevious
    meta.helm.sh/release-namespace: kubevious
  creationTimestamp: "2022-10-03T19:02:46Z"
  generation: 1
  labels:
    app.kubernetes.io/component: kubevious-guard
    app.kubernetes.io/instance: kubevious
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubevious
    app.kubernetes.io/version: 1.0.13
    helm.sh/chart: kubevious-1.0.13
    pod-template-hash: 7cb4b4dd87
  name: kubevious-guard-7cb4b4dd87
  namespace: kubevious
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: kubevious-guard
    uid: 70f2e67c-94e2-402e-8a13-a87f73e21a28
  resourceVersion: "21579"
  uid: 6704960e-2bc2-4362-8e7b-5295a7698d13
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kubevious-guard
      app.kubernetes.io/instance: kubevious
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kubevious
      pod-template-hash: 7cb4b4dd87
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: kubevious-guard
        app.kubernetes.io/instance: kubevious
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubevious
        app.kubernetes.io/version: 1.0.13
        helm.sh/chart: kubevious-1.0.13
        pod-template-hash: 7cb4b4dd87
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: LOG_LEVEL
          value: info
        - name: SERVER_PORT
          value: "4004"
        - name: BACKEND_BASE_URL
          value: http://kubevious-backend-clusterip:4000
        envFrom:
        - configMapRef:
            name: kubevious-mysql-config
        - secretRef:
            name: kubevious-mysql-secret
        - configMapRef:
            name: kubevious-redis-config
        - secretRef:
            name: kubevious-worldvious
        - configMapRef:
            name: kubevious-worldvious
        image: docker.io/kubevious/guard-ubi:1.0.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: kubevious
        ports:
        - containerPort: 4004
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
