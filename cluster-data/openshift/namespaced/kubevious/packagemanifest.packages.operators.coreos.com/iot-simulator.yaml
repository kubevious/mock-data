apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Jens Reimann
    provider-url: ""
  name: iot-simulator
  namespace: kubevious
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: iot-simulator.0.1.0
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [{
              "apiVersion": "iot.dentrassi.de/v1alpha1",
              "kind": "Simulator",
              "metadata": {
                "name": "hono1",
                  "namespace": "iot-simulator"
              },
              "spec": {
                  "endpoint": {
                      "messaging": {
                          "user": "foo",
                          "password": "bar",
                          "host": "messaging.host.hono.svc",
                          "port": 5671,
                          "caCertificate": ""
                      },
                      "registry": {
                          "url": "https://your-device-registry"
                      },
                      "adapters": {
                          "mqtt": {
                              "host": "mqtt-adapter.hono.svc",
                              "port": 8883
                          },
                          "http": {
                              "url": "https://http-adapter.hono.svc"
                          }
                      }
                  }
              }
          },
          {
            "apiVersion": "iot.dentrassi.de/v1alpha1",
            "kind": "SimulatorConsumer",
            "metadata": {
              "name": "consumer1",
              "namespace": "iot-simulator"
            },
            "spec": {
              "simulator": "hono1",
              "tenant": "myapp1.iot",
              "type": "telemetry",
              "replicas": 1
            }
          },
          {
            "apiVersion": "iot.dentrassi.de/v1alpha1",
            "kind": "SimulatorProducer",
            "metadata": {
              "name": "producer1",
              "namespace": "iot-simulator"
            },
            "spec": {
              "simulator": "hono1",
              "tenant": "myapp1.iot",
              "type": "telemetry",
              "protocol": "http",
              "replicas": 1,
              "numberOfDevices": 10
            }
          }
          ]
        capabilities: Seamless Upgrades
        categories: Streaming & Messaging
        certified: "false"
        containerImage: ctron/iot-simulator-operator:0.1
        createdAt: "2019-03-19 00:00:00"
        description: An IoT device simulator, simulating producers and consumers using
          the Eclipse Hono API
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        repository: https://github.com/ctron/iot-simulator-operator
        support: none
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: A new simulator instance
          displayName: Simulator
          kind: Simulator
          name: simulators.iot.dentrassi.de
          version: v1alpha1
        - description: A new consumer for an existing simulator instance
          displayName: Simulator Consumer
          kind: SimulatorConsumer
          name: simulatorconsumers.iot.dentrassi.de
          version: v1alpha1
        - description: A new producer for an existing simulator instance
          displayName: Simulator Producer
          kind: SimulatorProducer
          name: simulatorproducers.iot.dentrassi.de
          version: v1alpha1
        required:
        - description: A prometheus instance
          displayName: Prometheus
          kind: Prometheus
          name: prometheuses.monitoring.coreos.com
          version: v1
        - description: A prometheus service monitor
          displayName: ServiceMonitor
          kind: ServiceMonitor
          name: servicemonitors.monitoring.coreos.com
          version: v1
      description: |
        A scalable IoT simulator, which simulates producers (MQTT or HTTP) and consumers.

        ## Pre-requisites

        You will need to have access to a Hono instance, including the messaging backend
        and the HTTP endpoint of the device registry.

        As metrics information is stored in a Prometheus instance, this operator also
        requires the Prometheus operator to be installed.

        ## Creating an instance

        Once you have the operator deployed, you need to set up at least one `Simulator` resource.
        This will trigger the creation of the web console and deploy a Prometheus instance for
        gathering metrics. The `Simulator` instance also contains the endpoint information for the
        Hono instance.

        ## Producers & Consumer

        After a `Simulator` instance has been created, you can create `SimulatorProducer` and
        `SimulatorConsumer` instances as necessary. You will need to reference the `Simulator`
        instance.
      displayName: IoT simulator
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: false
        type: AllNamespaces
      keywords:
      - iot
      - messaging
      - amqp
      - mqtt
      - http
      links:
      - name: Documentation
        url: https://dentrassi.de/iot-simulator
      - name: Eclipse Honoâ„¢ Simulator
        url: https://github.com/ctron/hono-simulator
      - name: IoT Simulator Console
        url: https://github.com/ctron/iot-simulator-console
      - name: IoT Simulator Operator
        url: https://github.com/ctron/iot-simulator-operator
      maintainers:
      - email: ctron@dentrassi.de
        name: Jens Reimann
      maturity: alpha
      provider:
        name: Jens Reimann
      relatedImages:
      - docker.io/ctron/iot-simulator-operator:0.1
      version: 0.1.0
    name: alpha
  defaultChannel: alpha
  packageName: iot-simulator
  provider:
    name: Jens Reimann
