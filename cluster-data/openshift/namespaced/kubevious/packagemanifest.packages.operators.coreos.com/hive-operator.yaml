apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Red Hat
    provider-url: ""
  name: hive-operator
  namespace: kubevious
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: hive-operator.v1.0.17
    currentCSVDesc:
      annotations:
        alm-examples: '[{"apiVersion":"hive.openshift.io/v1","kind":"HiveConfig","metadata":{"name":"hive"},"spec":{"managedDomains":[{"aws":{"credentialsSecretRef":{"name":"my-route53-creds"}},"domains":["my-base-domain.example.com"]}]}}]'
        capabilities: Seamless Upgrades
        categories: OpenShift Optional
        certified: "false"
        containerImage: quay.io/openshift-hive/hive:v1.0.17
        createdAt: "2021-01-11T16:35:17Z"
        description: OpenShift cluster provisioning and management at scale.
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        repository: https://github.com/openshift/hive
        support: Hive Team
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: ClusterDeployment is the Schema for the clusterdeployments
            API
          displayName: ClusterDeployment
          kind: ClusterDeployment
          name: clusterdeployments.hive.openshift.io
          version: v1
        - description: ClusterState is the Schema for the clusterstates API
          displayName: ClusterState
          kind: ClusterState
          name: clusterstates.hive.openshift.io
          version: v1
        - description: DNSZone is the Schema for the dnszones API
          displayName: DNSZone
          kind: DNSZone
          name: dnszones.hive.openshift.io
          version: v1
        - description: ClusterClaim represents a claim to a cluster from a cluster
            pool.
          displayName: ClusterClaim
          kind: ClusterClaim
          name: clusterclaims.hive.openshift.io
          version: v1
        - description: ClusterImageSet is the Schema for the clusterimagesets API
          displayName: ClusterImageSet
          kind: ClusterImageSet
          name: clusterimagesets.hive.openshift.io
          version: v1
        - description: ClusterPool represents a pool of clusters that should be kept
            ready to be given out to users. Clusters are removed from the pool once
            claimed and then automatically replaced with a new one.
          displayName: ClusterPool
          kind: ClusterPool
          name: clusterpools.hive.openshift.io
          version: v1
        - description: ClusterRelocate is the Schema for the ClusterRelocates API
          displayName: ClusterRelocate
          kind: ClusterRelocate
          name: clusterrelocates.hive.openshift.io
          version: v1
        - description: Checkpoint is the Schema for the backup of Hive objects.
          displayName: Checkpoint
          kind: Checkpoint
          name: checkpoints.hive.openshift.io
          version: v1
        - description: ClusterSyncLease is a record of the last time that SyncSets
            and SelectorSyncSets were applied to a cluster.
          displayName: ClusterSyncLease
          kind: ClusterSyncLease
          name: clustersyncleases.hiveinternal.openshift.io
          version: v1alpha1
        - description: SelectorSyncSet is the Schema for the SelectorSyncSet API
          displayName: SelectorSyncSet
          kind: SelectorSyncSet
          name: selectorsyncsets.hive.openshift.io
          version: v1
        - description: MachinePool is the Schema for the machinepools API
          displayName: MachinePool
          kind: MachinePool
          name: machinepools.hive.openshift.io
          version: v1
        - description: ClusterProvision is the Schema for the clusterprovisions API
          displayName: ClusterProvision
          kind: ClusterProvision
          name: clusterprovisions.hive.openshift.io
          version: v1
        - description: ClusterDeprovision is the Schema for the clusterdeprovisions
            API
          displayName: ClusterDeprovision
          kind: ClusterDeprovision
          name: clusterdeprovisions.hive.openshift.io
          version: v1
        - description: ClusterSync is the status of all of the SelectorSyncSets and
            SyncSets that apply to a ClusterDeployment.
          displayName: ClusterSync
          kind: ClusterSync
          name: clustersyncs.hiveinternal.openshift.io
          version: v1alpha1
        - description: SyncIdentityProvider is the Schema for the SyncIdentityProvider
            API
          displayName: SyncIdentityProvider
          kind: SyncIdentityProvider
          name: syncidentityproviders.hive.openshift.io
          version: v1
        - description: MachinePoolNameLease is the Schema for the MachinePoolNameLeases
            API. This resource is mostly empty as we're primarily relying on the name
            to determine if a lease is available. Note that not all cloud providers
            require the use of a lease for naming, at present this is only required
            for GCP where we're extremely restricted on name lengths.
          displayName: MachinePoolNameLease
          kind: MachinePoolNameLease
          name: machinepoolnameleases.hive.openshift.io
          version: v1
        - description: HiveConfig is the Schema for the hives API
          displayName: HiveConfig
          kind: HiveConfig
          name: hiveconfigs.hive.openshift.io
          version: v1
        - description: SyncSet is the Schema for the SyncSet API
          displayName: SyncSet
          kind: SyncSet
          name: syncsets.hive.openshift.io
          version: v1
        - description: SelectorSyncIdentityProvider is the Schema for the SelectorSyncSet
            API
          displayName: SelectorSyncIdentityProvider
          kind: SelectorSyncIdentityProvider
          name: selectorsyncidentityproviders.hive.openshift.io
          version: v1
      description: |-
        Hive for Red Hat OpenShift is an operator that runs on top of Kubernetes/OpenShift. Hive can be used to provision
        and perform initial configuration of OpenShift clusters.

        For provisioning OpenShift, Hive uses the [OpenShift installer](https://github.com/openshift/installer).

        ### Supported cloud providers
        * AWS
        * Azure
        * Google Cloud Platform
        * Red Hat OpenStack

        In the future Hive will support more cloud providers.

        ## Documentation

        * [Quick Start Guide](https://github.com/openshift/hive/blob/master/docs/quick_start.md)
        * [Using Hive](https://github.com/openshift/hive/blob/master/docs/using-hive.md)
        * [Hiveutil CLI](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)
        * [Frequently Asked Questions](https://github.com/openshift/hive/blob/master/docs/FAQs.md)
        * [Architecture](https://github.com/openshift/hive/blob/master/docs/architecture.md)

        See the [project README](https://github.com/openshift/hive#documentation) for more documentation.

        ## Post Install Configuration

        After installing the Hive for Red Hat OpenShift operator, create a cluster-scoped `HiveConfig` CR to configure Hive.
        Upon creation of `HiveConfig`, the operator will create the necessary Kubernetes resources to launch Hive.

        Example `HiveConfig`:
        ```yaml
        ---
          apiVersion: hive.openshift.io/v1
          kind: HiveConfig
          metadata:
            name: hive
          spec:
            managedDomains:
            - aws:
                credentialsSecretRef:
                  name: my-route53-creds
              domains:
              - my-base-domain.example.com
        ```

        ## Create a cluster

        To create a cluster with Hive, create a `ClusterDeployment` CR. You can also use the
        [`hiveutil` tool](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)'s `create-cluster` command
        to create clusters.
      displayName: Hive for Red Hat OpenShift
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kubernetes
      - openshift
      - multi-cluster
      - cluster
      links:
      - name: Hive GitHub
        url: https://github.com/openshift/hive
      - name: 'Hive: Cluster-as-a-Service'
        url: https://www.openshift.com/blog/openshift-hive-cluster-as-a-service
      - name: OpenShift
        url: https://www.openshift.com/
      maintainers:
      - email: openshift-hive-team@redhat.com
        name: Hive Team
      maturity: alpha
      provider:
        name: Red Hat
      relatedImages:
      - quay.io/openshift-hive/hive:v1.0.17
      version: 1.0.17
    name: ocm-2.2
  - currentCSV: hive-operator.v2.3.3039-60b8a9a
    currentCSVDesc:
      annotations:
        alm-examples: '[{"apiVersion":"hive.openshift.io/v1","kind":"HiveConfig","metadata":{"name":"hive"},"spec":{"managedDomains":[{"aws":{"credentialsSecretRef":{"name":"my-route53-creds"}},"domains":["my-base-domain.example.com"]}]}}]'
        capabilities: Seamless Upgrades
        categories: OpenShift Optional
        certified: "false"
        containerImage: quay.io/openshift-hive/hive:v2.3.3039-60b8a9a
        createdAt: "2022-08-15T17:23:39Z"
        description: OpenShift cluster provisioning and management at scale.
        repository: https://github.com/openshift/hive
        support: Hive Team
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Checkpoint is the Schema for the backup of Hive objects.
          displayName: Checkpoint
          kind: Checkpoint
          name: checkpoints.hive.openshift.io
          version: v1
        - description: ClusterClaim represents a claim to a cluster from a cluster
            pool.
          displayName: ClusterClaim
          kind: ClusterClaim
          name: clusterclaims.hive.openshift.io
          version: v1
        - description: ClusterDeployment is the Schema for the clusterdeployments
            API
          displayName: ClusterDeployment
          kind: ClusterDeployment
          name: clusterdeployments.hive.openshift.io
          version: v1
        - description: ClusterDeprovision is the Schema for the clusterdeprovisions
            API
          displayName: ClusterDeprovision
          kind: ClusterDeprovision
          name: clusterdeprovisions.hive.openshift.io
          version: v1
        - description: ClusterImageSet is the Schema for the clusterimagesets API
          displayName: ClusterImageSet
          kind: ClusterImageSet
          name: clusterimagesets.hive.openshift.io
          version: v1
        - description: ClusterPool represents a pool of clusters that should be kept
            ready to be given out to users. Clusters are removed from the pool once
            claimed and then automatically replaced with a new one.
          displayName: ClusterPool
          kind: ClusterPool
          name: clusterpools.hive.openshift.io
          version: v1
        - description: ClusterProvision is the Schema for the clusterprovisions API
          displayName: ClusterProvision
          kind: ClusterProvision
          name: clusterprovisions.hive.openshift.io
          version: v1
        - description: ClusterRelocate is the Schema for the ClusterRelocates API
          displayName: ClusterRelocate
          kind: ClusterRelocate
          name: clusterrelocates.hive.openshift.io
          version: v1
        - description: ClusterState is the Schema for the clusterstates API
          displayName: ClusterState
          kind: ClusterState
          name: clusterstates.hive.openshift.io
          version: v1
        - description: DNSZone is the Schema for the dnszones API
          displayName: DNSZone
          kind: DNSZone
          name: dnszones.hive.openshift.io
          version: v1
        - description: HiveConfig is the Schema for the hives API
          displayName: HiveConfig
          kind: HiveConfig
          name: hiveconfigs.hive.openshift.io
          version: v1
        - description: MachinePoolNameLease is the Schema for the MachinePoolNameLeases
            API. This resource is mostly empty as we're primarily relying on the name
            to determine if a lease is available. Note that not all cloud providers
            require the use of a lease for naming, at present this is only required
            for GCP where we're extremely restricted on name lengths.
          displayName: MachinePoolNameLease
          kind: MachinePoolNameLease
          name: machinepoolnameleases.hive.openshift.io
          version: v1
        - description: MachinePool is the Schema for the machinepools API
          displayName: MachinePool
          kind: MachinePool
          name: machinepools.hive.openshift.io
          version: v1
        - description: SelectorSyncIdentityProvider is the Schema for the SelectorSyncSet
            API
          displayName: SelectorSyncIdentityProvider
          kind: SelectorSyncIdentityProvider
          name: selectorsyncidentityproviders.hive.openshift.io
          version: v1
        - description: SelectorSyncSet is the Schema for the SelectorSyncSet API
          displayName: SelectorSyncSet
          kind: SelectorSyncSet
          name: selectorsyncsets.hive.openshift.io
          version: v1
        - description: SyncIdentityProvider is the Schema for the SyncIdentityProvider
            API
          displayName: SyncIdentityProvider
          kind: SyncIdentityProvider
          name: syncidentityproviders.hive.openshift.io
          version: v1
        - description: SyncSet is the Schema for the SyncSet API
          displayName: SyncSet
          kind: SyncSet
          name: syncsets.hive.openshift.io
          version: v1
        - description: ClusterSyncLease is a record of the last time that SyncSets
            and SelectorSyncSets were applied to a cluster.
          displayName: ClusterSyncLease
          kind: ClusterSyncLease
          name: clustersyncleases.hiveinternal.openshift.io
          version: v1alpha1
        - description: ClusterSync is the status of all of the SelectorSyncSets and
            SyncSets that apply to a ClusterDeployment.
          displayName: ClusterSync
          kind: ClusterSync
          name: clustersyncs.hiveinternal.openshift.io
          version: v1alpha1
        - description: FakeClusterInstall represents a fake request to provision an
            agent based cluster.
          displayName: FakeClusterInstall
          kind: FakeClusterInstall
          name: fakeclusterinstalls.hiveinternal.openshift.io
          version: v1alpha1
      description: |-
        Hive for Red Hat OpenShift is an operator that runs on top of Kubernetes/OpenShift. Hive can be used to provision
        and perform initial configuration of OpenShift clusters.

        For provisioning OpenShift, Hive uses the [OpenShift installer](https://github.com/openshift/installer).

        ### Supported cloud providers
        * AWS
        * Azure
        * Google Cloud Platform
        * Red Hat OpenStack

        In the future Hive will support more cloud providers.

        ## Documentation

        * [Quick Start Guide](https://github.com/openshift/hive/blob/master/docs/quick_start.md)
        * [Using Hive](https://github.com/openshift/hive/blob/master/docs/using-hive.md)
        * [Hiveutil CLI](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)
        * [Frequently Asked Questions](https://github.com/openshift/hive/blob/master/docs/FAQs.md)
        * [Architecture](https://github.com/openshift/hive/blob/master/docs/architecture.md)

        See the [project README](https://github.com/openshift/hive#documentation) for more documentation.

        ## Post Install Configuration

        After installing the Hive for Red Hat OpenShift operator, create a cluster-scoped `HiveConfig` CR to configure Hive.
        Upon creation of `HiveConfig`, the operator will create the necessary Kubernetes resources to launch Hive.

        Example `HiveConfig`:
        ```yaml
        ---
          apiVersion: hive.openshift.io/v1
          kind: HiveConfig
          metadata:
            name: hive
          spec:
            managedDomains:
            - aws:
                credentialsSecretRef:
                  name: my-route53-creds
              domains:
              - my-base-domain.example.com
        ```

        ## Create a cluster

        To create a cluster with Hive, create a `ClusterDeployment` CR. You can also use the
        [`hiveutil` tool](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)'s `create-cluster` command
        to create clusters.
      displayName: Hive for Red Hat OpenShift
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kubernetes
      - openshift
      - multi-cluster
      - cluster
      links:
      - name: Hive GitHub
        url: https://github.com/openshift/hive
      - name: 'Hive: Cluster-as-a-Service'
        url: https://www.openshift.com/blog/openshift-hive-cluster-as-a-service
      - name: OpenShift
        url: https://www.openshift.com/
      maintainers:
      - email: openshift-hive-team@redhat.com
        name: Hive Team
      maturity: alpha
      provider:
        name: Red Hat
      relatedImages:
      - quay.io/openshift-hive/hive:v2.3.3039-60b8a9a
      version: 2.3.3039-60b8a9a
    name: ocm-2.3
  - currentCSV: hive-operator.v2.4.3231-ba51985
    currentCSVDesc:
      annotations:
        alm-examples: '[{"apiVersion":"hive.openshift.io/v1","kind":"HiveConfig","metadata":{"name":"hive"},"spec":{"managedDomains":[{"aws":{"credentialsSecretRef":{"name":"my-route53-creds"}},"domains":["my-base-domain.example.com"]}]}}]'
        capabilities: Seamless Upgrades
        categories: OpenShift Optional
        certified: "false"
        containerImage: quay.io/openshift-hive/hive:v2.4.3231-ba51985
        createdAt: "2022-08-15T11:53:28Z"
        description: OpenShift cluster provisioning and management at scale.
        operators.operatorframework.io/internal-objects: '["checkpoints.hive.openshift.io","clusterdeprovisions.hive.openshift.io","clusterprovisions.hive.openshift.io","clusterstates.hive.openshift.io","machinepoolnameleases.hive.openshift.io","clustersyncleases.hiveinternal.openshift.io","clustersyncs.hiveinternal.openshift.io","fakeclusterinstalls.hiveinternal.openshift.io"]'
        repository: https://github.com/openshift/hive
        support: Hive Team
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Checkpoint is the Schema for the backup of Hive objects.
          displayName: Checkpoint
          kind: Checkpoint
          name: checkpoints.hive.openshift.io
          version: v1
        - description: ClusterClaim represents a claim to a cluster from a cluster
            pool.
          displayName: ClusterClaim
          kind: ClusterClaim
          name: clusterclaims.hive.openshift.io
          version: v1
        - description: ClusterDeployment is the Schema for the clusterdeployments
            API
          displayName: ClusterDeployment
          kind: ClusterDeployment
          name: clusterdeployments.hive.openshift.io
          version: v1
        - description: ClusterDeprovision is the Schema for the clusterdeprovisions
            API
          displayName: ClusterDeprovision
          kind: ClusterDeprovision
          name: clusterdeprovisions.hive.openshift.io
          version: v1
        - description: ClusterImageSet is the Schema for the clusterimagesets API
          displayName: ClusterImageSet
          kind: ClusterImageSet
          name: clusterimagesets.hive.openshift.io
          version: v1
        - description: ClusterPool represents a pool of clusters that should be kept
            ready to be given out to users. Clusters are removed from the pool once
            claimed and then automatically replaced with a new one.
          displayName: ClusterPool
          kind: ClusterPool
          name: clusterpools.hive.openshift.io
          version: v1
        - description: ClusterProvision is the Schema for the clusterprovisions API
          displayName: ClusterProvision
          kind: ClusterProvision
          name: clusterprovisions.hive.openshift.io
          version: v1
        - description: ClusterRelocate is the Schema for the ClusterRelocates API
          displayName: ClusterRelocate
          kind: ClusterRelocate
          name: clusterrelocates.hive.openshift.io
          version: v1
        - description: ClusterState is the Schema for the clusterstates API
          displayName: ClusterState
          kind: ClusterState
          name: clusterstates.hive.openshift.io
          version: v1
        - description: DNSZone is the Schema for the dnszones API
          displayName: DNSZone
          kind: DNSZone
          name: dnszones.hive.openshift.io
          version: v1
        - description: HiveConfig is the Schema for the hives API
          displayName: HiveConfig
          kind: HiveConfig
          name: hiveconfigs.hive.openshift.io
          version: v1
        - description: MachinePoolNameLease is the Schema for the MachinePoolNameLeases
            API. This resource is mostly empty as we're primarily relying on the name
            to determine if a lease is available. Note that not all cloud providers
            require the use of a lease for naming, at present this is only required
            for GCP where we're extremely restricted on name lengths.
          displayName: MachinePoolNameLease
          kind: MachinePoolNameLease
          name: machinepoolnameleases.hive.openshift.io
          version: v1
        - description: MachinePool is the Schema for the machinepools API
          displayName: MachinePool
          kind: MachinePool
          name: machinepools.hive.openshift.io
          version: v1
        - description: SelectorSyncIdentityProvider is the Schema for the SelectorSyncSet
            API
          displayName: SelectorSyncIdentityProvider
          kind: SelectorSyncIdentityProvider
          name: selectorsyncidentityproviders.hive.openshift.io
          version: v1
        - description: SelectorSyncSet is the Schema for the SelectorSyncSet API
          displayName: SelectorSyncSet
          kind: SelectorSyncSet
          name: selectorsyncsets.hive.openshift.io
          version: v1
        - description: SyncIdentityProvider is the Schema for the SyncIdentityProvider
            API
          displayName: SyncIdentityProvider
          kind: SyncIdentityProvider
          name: syncidentityproviders.hive.openshift.io
          version: v1
        - description: SyncSet is the Schema for the SyncSet API
          displayName: SyncSet
          kind: SyncSet
          name: syncsets.hive.openshift.io
          version: v1
        - description: ClusterSyncLease is a record of the last time that SyncSets
            and SelectorSyncSets were applied to a cluster.
          displayName: ClusterSyncLease
          kind: ClusterSyncLease
          name: clustersyncleases.hiveinternal.openshift.io
          version: v1alpha1
        - description: ClusterSync is the status of all of the SelectorSyncSets and
            SyncSets that apply to a ClusterDeployment.
          displayName: ClusterSync
          kind: ClusterSync
          name: clustersyncs.hiveinternal.openshift.io
          version: v1alpha1
        - description: FakeClusterInstall represents a fake request to provision an
            agent based cluster.
          displayName: FakeClusterInstall
          kind: FakeClusterInstall
          name: fakeclusterinstalls.hiveinternal.openshift.io
          version: v1alpha1
      description: |-
        Hive for Red Hat OpenShift is an operator that runs on top of Kubernetes/OpenShift. Hive can be used to provision
        and perform initial configuration of OpenShift clusters.

        For provisioning OpenShift, Hive uses the [OpenShift installer](https://github.com/openshift/installer).

        ### Supported cloud providers
        * AWS
        * Azure
        * Google Cloud Platform
        * Red Hat OpenStack

        In the future Hive will support more cloud providers.

        ## Documentation

        * [Quick Start Guide](https://github.com/openshift/hive/blob/master/docs/quick_start.md)
        * [Using Hive](https://github.com/openshift/hive/blob/master/docs/using-hive.md)
        * [Hiveutil CLI](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)
        * [Frequently Asked Questions](https://github.com/openshift/hive/blob/master/docs/FAQs.md)
        * [Architecture](https://github.com/openshift/hive/blob/master/docs/architecture.md)

        See the [project README](https://github.com/openshift/hive#documentation) for more documentation.

        ## Post Install Configuration

        After installing the Hive for Red Hat OpenShift operator, create a cluster-scoped `HiveConfig` CR to configure Hive.
        Upon creation of `HiveConfig`, the operator will create the necessary Kubernetes resources to launch Hive.

        Example `HiveConfig`:
        ```yaml
        ---
          apiVersion: hive.openshift.io/v1
          kind: HiveConfig
          metadata:
            name: hive
          spec:
            managedDomains:
            - aws:
                credentialsSecretRef:
                  name: my-route53-creds
              domains:
              - my-base-domain.example.com
        ```

        ## Create a cluster

        To create a cluster with Hive, create a `ClusterDeployment` CR. You can also use the
        [`hiveutil` tool](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)'s `create-cluster` command
        to create clusters.
      displayName: Hive for Red Hat OpenShift
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kubernetes
      - openshift
      - multi-cluster
      - cluster
      links:
      - name: Hive GitHub
        url: https://github.com/openshift/hive
      - name: 'Hive: Cluster-as-a-Service'
        url: https://www.openshift.com/blog/openshift-hive-cluster-as-a-service
      - name: OpenShift
        url: https://www.openshift.com/
      maintainers:
      - email: openshift-hive-team@redhat.com
        name: Hive Team
      maturity: alpha
      provider:
        name: Red Hat
      relatedImages:
      - quay.io/openshift-hive/hive:v2.4.3231-ba51985
      version: 2.4.3231-ba51985
    name: ocm-2.4
  - currentCSV: hive-operator.v1.2.3883-849ebe8
    currentCSVDesc:
      annotations:
        alm-examples: '[{"apiVersion":"hive.openshift.io/v1","kind":"HiveConfig","metadata":{"name":"hive"},"spec":{"managedDomains":[{"aws":{"credentialsSecretRef":{"name":"my-route53-creds"}},"domains":["my-base-domain.example.com"]}]}}]'
        capabilities: Seamless Upgrades
        categories: OpenShift Optional
        certified: "false"
        containerImage: quay.io/openshift-hive/hive:v1.2.3883-849ebe8
        createdAt: "2022-09-27T17:08:30Z"
        description: OpenShift cluster provisioning and management at scale.
        operators.operatorframework.io/internal-objects: '["checkpoints.hive.openshift.io","clusterdeprovisions.hive.openshift.io","clusterprovisions.hive.openshift.io","clusterstates.hive.openshift.io","machinepoolnameleases.hive.openshift.io","clustersyncleases.hiveinternal.openshift.io","clustersyncs.hiveinternal.openshift.io","fakeclusterinstalls.hiveinternal.openshift.io"]'
        repository: https://github.com/openshift/hive
        support: Hive Team
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Checkpoint is the Schema for the backup of Hive objects.
          displayName: Checkpoint
          kind: Checkpoint
          name: checkpoints.hive.openshift.io
          version: v1
        - description: ClusterClaim represents a claim to a cluster from a cluster
            pool.
          displayName: ClusterClaim
          kind: ClusterClaim
          name: clusterclaims.hive.openshift.io
          version: v1
        - description: ClusterDeploymentCustomization is the Schema for clusterdeploymentcustomizations
            API.
          displayName: ClusterDeploymentCustomization
          kind: ClusterDeploymentCustomization
          name: clusterdeploymentcustomizations.hive.openshift.io
          version: v1
        - description: ClusterDeployment is the Schema for the clusterdeployments
            API
          displayName: ClusterDeployment
          kind: ClusterDeployment
          name: clusterdeployments.hive.openshift.io
          version: v1
        - description: ClusterDeprovision is the Schema for the clusterdeprovisions
            API
          displayName: ClusterDeprovision
          kind: ClusterDeprovision
          name: clusterdeprovisions.hive.openshift.io
          version: v1
        - description: ClusterImageSet is the Schema for the clusterimagesets API
          displayName: ClusterImageSet
          kind: ClusterImageSet
          name: clusterimagesets.hive.openshift.io
          version: v1
        - description: ClusterPool represents a pool of clusters that should be kept
            ready to be given out to users. Clusters are removed from the pool once
            claimed and then automatically replaced with a new one.
          displayName: ClusterPool
          kind: ClusterPool
          name: clusterpools.hive.openshift.io
          version: v1
        - description: ClusterProvision is the Schema for the clusterprovisions API
          displayName: ClusterProvision
          kind: ClusterProvision
          name: clusterprovisions.hive.openshift.io
          version: v1
        - description: ClusterRelocate is the Schema for the ClusterRelocates API
          displayName: ClusterRelocate
          kind: ClusterRelocate
          name: clusterrelocates.hive.openshift.io
          version: v1
        - description: ClusterState is the Schema for the clusterstates API
          displayName: ClusterState
          kind: ClusterState
          name: clusterstates.hive.openshift.io
          version: v1
        - description: DNSZone is the Schema for the dnszones API
          displayName: DNSZone
          kind: DNSZone
          name: dnszones.hive.openshift.io
          version: v1
        - description: HiveConfig is the Schema for the hives API
          displayName: HiveConfig
          kind: HiveConfig
          name: hiveconfigs.hive.openshift.io
          version: v1
        - description: MachinePoolNameLease is the Schema for the MachinePoolNameLeases
            API. This resource is mostly empty as we're primarily relying on the name
            to determine if a lease is available. Note that not all cloud providers
            require the use of a lease for naming, at present this is only required
            for GCP where we're extremely restricted on name lengths.
          displayName: MachinePoolNameLease
          kind: MachinePoolNameLease
          name: machinepoolnameleases.hive.openshift.io
          version: v1
        - description: MachinePool is the Schema for the machinepools API
          displayName: MachinePool
          kind: MachinePool
          name: machinepools.hive.openshift.io
          version: v1
        - description: SelectorSyncIdentityProvider is the Schema for the SelectorSyncSet
            API
          displayName: SelectorSyncIdentityProvider
          kind: SelectorSyncIdentityProvider
          name: selectorsyncidentityproviders.hive.openshift.io
          version: v1
        - description: SelectorSyncSet is the Schema for the SelectorSyncSet API
          displayName: SelectorSyncSet
          kind: SelectorSyncSet
          name: selectorsyncsets.hive.openshift.io
          version: v1
        - description: SyncIdentityProvider is the Schema for the SyncIdentityProvider
            API
          displayName: SyncIdentityProvider
          kind: SyncIdentityProvider
          name: syncidentityproviders.hive.openshift.io
          version: v1
        - description: SyncSet is the Schema for the SyncSet API
          displayName: SyncSet
          kind: SyncSet
          name: syncsets.hive.openshift.io
          version: v1
        - description: ClusterSyncLease is a record of the last time that SyncSets
            and SelectorSyncSets were applied to a cluster.
          displayName: ClusterSyncLease
          kind: ClusterSyncLease
          name: clustersyncleases.hiveinternal.openshift.io
          version: v1alpha1
        - description: ClusterSync is the status of all of the SelectorSyncSets and
            SyncSets that apply to a ClusterDeployment.
          displayName: ClusterSync
          kind: ClusterSync
          name: clustersyncs.hiveinternal.openshift.io
          version: v1alpha1
        - description: FakeClusterInstall represents a fake request to provision an
            agent based cluster.
          displayName: FakeClusterInstall
          kind: FakeClusterInstall
          name: fakeclusterinstalls.hiveinternal.openshift.io
          version: v1alpha1
      description: |-
        Hive for Red Hat OpenShift is an operator that runs on top of Kubernetes/OpenShift. Hive can be used to provision
        and perform initial configuration of OpenShift clusters.

        For provisioning OpenShift, Hive uses the [OpenShift installer](https://github.com/openshift/installer).

        ### Supported cloud providers
        * AWS
        * Azure
        * Google Cloud Platform
        * Red Hat OpenStack

        In the future Hive will support more cloud providers.

        ## Documentation

        * [Quick Start Guide](https://github.com/openshift/hive/blob/master/docs/quick_start.md)
        * [Using Hive](https://github.com/openshift/hive/blob/master/docs/using-hive.md)
        * [Hiveutil CLI](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)
        * [Frequently Asked Questions](https://github.com/openshift/hive/blob/master/docs/FAQs.md)
        * [Architecture](https://github.com/openshift/hive/blob/master/docs/architecture.md)

        See the [project README](https://github.com/openshift/hive#documentation) for more documentation.

        ## Post Install Configuration

        After installing the Hive for Red Hat OpenShift operator, create a cluster-scoped `HiveConfig` CR to configure Hive.
        Upon creation of `HiveConfig`, the operator will create the necessary Kubernetes resources to launch Hive.

        Example `HiveConfig`:
        ```yaml
        ---
          apiVersion: hive.openshift.io/v1
          kind: HiveConfig
          metadata:
            name: hive
          spec:
            managedDomains:
            - aws:
                credentialsSecretRef:
                  name: my-route53-creds
              domains:
              - my-base-domain.example.com
        ```

        ## Create a cluster

        To create a cluster with Hive, create a `ClusterDeployment` CR. You can also use the
        [`hiveutil` tool](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)'s `create-cluster` command
        to create clusters.
      displayName: Hive for Red Hat OpenShift
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kubernetes
      - openshift
      - multi-cluster
      - cluster
      links:
      - name: Hive GitHub
        url: https://github.com/openshift/hive
      - name: 'Hive: Cluster-as-a-Service'
        url: https://www.openshift.com/blog/openshift-hive-cluster-as-a-service
      - name: OpenShift
        url: https://www.openshift.com/
      maintainers:
      - email: openshift-hive-team@redhat.com
        name: Hive Team
      maturity: alpha
      provider:
        name: Red Hat
      relatedImages:
      - quay.io/openshift-hive/hive:v1.2.3883-849ebe8
      version: 1.2.3883-849ebe8
    name: alpha
  - currentCSV: hive-operator.v2.5.3516-a2ed9b3
    currentCSVDesc:
      annotations:
        alm-examples: '[{"apiVersion":"hive.openshift.io/v1","kind":"HiveConfig","metadata":{"name":"hive"},"spec":{"managedDomains":[{"aws":{"credentialsSecretRef":{"name":"my-route53-creds"}},"domains":["my-base-domain.example.com"]}]}}]'
        capabilities: Seamless Upgrades
        categories: OpenShift Optional
        certified: "false"
        containerImage: quay.io/openshift-hive/hive:v2.5.3516-a2ed9b3
        createdAt: "2022-06-03T13:24:12Z"
        description: OpenShift cluster provisioning and management at scale.
        operators.operatorframework.io/internal-objects: '["checkpoints.hive.openshift.io","clusterdeprovisions.hive.openshift.io","clusterprovisions.hive.openshift.io","clusterstates.hive.openshift.io","machinepoolnameleases.hive.openshift.io","clustersyncleases.hiveinternal.openshift.io","clustersyncs.hiveinternal.openshift.io","fakeclusterinstalls.hiveinternal.openshift.io"]'
        repository: https://github.com/openshift/hive
        support: Hive Team
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Checkpoint is the Schema for the backup of Hive objects.
          displayName: Checkpoint
          kind: Checkpoint
          name: checkpoints.hive.openshift.io
          version: v1
        - description: ClusterClaim represents a claim to a cluster from a cluster
            pool.
          displayName: ClusterClaim
          kind: ClusterClaim
          name: clusterclaims.hive.openshift.io
          version: v1
        - description: ClusterDeployment is the Schema for the clusterdeployments
            API
          displayName: ClusterDeployment
          kind: ClusterDeployment
          name: clusterdeployments.hive.openshift.io
          version: v1
        - description: ClusterDeprovision is the Schema for the clusterdeprovisions
            API
          displayName: ClusterDeprovision
          kind: ClusterDeprovision
          name: clusterdeprovisions.hive.openshift.io
          version: v1
        - description: ClusterImageSet is the Schema for the clusterimagesets API
          displayName: ClusterImageSet
          kind: ClusterImageSet
          name: clusterimagesets.hive.openshift.io
          version: v1
        - description: ClusterPool represents a pool of clusters that should be kept
            ready to be given out to users. Clusters are removed from the pool once
            claimed and then automatically replaced with a new one.
          displayName: ClusterPool
          kind: ClusterPool
          name: clusterpools.hive.openshift.io
          version: v1
        - description: ClusterProvision is the Schema for the clusterprovisions API
          displayName: ClusterProvision
          kind: ClusterProvision
          name: clusterprovisions.hive.openshift.io
          version: v1
        - description: ClusterRelocate is the Schema for the ClusterRelocates API
          displayName: ClusterRelocate
          kind: ClusterRelocate
          name: clusterrelocates.hive.openshift.io
          version: v1
        - description: ClusterState is the Schema for the clusterstates API
          displayName: ClusterState
          kind: ClusterState
          name: clusterstates.hive.openshift.io
          version: v1
        - description: DNSZone is the Schema for the dnszones API
          displayName: DNSZone
          kind: DNSZone
          name: dnszones.hive.openshift.io
          version: v1
        - description: HiveConfig is the Schema for the hives API
          displayName: HiveConfig
          kind: HiveConfig
          name: hiveconfigs.hive.openshift.io
          version: v1
        - description: MachinePoolNameLease is the Schema for the MachinePoolNameLeases
            API. This resource is mostly empty as we're primarily relying on the name
            to determine if a lease is available. Note that not all cloud providers
            require the use of a lease for naming, at present this is only required
            for GCP where we're extremely restricted on name lengths.
          displayName: MachinePoolNameLease
          kind: MachinePoolNameLease
          name: machinepoolnameleases.hive.openshift.io
          version: v1
        - description: MachinePool is the Schema for the machinepools API
          displayName: MachinePool
          kind: MachinePool
          name: machinepools.hive.openshift.io
          version: v1
        - description: SelectorSyncIdentityProvider is the Schema for the SelectorSyncSet
            API
          displayName: SelectorSyncIdentityProvider
          kind: SelectorSyncIdentityProvider
          name: selectorsyncidentityproviders.hive.openshift.io
          version: v1
        - description: SelectorSyncSet is the Schema for the SelectorSyncSet API
          displayName: SelectorSyncSet
          kind: SelectorSyncSet
          name: selectorsyncsets.hive.openshift.io
          version: v1
        - description: SyncIdentityProvider is the Schema for the SyncIdentityProvider
            API
          displayName: SyncIdentityProvider
          kind: SyncIdentityProvider
          name: syncidentityproviders.hive.openshift.io
          version: v1
        - description: SyncSet is the Schema for the SyncSet API
          displayName: SyncSet
          kind: SyncSet
          name: syncsets.hive.openshift.io
          version: v1
        - description: ClusterSyncLease is a record of the last time that SyncSets
            and SelectorSyncSets were applied to a cluster.
          displayName: ClusterSyncLease
          kind: ClusterSyncLease
          name: clustersyncleases.hiveinternal.openshift.io
          version: v1alpha1
        - description: ClusterSync is the status of all of the SelectorSyncSets and
            SyncSets that apply to a ClusterDeployment.
          displayName: ClusterSync
          kind: ClusterSync
          name: clustersyncs.hiveinternal.openshift.io
          version: v1alpha1
        - description: FakeClusterInstall represents a fake request to provision an
            agent based cluster.
          displayName: FakeClusterInstall
          kind: FakeClusterInstall
          name: fakeclusterinstalls.hiveinternal.openshift.io
          version: v1alpha1
      description: |-
        Hive for Red Hat OpenShift is an operator that runs on top of Kubernetes/OpenShift. Hive can be used to provision
        and perform initial configuration of OpenShift clusters.

        For provisioning OpenShift, Hive uses the [OpenShift installer](https://github.com/openshift/installer).

        ### Supported cloud providers
        * AWS
        * Azure
        * Google Cloud Platform
        * Red Hat OpenStack

        In the future Hive will support more cloud providers.

        ## Documentation

        * [Quick Start Guide](https://github.com/openshift/hive/blob/master/docs/quick_start.md)
        * [Using Hive](https://github.com/openshift/hive/blob/master/docs/using-hive.md)
        * [Hiveutil CLI](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)
        * [Frequently Asked Questions](https://github.com/openshift/hive/blob/master/docs/FAQs.md)
        * [Architecture](https://github.com/openshift/hive/blob/master/docs/architecture.md)

        See the [project README](https://github.com/openshift/hive#documentation) for more documentation.

        ## Post Install Configuration

        After installing the Hive for Red Hat OpenShift operator, create a cluster-scoped `HiveConfig` CR to configure Hive.
        Upon creation of `HiveConfig`, the operator will create the necessary Kubernetes resources to launch Hive.

        Example `HiveConfig`:
        ```yaml
        ---
          apiVersion: hive.openshift.io/v1
          kind: HiveConfig
          metadata:
            name: hive
          spec:
            managedDomains:
            - aws:
                credentialsSecretRef:
                  name: my-route53-creds
              domains:
              - my-base-domain.example.com
        ```

        ## Create a cluster

        To create a cluster with Hive, create a `ClusterDeployment` CR. You can also use the
        [`hiveutil` tool](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)'s `create-cluster` command
        to create clusters.
      displayName: Hive for Red Hat OpenShift
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kubernetes
      - openshift
      - multi-cluster
      - cluster
      links:
      - name: Hive GitHub
        url: https://github.com/openshift/hive
      - name: 'Hive: Cluster-as-a-Service'
        url: https://www.openshift.com/blog/openshift-hive-cluster-as-a-service
      - name: OpenShift
        url: https://www.openshift.com/
      maintainers:
      - email: openshift-hive-team@redhat.com
        name: Hive Team
      maturity: alpha
      provider:
        name: Red Hat
      relatedImages:
      - quay.io/openshift-hive/hive:v2.5.3516-a2ed9b3
      version: 2.5.3516-a2ed9b3
    name: mce-2.0
  - currentCSV: hive-operator.v1.0.11
    currentCSVDesc:
      annotations:
        alm-examples: '[{"apiVersion":"hive.openshift.io/v1","kind":"HiveConfig","metadata":{"name":"hive"},"spec":{"managedDomains":[{"aws":{"credentialsSecretRef":{"name":"my-route53-creds"}},"domains":["my-base-domain.example.com"]}]}}]'
        capabilities: Seamless Upgrades
        categories: OpenShift Optional
        certified: "false"
        containerImage: quay.io/openshift-hive/hive:v1.0.11
        createdAt: "2020-10-07T11:48:51Z"
        description: OpenShift cluster provisioning and management at scale.
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        repository: https://github.com/openshift/hive
        support: Hive Team
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: ClusterDeployment is the Schema for the clusterdeployments
            API
          displayName: ClusterDeployment
          kind: ClusterDeployment
          name: clusterdeployments.hive.openshift.io
          version: v1
        - description: ClusterState is the Schema for the clusterstates API
          displayName: ClusterState
          kind: ClusterState
          name: clusterstates.hive.openshift.io
          version: v1
        - description: DNSZone is the Schema for the dnszones API
          displayName: DNSZone
          kind: DNSZone
          name: dnszones.hive.openshift.io
          version: v1
        - description: ClusterClaim represents a claim to a cluster from a cluster
            pool.
          displayName: ClusterClaim
          kind: ClusterClaim
          name: clusterclaims.hive.openshift.io
          version: v1
        - description: ClusterImageSet is the Schema for the clusterimagesets API
          displayName: ClusterImageSet
          kind: ClusterImageSet
          name: clusterimagesets.hive.openshift.io
          version: v1
        - description: ClusterPool represents a pool of clusters that should be kept
            ready to be given out to users. Clusters are removed from the pool once
            claimed and then automatically replaced with a new one.
          displayName: ClusterPool
          kind: ClusterPool
          name: clusterpools.hive.openshift.io
          version: v1
        - description: ClusterRelocate is the Schema for the ClusterRelocates API
          displayName: ClusterRelocate
          kind: ClusterRelocate
          name: clusterrelocates.hive.openshift.io
          version: v1
        - description: Checkpoint is the Schema for the backup of Hive objects.
          displayName: Checkpoint
          kind: Checkpoint
          name: checkpoints.hive.openshift.io
          version: v1
        - description: ClusterSyncLease is a record of the last time that SyncSets
            and SelectorSyncSets were applied to a cluster.
          displayName: ClusterSyncLease
          kind: ClusterSyncLease
          name: clustersyncleases.hiveinternal.openshift.io
          version: v1alpha1
        - description: SelectorSyncSet is the Schema for the SelectorSyncSet API
          displayName: SelectorSyncSet
          kind: SelectorSyncSet
          name: selectorsyncsets.hive.openshift.io
          version: v1
        - description: MachinePool is the Schema for the machinepools API
          displayName: MachinePool
          kind: MachinePool
          name: machinepools.hive.openshift.io
          version: v1
        - description: ClusterProvision is the Schema for the clusterprovisions API
          displayName: ClusterProvision
          kind: ClusterProvision
          name: clusterprovisions.hive.openshift.io
          version: v1
        - description: ClusterDeprovision is the Schema for the clusterdeprovisions
            API
          displayName: ClusterDeprovision
          kind: ClusterDeprovision
          name: clusterdeprovisions.hive.openshift.io
          version: v1
        - description: ClusterSync is the status of all of the SelectorSyncSets and
            SyncSets that apply to a ClusterDeployment.
          displayName: ClusterSync
          kind: ClusterSync
          name: clustersyncs.hiveinternal.openshift.io
          version: v1alpha1
        - description: SyncIdentityProvider is the Schema for the SyncIdentityProvider
            API
          displayName: SyncIdentityProvider
          kind: SyncIdentityProvider
          name: syncidentityproviders.hive.openshift.io
          version: v1
        - description: MachinePoolNameLease is the Schema for the MachinePoolNameLeases
            API. This resource is mostly empty as we're primarily relying on the name
            to determine if a lease is available. Note that not all cloud providers
            require the use of a lease for naming, at present this is only required
            for GCP where we're extremely restricted on name lengths.
          displayName: MachinePoolNameLease
          kind: MachinePoolNameLease
          name: machinepoolnameleases.hive.openshift.io
          version: v1
        - description: HiveConfig is the Schema for the hives API
          displayName: HiveConfig
          kind: HiveConfig
          name: hiveconfigs.hive.openshift.io
          version: v1
        - description: SyncSet is the Schema for the SyncSet API
          displayName: SyncSet
          kind: SyncSet
          name: syncsets.hive.openshift.io
          version: v1
        - description: SelectorSyncIdentityProvider is the Schema for the SelectorSyncSet
            API
          displayName: SelectorSyncIdentityProvider
          kind: SelectorSyncIdentityProvider
          name: selectorsyncidentityproviders.hive.openshift.io
          version: v1
      description: |-
        Hive for Red Hat OpenShift is an operator that runs on top of Kubernetes/OpenShift. Hive can be used to provision
        and perform initial configuration of OpenShift clusters.

        For provisioning OpenShift, Hive uses the [OpenShift installer](https://github.com/openshift/installer).

        ### Supported cloud providers
        * AWS
        * Azure
        * Google Cloud Platform
        * Red Hat OpenStack

        In the future Hive will support more cloud providers.

        ## Documentation

        * [Quick Start Guide](https://github.com/openshift/hive/blob/master/docs/quick_start.md)
        * [Using Hive](https://github.com/openshift/hive/blob/master/docs/using-hive.md)
        * [Hiveutil CLI](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)
        * [Frequently Asked Questions](https://github.com/openshift/hive/blob/master/docs/FAQs.md)
        * [Architecture](https://github.com/openshift/hive/blob/master/docs/architecture.md)

        See the [project README](https://github.com/openshift/hive#documentation) for more documentation.

        ## Post Install Configuration

        After installing the Hive for Red Hat OpenShift operator, create a cluster-scoped `HiveConfig` CR to configure Hive.
        Upon creation of `HiveConfig`, the operator will create the necessary Kubernetes resources to launch Hive.

        Example `HiveConfig`:
        ```yaml
        ---
          apiVersion: hive.openshift.io/v1
          kind: HiveConfig
          metadata:
            name: hive
          spec:
            managedDomains:
            - aws:
                credentialsSecretRef:
                  name: my-route53-creds
              domains:
              - my-base-domain.example.com
        ```

        ## Create a cluster

        To create a cluster with Hive, create a `ClusterDeployment` CR. You can also use the
        [`hiveutil` tool](https://github.com/openshift/hive/blob/master/docs/hiveutil.md)'s `create-cluster` command
        to create clusters.
      displayName: Hive for Red Hat OpenShift
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: true
        type: MultiNamespace
      - supported: true
        type: AllNamespaces
      keywords:
      - kubernetes
      - openshift
      - multi-cluster
      - cluster
      links:
      - name: Hive GitHub
        url: https://github.com/openshift/hive
      - name: 'Hive: Cluster-as-a-Service'
        url: https://www.openshift.com/blog/openshift-hive-cluster-as-a-service
      - name: OpenShift
        url: https://www.openshift.com/
      maintainers:
      - email: openshift-hive-team@redhat.com
        name: Hive Team
      maturity: alpha
      provider:
        name: Red Hat
      relatedImages:
      - quay.io/openshift-hive/hive:v1.0.11
      version: 1.0.11
    name: ocm-2.1
  defaultChannel: alpha
  packageName: hive-operator
  provider:
    name: Red Hat
