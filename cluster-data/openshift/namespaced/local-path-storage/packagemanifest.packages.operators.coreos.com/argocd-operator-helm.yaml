apiVersion: packages.operators.coreos.com/v1
kind: PackageManifest
metadata:
  creationTimestamp: "2022-10-03T18:25:13Z"
  labels:
    catalog: operatorhubio-catalog
    catalog-namespace: olm
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    provider: Disposable Zone
    provider-url: ""
  name: argocd-operator-helm
  namespace: local-path-storage
spec: {}
status:
  catalogSource: operatorhubio-catalog
  catalogSourceDisplayName: Community Operators
  catalogSourceNamespace: olm
  catalogSourcePublisher: OperatorHub.io
  channels:
  - currentCSV: argocd-operator-helm.v0.0.7
    currentCSVDesc:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "argoproj.io/v1alpha1",
              "kind": "ArgoCD",
              "metadata": {
                "name": "argocd"
              },
              "spec": {
                "nameOverride": "argocd",
                "fullnameOverride": "",
                "installCRDs": false,
                "global": {
                  "image": {
                    "repository": "docker.io/argoproj/argocd@sha256:0a8fa1fee472568c2ec49dc1a71d3af56613b6b62353560a3682abc24492daee",
                    "imagePullPolicy": "IfNotPresent"
                  },
                  "securityContext": {
                  },
                  "imagePullSecrets": [

                  ],
                  "hostAliases": [

                  ]
                },
                "controller": {
                  "name": "application-controller",
                  "image": {
                    "repository": null,
                    "imagePullPolicy": null
                  },
                  "args": {
                    "statusProcessors": "20",
                    "operationProcessors": "10"
                  },
                  "logLevel": "info",
                  "extraArgs": [

                  ],
                  "env": [

                  ],
                  "podAnnotations": {
                  },
                  "podLabels": {
                  },
                  "containerSecurityContext": {
                  },
                  "containerPort": 8082,
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "volumeMounts": [

                  ],
                  "volumes": [

                  ],
                  "service": {
                    "annotations": {
                    },
                    "labels": {
                    },
                    "port": 8082,
                    "portName": "https-controller"
                  },
                  "nodeSelector": {
                  },
                  "tolerations": [

                  ],
                  "affinity": {
                  },
                  "priorityClassName": "",
                  "resources": {
                  },
                  "serviceAccount": {
                    "create": true,
                    "name": "argocd-application-controller",
                    "annotations": {
                    }
                  },
                  "metrics": {
                    "enabled": false,
                    "service": {
                      "annotations": {
                      },
                      "labels": {
                      },
                      "servicePort": 8082
                    },
                    "serviceMonitor": {
                      "enabled": false
                    },
                    "rules": {
                      "enabled": false,
                      "spec": [

                      ]
                    }
                  },
                  "clusterAdminAccess": {
                    "enabled": true
                  }
                },
                "dex": {
                  "enabled": true,
                  "name": "dex-server",
                  "image": {
                    "repository": "quay.io/dexidp/dex@sha256:01e996b4b60edcc5cc042227c6965dd63ba68764c25d86b481b0d65f6e4da308",
                    "imagePullPolicy": "IfNotPresent"
                  },
                  "initImage": {
                    "repository": null,
                    "tag": null,
                    "imagePullPolicy": null
                  },
                  "env": [

                  ],
                  "podAnnotations": {
                  },
                  "podLabels": {
                  },
                  "serviceAccount": {
                    "create": true,
                    "name": "argocd-dex-server"
                  },
                  "volumeMounts": [
                    {
                      "name": "static-files",
                      "mountPath": "/shared"
                    }
                  ],
                  "volumes": [
                    {
                      "name": "static-files",
                      "emptyDir": {
                      }
                    }
                  ],
                  "containerPortHttp": 5556,
                  "servicePortHttp": 5556,
                  "containerPortGrpc": 5557,
                  "servicePortGrpc": 5557,
                  "nodeSelector": {
                  },
                  "tolerations": [

                  ],
                  "affinity": {
                  },
                  "priorityClassName": "",
                  "containerSecurityContext": {
                  },
                  "resources": {
                  }
                },
                "redis": {
                  "enabled": true,
                  "name": "redis",
                  "image": {
                    "repository": "redis@sha256:de935cb5eb1d96a5b75c871cd408a728b89d100712ae4599eb994bb7a41a9336",
                    "imagePullPolicy": "IfNotPresent"
                  },
                  "containerPort": 6379,
                  "servicePort": 6379,
                  "env": [

                  ],
                  "podAnnotations": {
                  },
                  "podLabels": {
                  },
                  "nodeSelector": {
                  },
                  "tolerations": [

                  ],
                  "affinity": {
                  },
                  "priorityClassName": "",
                  "containerSecurityContext": {
                  },
                  "resources": {
                  },
                  "volumeMounts": [

                  ],
                  "volumes": [

                  ]
                },
                "redis-ha": {
                  "enabled": false,
                  "exporter": {
                    "enabled": true
                  },
                  "persistentVolume": {
                    "enabled": false
                  },
                  "redis": {
                    "masterGroupName": "argocd",
                    "config": {
                      "save": "\"\""
                    }
                  },
                  "haproxy": {
                    "enabled": true,
                    "metrics": {
                      "enabled": true
                    }
                  },
                  "image": {
                    "tag": "5.0.8-alpine"
                  }
                },
                "server": {
                  "name": "server",
                  "replicas": 1,
                  "autoscaling": {
                    "enabled": false,
                    "minReplicas": 1,
                    "maxReplicas": 5,
                    "targetCPUUtilizationPercentage": 50,
                    "targetMemoryUtilizationPercentage": 50
                  },
                  "image": {
                    "repository": null,
                    "tag": null,
                    "imagePullPolicy": null
                  },
                  "extraArgs": [

                  ],
                  "env": [

                  ],
                  "logLevel": "info",
                  "podAnnotations": {
                  },
                  "podLabels": {
                  },
                  "containerPort": 8080,
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "volumeMounts": [

                  ],
                  "volumes": [

                  ],
                  "nodeSelector": {
                  },
                  "tolerations": [

                  ],
                  "affinity": {
                  },
                  "priorityClassName": "",
                  "containerSecurityContext": {
                  },
                  "resources": {
                  },
                  "certificate": {
                    "enabled": false,
                    "domain": "argocd.example.com",
                    "issuer": {
                    },
                    "additionalHosts": [

                    ]
                  },
                  "service": {
                    "annotations": {
                    },
                    "labels": {
                    },
                    "type": "ClusterIP",
                    "servicePortHttp": 80,
                    "servicePortHttps": 443,
                    "servicePortHttpName": "http",
                    "servicePortHttpsName": "https",
                    "loadBalancerIP": "",
                    "loadBalancerSourceRanges": [

                    ]
                  },
                  "metrics": {
                    "enabled": false,
                    "service": {
                      "annotations": {
                      },
                      "labels": {
                      },
                      "servicePort": 8083
                    },
                    "serviceMonitor": {
                      "enabled": false
                    }
                  },
                  "serviceAccount": {
                    "create": true,
                    "name": "argocd-server",
                    "annotations": {
                    }
                  },
                  "ingress": {
                    "enabled": false,
                    "annotations": {
                    },
                    "labels": {
                    },
                    "hosts": [

                    ],
                    "paths": [
                      "/"
                    ],
                    "tls": [

                    ],
                    "https": false
                  },
                  "ingressGrpc": {
                    "enabled": false,
                    "annotations": {
                    },
                    "labels": {
                    },
                    "hosts": [

                    ],
                    "paths": [
                      "/"
                    ],
                    "tls": [

                    ],
                    "https": false
                  },
                  "route": {
                    "enabled": false,
                    "hostname": ""
                  },
                  "config": {
                    "application.instanceLabelKey": "argocd.argoproj.io/instance"
                  },
                  "rbacConfig": {
                  },
                  "additionalApplications": [

                  ],
                  "additionalProjects": [

                  ],
                  "clusterAdminAccess": {
                    "enabled": true
                  },
                  "GKEbackendConfig": {
                    "enabled": false,
                    "spec": {
                    }
                  }
                },
                "repoServer": {
                  "name": "repo-server",
                  "replicas": 1,
                  "autoscaling": {
                    "enabled": false,
                    "minReplicas": 1,
                    "maxReplicas": 5,
                    "targetCPUUtilizationPercentage": 50,
                    "targetMemoryUtilizationPercentage": 50
                  },
                  "image": {
                    "repository": null,
                    "tag": null,
                    "imagePullPolicy": null
                  },
                  "extraArgs": [

                  ],
                  "env": [

                  ],
                  "logLevel": "info",
                  "podAnnotations": {
                  },
                  "podLabels": {
                  },
                  "containerPort": 8081,
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "volumeMounts": [

                  ],
                  "volumes": [

                  ],
                  "nodeSelector": {
                  },
                  "tolerations": [

                  ],
                  "affinity": {
                  },
                  "priorityClassName": "",
                  "containerSecurityContext": {
                  },
                  "resources": {
                  },
                  "service": {
                    "annotations": {
                    },
                    "labels": {
                    },
                    "port": 8081,
                    "portName": "https-repo-server"
                  },
                  "metrics": {
                    "enabled": false,
                    "service": {
                      "annotations": {
                      },
                      "labels": {
                      },
                      "servicePort": 8084
                    },
                    "serviceMonitor": {
                      "enabled": false
                    }
                  },
                  "serviceAccount": {
                    "create": false,
                    "annotations": {
                    }
                  }
                },
                "configs": {
                  "knownHosts": {
                    "data": {
                      "ssh_known_hosts": "bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"
                    }
                  },
                  "tlsCerts": {
                  },
                  "repositoryCredentials": {
                  },
                  "secret": {
                    "createSecret": true,
                    "annotations": {
                    },
                    "githubSecret": "",
                    "gitlabSecret": "",
                    "bitbucketServerSecret": "",
                    "bitbucketUUID": "",
                    "gogsSecret": "",
                    "extra": {
                    },
                    "argocdServerTlsConfig": {
                    },
                    "argocdServerAdminPasswordMtime": "2006-01-02T15:04:05Z",
                    "argocdServerAdminPassword": "$2a$10$tH8CkD0wpAptBqnlp4u.EONVP7b/ae16nhDYewXWSIyGhC7xepYya"
                  }
                },
                "openshift": {
                  "enabled": false,
                  "route": {
                    "enabled": true,
                    "host": "",
                    "annotations": {
                    }
                  },
                  "oAuth": {
                    "enabled": false,
                    "config": {
                      "image": {
                        "repository": "quay.io/openshift/origin-cli@sha256:509e052d0f2d531b666b7da9fa49c5558c76ce5d286456f0859c0a49b16d6bf2",
                        "tag": "latest",
                        "imagePullPolicy": "IfNotPresent"
                      },
                      "base": {
                        "url": "openshiftOAuthConfigBaseUrl"
                      },
                      "redirect": {
                        "url": "openshiftOAuthConfigRedirectURI"
                      },
                      "dex": {
                        "dex.config": "connectors:\n  - type: openshift\n    # Required field for connector id.\n    id: openshift\n    # Required field for connector name.\n    name: OpenShift\n    config:\n      # Location of the OpenShift API Server. Get it with \"oc whoami --show-server\" or\n      # leave this default for automatic discovery (recommended)\n      issuer: openshiftOAuthConfigIssuer\n      # Name of the OpenShift OAuth Client with format: \"system:serviceaccount:<namespace>:<service_account_name>\" or\n      # leave this default for automatic discovery (recommended)\n      clientID: openshiftOAuthConfigClientID\n      # Value of the OpenShift OAuth client secret. Get it with \"oc serviceaccounts get-token <argocd_dex_server_service_account_name>\" or\n      # leave this default for automatic discovery (recommended)\n      clientSecret: openshiftOAuthConfigClientSecret\n      # ArgoCD redirect URI in format: \"https://<argocd_host>/api/dex/callback\" or\n      # leave this default for automatic discovery (recommended)\n      redirectURI: openshiftOAuthConfigRedirectURI\n      # Disable SSL verification\n      insecureCA: true\n      # Optional: The location of file containing SSL certificates to communicate to OpenShift\n      # rootCA: /etc/ssl/openshift.pem\n"
                      }
                    },
                    "rbac": {
                      "enabled": true,
                      "groups": {
                        "admins": {
                          "name": "argocd-admins",
                          "role": "role:admin"
                        },
                        "developers": {
                          "name": "argoc-developers",
                          "role": "role:readonly"
                        }
                      },
                      "users": {
                        "admins": [
                          "developer",
                          "kubedadmin",
                          "admin"
                        ],
                        "developers": [

                        ]
                      }
                    }
                  }
                }
              }
            }
          ]
        capabilities: Basic Install
        categories: Integration & Delivery
        certified: "false"
        containerImage: quay.io/disposab1e/argocd-operator-helm@sha256:c74e73d7cdc6e571ba2a69d59b4ec68549b2ea4563763771be80f2d55f0b4524
        createdAt: "2020-07-07 01:01:01"
        description: Declarative Continuous Delivery following Gitops.
        operatorframework.io/suggested-namespace: argocd
        operatorhub.io/ui-metadata-max-k8s-version: "1.21"
        repository: https://github.com/disposab1e/argocd-operator-helm.git
        support: Community
      apiservicedefinitions: {}
      customresourcedefinitions:
        owned:
        - description: Represents the Argo CD installation.
          displayName: ArgoCD
          kind: ArgoCD
          name: argocds.argoproj.io
          version: v1alpha1
      description: "[Argo CD](https://argoproj.github.io/argo-cd/) is a declarative,
        GitOps continuous delivery tool for Kubernetes.\n\n### Overview\nThis **community
        maintained** [Argo CD Operator (Helm)](https://github.com/disposab1e/argocd-operator-helm)
        \nis based on the **community maintained** [Argo CD Helm Chart](https://github.com/argoproj/argo-helm/tree/master/charts/argo-cd)
        \nand currently installs the non-HA version of [Argo CD](https://argoproj.github.io/argo-cd/)
        in Kubernetes. \n\n\n### Features\n* Easy configuration and installation\n\n###
        Install\n\nThe operator shares all [configuration values](https://github.com/disposab1e/argocd-operator-helm/blob/release-0.0.7/helm-charts/argo-cd/README.md)
        \nfrom the Argo CD Helm Chart and manages a single namespace installation
        of Argo CD. \nTherefore you have to install the operator and Argo CD in the
        same namespace. \nFor simplicity we recommend creating a namespace **argocd**.
        \n\nTo install Argo CD create a new [ArgoCD resource](https://github.com/disposab1e/argocd-operator-helm/blob/release-0.0.7/examples/k8s.yaml)
        \nwith your own customizations or use the provided example from the Web UI.\n\n###
        Documentation\n\nSee the [documentation](https://argocd-operator-helm.readthedocs.io/en/0.0.7/)
        \nand [examples](https://github.com/disposab1e/argocd-operator-helm/blob/release-0.0.7/examples/)
        \nor visit the [official github repository](https://github.com/disposab1e/argocd-operator-helm)
        for more information.\n"
      displayName: Argo CD Operator (Helm)
      installModes:
      - supported: true
        type: OwnNamespace
      - supported: true
        type: SingleNamespace
      - supported: false
        type: MultiNamespace
      - supported: false
        type: AllNamespaces
      links:
      - name: Argo CD
        url: https://argoproj.github.io/argo-cd/
      - name: GitHub
        url: https://github.com/disposab1e/argocd-operator-helm.git
      - name: Read the Docs
        url: https://argocd-operator-helm.rtfd.io
      maintainers:
      - email: disposable.source@icloud.com
        name: Disposable Zone
      maturity: alpha
      provider:
        name: Disposable Zone
      relatedImages:
      - quay.io/disposab1e/argocd-operator-helm@sha256:c74e73d7cdc6e571ba2a69d59b4ec68549b2ea4563763771be80f2d55f0b4524
      version: 0.0.7
    name: alpha
  defaultChannel: alpha
  packageName: argocd-operator-helm
  provider:
    name: Disposable Zone
